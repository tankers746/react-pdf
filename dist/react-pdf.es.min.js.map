{"version":3,"file":"react-pdf.es.min.js","sources":["../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/transformFontWeight.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/utils/warning.js","../src/utils/deepMerge.js","../src/utils/isFunction.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/elements/Page.js","../src/elements/View.js","../src/font/font.js","../src/font/emoji.js","../src/font/standard.js","../src/font/hyphenation.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/index.js","../src/utils/url.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/elements/Root.js","../src/elements/Link.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/node.js"],"sourcesContent":["const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\r\n\r\nexport default upperFirst;\r\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\r\n\r\nconst matchPercent = value => {\r\n  const match = isPercent(value);\r\n\r\n  if (match) {\r\n    const value = parseFloat(match[1], 10);\r\n    const percent = value / 100;\r\n\r\n    return {\r\n      value,\r\n      percent,\r\n      absValue: Math.abs(value),\r\n      absPercent: Math.abs(percent),\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default matchPercent;\r\n","import Yoga from 'yoga-layout';\r\n\r\nimport upperFirst from '../utils/upperFirst';\r\nimport matchPercent from '../utils/matchPercent';\r\n\r\nconst YOGA_CONFIG = Yoga.Config.create();\r\nYOGA_CONFIG.setPointScaleFactor(0);\r\n\r\nclass Node {\r\n  constructor() {\r\n    this.parent = null;\r\n    this.children = [];\r\n    this.computed = false;\r\n    this.layout = Yoga.Node.createWithConfig(YOGA_CONFIG);\r\n  }\r\n\r\n  appendChild(child) {\r\n    if (child) {\r\n      child.parent = this;\r\n      this.children.push(child);\r\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\r\n    }\r\n  }\r\n\r\n  appendChildBefore(child, beforeChild) {\r\n    const index = this.children.indexOf(beforeChild);\r\n\r\n    if (index !== -1 && child) {\r\n      child.parent = this;\r\n      this.children.splice(index, 0, child);\r\n      this.layout.insertChild(child.layout, index);\r\n    }\r\n  }\r\n\r\n  removeChild(child) {\r\n    const index = this.children.indexOf(child);\r\n\r\n    if (index !== -1) {\r\n      child.parent = null;\r\n      this.children.splice(index, 1);\r\n      this.layout.removeChild(child.layout);\r\n    }\r\n\r\n    child.cleanup();\r\n  }\r\n\r\n  removeAllChilds() {\r\n    const children = [...this.children];\r\n    for (let i = 0; i < children.length; i++) {\r\n      children[i].remove();\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.parent.removeChild(this);\r\n  }\r\n\r\n  setDimension(attr, value) {\r\n    const fixedMethod = `set${upperFirst(attr)}`;\r\n    const percentMethod = `${fixedMethod}Percent`;\r\n    const percent = matchPercent(value);\r\n\r\n    if (percent) {\r\n      this.layout[percentMethod](percent.value);\r\n    } else {\r\n      this.layout[fixedMethod](value);\r\n    }\r\n  }\r\n\r\n  setPosition(edge, value) {\r\n    const percent = matchPercent(value);\r\n\r\n    if (percent) {\r\n      this.layout.setPositionPercent(edge, percent.value);\r\n    } else {\r\n      this.layout.setPosition(edge, value);\r\n    }\r\n  }\r\n\r\n  setPadding(edge, value) {\r\n    const percent = matchPercent(value);\r\n\r\n    if (percent) {\r\n      this.layout.setPaddingPercent(edge, percent.value);\r\n    } else {\r\n      this.layout.setPadding(edge, value);\r\n    }\r\n  }\r\n\r\n  setMargin(edge, value) {\r\n    const percent = matchPercent(value);\r\n\r\n    if (percent) {\r\n      this.layout.setMarginPercent(edge, percent.value);\r\n    } else {\r\n      this.layout.setMargin(edge, value);\r\n    }\r\n  }\r\n\r\n  setBorder(edge, value) {\r\n    if (matchPercent(value)) {\r\n      throw new Error('Node: You cannot set percentage border widths');\r\n    }\r\n    this.layout.setBorder(edge, value);\r\n  }\r\n\r\n  getAbsoluteLayout() {\r\n    const parent = this.parent;\r\n    const parentLayout =\r\n      parent && parent.getAbsoluteLayout\r\n        ? parent.getAbsoluteLayout()\r\n        : { left: 0, top: 0 };\r\n\r\n    return {\r\n      left: this.left + parentLayout.left,\r\n      top: this.top + parentLayout.top,\r\n      height: this.height,\r\n      width: this.width,\r\n    };\r\n  }\r\n\r\n  copyStyle(node) {\r\n    this.layout.copyStyle(node.layout);\r\n  }\r\n\r\n  calculateLayout() {\r\n    this.layout.calculateLayout();\r\n    this.computed = true;\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.children.length === 0;\r\n  }\r\n\r\n  markDirty() {\r\n    return this.layout.markDirty();\r\n  }\r\n\r\n  onAppendDynamically() {}\r\n\r\n  cleanup() {\r\n    this.children.forEach(c => c.cleanup());\r\n    this.layout.unsetMeasureFunc();\r\n    Yoga.Node.destroy(this.layout);\r\n  }\r\n\r\n  get position() {\r\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\r\n      ? 'absolute'\r\n      : 'relative';\r\n  }\r\n\r\n  get top() {\r\n    return this.layout.getComputedTop() || 0;\r\n  }\r\n\r\n  get left() {\r\n    return this.layout.getComputedLeft() || 0;\r\n  }\r\n\r\n  get right() {\r\n    return this.layout.getComputedRight() || 0;\r\n  }\r\n\r\n  get bottom() {\r\n    return this.layout.getComputedBottom() || 0;\r\n  }\r\n\r\n  get width() {\r\n    return this.layout.getComputedWidth();\r\n  }\r\n\r\n  get minWidth() {\r\n    return this.layout.getMinWidth().value;\r\n  }\r\n\r\n  get maxWidth() {\r\n    return this.layout.getMaxWidth().value;\r\n  }\r\n\r\n  get height() {\r\n    return this.layout.getComputedHeight();\r\n  }\r\n\r\n  get minHeight() {\r\n    return this.layout.getMinHeight().value;\r\n  }\r\n\r\n  get maxHeight() {\r\n    return this.layout.getMaxHeight().value;\r\n  }\r\n\r\n  get paddingTop() {\r\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\r\n  }\r\n\r\n  get paddingRight() {\r\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\r\n  }\r\n\r\n  get paddingBottom() {\r\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\r\n  }\r\n\r\n  get paddingLeft() {\r\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\r\n  }\r\n\r\n  get marginTop() {\r\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\r\n  }\r\n\r\n  get marginRight() {\r\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\r\n  }\r\n\r\n  get marginBottom() {\r\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\r\n  }\r\n\r\n  get marginLeft() {\r\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\r\n  }\r\n\r\n  get borderTopWidth() {\r\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\r\n  }\r\n\r\n  get borderRightWidth() {\r\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\r\n  }\r\n\r\n  get borderBottomWidth() {\r\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\r\n  }\r\n\r\n  get borderLeftWidth() {\r\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\r\n  }\r\n\r\n  get padding() {\r\n    return {\r\n      top: this.paddingTop,\r\n      right: this.paddingRight,\r\n      bottom: this.paddingBottom,\r\n      left: this.paddingLeft,\r\n    };\r\n  }\r\n\r\n  get margin() {\r\n    return {\r\n      top: this.marginTop,\r\n      right: this.marginRight,\r\n      bottom: this.marginBottom,\r\n      left: this.marginLeft,\r\n    };\r\n  }\r\n\r\n  set position(value) {\r\n    this.layout.setPositionType(\r\n      value === 'absolute'\r\n        ? Yoga.POSITION_TYPE_ABSOLUTE\r\n        : Yoga.POSITION_TYPE_RELATIVE,\r\n    );\r\n  }\r\n\r\n  set top(value) {\r\n    this.setPosition(Yoga.EDGE_TOP, value);\r\n  }\r\n\r\n  set left(value) {\r\n    this.setPosition(Yoga.EDGE_LEFT, value);\r\n  }\r\n\r\n  set right(value) {\r\n    this.setPosition(Yoga.EDGE_RIGHT, value);\r\n  }\r\n\r\n  set bottom(value) {\r\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\r\n  }\r\n\r\n  set width(value) {\r\n    this.setDimension('width', value);\r\n  }\r\n\r\n  set minWidth(value) {\r\n    this.setDimension('minWidth', value);\r\n  }\r\n\r\n  set maxWidth(value) {\r\n    this.setDimension('maxWidth', value);\r\n  }\r\n\r\n  set height(value) {\r\n    this.setDimension('height', value);\r\n  }\r\n\r\n  set minHeight(value) {\r\n    this.setDimension('minHeight', value);\r\n  }\r\n\r\n  set maxHeight(value) {\r\n    this.setDimension('maxHeight', value);\r\n  }\r\n\r\n  set paddingTop(value) {\r\n    this.setPadding(Yoga.EDGE_TOP, value);\r\n  }\r\n\r\n  set paddingRight(value) {\r\n    this.setPadding(Yoga.EDGE_RIGHT, value);\r\n  }\r\n\r\n  set paddingBottom(value) {\r\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\r\n  }\r\n\r\n  set paddingLeft(value) {\r\n    this.setPadding(Yoga.EDGE_LEFT, value);\r\n  }\r\n\r\n  set marginTop(value) {\r\n    this.setMargin(Yoga.EDGE_TOP, value);\r\n  }\r\n\r\n  set marginRight(value) {\r\n    this.setMargin(Yoga.EDGE_RIGHT, value);\r\n  }\r\n\r\n  set marginBottom(value) {\r\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\r\n  }\r\n\r\n  set marginLeft(value) {\r\n    this.setMargin(Yoga.EDGE_LEFT, value);\r\n  }\r\n\r\n  set padding(value) {\r\n    this.paddingTop = value;\r\n    this.paddingRight = value;\r\n    this.paddingBottom = value;\r\n    this.paddingLeft = value;\r\n  }\r\n\r\n  set margin(value) {\r\n    this.marginTop = value;\r\n    this.marginRight = value;\r\n    this.marginBottom = value;\r\n    this.marginLeft = value;\r\n  }\r\n\r\n  set borderTopWidth(value) {\r\n    this.setBorder(Yoga.EDGE_TOP, value);\r\n  }\r\n\r\n  set borderRightWidth(value) {\r\n    this.setBorder(Yoga.EDGE_RIGHT, value);\r\n  }\r\n\r\n  set borderBottomWidth(value) {\r\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\r\n  }\r\n\r\n  set borderLeftWidth(value) {\r\n    this.setBorder(Yoga.EDGE_LEFT, value);\r\n  }\r\n}\r\n\r\nexport default Node;\r\n","import Yoga from 'yoga-layout';\r\n\r\nconst yogaValue = (prop, value) => {\r\n  const isAlignType = prop =>\r\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\r\n\r\n  switch (value) {\r\n    case 'auto':\r\n      if (prop === 'alignSelf') {\r\n        return Yoga.ALIGN_AUTO;\r\n      }\r\n      break;\r\n    case 'flex':\r\n      return Yoga.DISPLAY_FLEX;\r\n    case 'none':\r\n      return Yoga.DISPLAY_NONE;\r\n    case 'row':\r\n      return Yoga.FLEX_DIRECTION_ROW;\r\n    case 'row-reverse':\r\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\r\n    case 'column':\r\n      return Yoga.FLEX_DIRECTION_COLUMN;\r\n    case 'column-reverse':\r\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\r\n    case 'stretch':\r\n      return Yoga.ALIGN_STRETCH;\r\n    case 'baseline':\r\n      return Yoga.ALIGN_BASELINE;\r\n    case 'space-around':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_SPACE_AROUND;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_SPACE_AROUND;\r\n      }\r\n      break;\r\n    case 'space-between':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_SPACE_BETWEEN;\r\n      }\r\n      break;\r\n    case 'around':\r\n      return Yoga.JUSTIFY_SPACE_AROUND;\r\n    case 'between':\r\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\r\n    case 'wrap':\r\n      return Yoga.WRAP_WRAP;\r\n    case 'wrap-reverse':\r\n      return Yoga.WRAP_WRAP_REVERSE;\r\n    case 'nowrap':\r\n      return Yoga.WRAP_NO_WRAP;\r\n    case 'flex-start':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_FLEX_START;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_FLEX_START;\r\n      }\r\n      break;\r\n    case 'flex-end':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_FLEX_END;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_FLEX_END;\r\n      }\r\n      break;\r\n    case 'center':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_CENTER;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_CENTER;\r\n      }\r\n      break;\r\n    default:\r\n      return value;\r\n  }\r\n};\r\n\r\n// These are not supported yet\r\n\r\n// ALIGN_AUTO: 0,\r\n// DIMENSION_WIDTH: 0,\r\n// DIMENSION_HEIGHT: 1,\r\n// DIRECTION_INHERIT: 0,\r\n// DIRECTION_LTR: 1,\r\n// DIRECTION_RTL: 2,\r\n// EDGE_LEFT: 0,\r\n// EDGE_TOP: 1,\r\n// EDGE_RIGHT: 2,\r\n// EDGE_BOTTOM: 3,\r\n// EDGE_START: 4,\r\n// EDGE_END: 5,\r\n// EDGE_HORIZONTAL: 6,\r\n// EDGE_VERTICAL: 7,\r\n// EDGE_ALL: 8,\r\n// MEASURE_MODE_UNDEFINED: 0,\r\n// MEASURE_MODE_EXACTLY: 1,\r\n// MEASURE_MODE_AT_MOST: 2,\r\n// NODE_TYPE_DEFAULT: 0,\r\n// NODE_TYPE_TEXT: 1,\r\n// OVERFLOW_VISIBLE: 0,\r\n// OVERFLOW_HIDDEN: 1,\r\n// OVERFLOW_SCROLL: 2,\r\n// POSITION_TYPE_RELATIVE: 0,\r\n// POSITION_TYPE_ABSOLUTE: 1,\r\n// PRINT_OPTIONS_LAYOUT: 1,\r\n// PRINT_OPTIONS_STYLE: 2,\r\n// PRINT_OPTIONS_CHILDREN: 4,\r\n// UNIT_UNDEFINED: 0,\r\n// UNIT_POINT: 1,\r\n// UNIT_PERCENT: 2,\r\n// UNIT_AUTO: 3,\r\n\r\nexport default yogaValue;\r\n","const DPI = 72; // 72pt per inch.\r\n\r\nconst parseValue = value => {\r\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw)?$/g.exec(value);\r\n\r\n  if (match) {\r\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\r\n  }\r\n\r\n  return { value, unit: undefined };\r\n};\r\n\r\nconst parseScalar = (value, container) => {\r\n  const scalar = parseValue(value);\r\n  switch (scalar.unit) {\r\n    case 'in':\r\n      return scalar.value * DPI;\r\n    case 'mm':\r\n      return scalar.value * (1 / 25.4) * DPI;\r\n    case 'cm':\r\n      return scalar.value * (1 / 2.54) * DPI;\r\n    case 'vh':\r\n      if (container.isAutoHeight) {\r\n        throw new Error(\r\n          'vh unit not supported in auto-height pages. Please specify page height if you want to use vh.',\r\n        );\r\n      }\r\n\r\n      return scalar.value * (container.height / 100);\r\n    case 'vw':\r\n      return scalar.value * (container.width / 100);\r\n    default:\r\n      return scalar.value;\r\n  }\r\n};\r\n\r\nexport default parseScalar;\r\n","export const isBorderStyle = (key, value) =>\r\n  key.match(/^border/) && typeof value === 'string';\r\n\r\nconst matchBorderShorthand = value =>\r\n  value.match(/(\\d+(px|in|mm|cm|pt|vw|vh)?)\\s(\\S+)\\s(\\S+)/);\r\n\r\n// Transforms shorthand border values\r\nexport const processBorders = (key, value) => {\r\n  const match = matchBorderShorthand(value);\r\n\r\n  if (match) {\r\n    if (key.match(/.Color/)) {\r\n      return match[4];\r\n    } else if (key.match(/.Style/)) {\r\n      return match[3];\r\n    } else if (key.match(/.Width/)) {\r\n      return match[1];\r\n    } else {\r\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\r\n    }\r\n  }\r\n\r\n  return value;\r\n};\r\n","export const isBoxModelStyle = (key, value) =>\r\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\r\n\r\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\r\n\r\n// Transforms shorthand margin and padding values\r\nexport const processBoxModel = (key, value) => {\r\n  const match = matchBoxModel(value);\r\n\r\n  if (match) {\r\n    if (key.match(/.Top/)) {\r\n      return match[0];\r\n    } else if (key.match(/.Right/)) {\r\n      return match[1] || match[0];\r\n    } else if (key.match(/.Bottom/)) {\r\n      return match[2] || match[0];\r\n    } else if (key.match(/.Left/)) {\r\n      return match[3] || match[1] || match[0];\r\n    } else {\r\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\r\n    }\r\n  }\r\n\r\n  return value;\r\n};\r\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\r\nconst FONT_WEIGHTS = {\r\n  thin: 100,\r\n  hairline: 100,\r\n  ultralight: 200,\r\n  extralight: 200,\r\n  light: 300,\r\n  normal: 400,\r\n  medium: 500,\r\n  semibold: 600,\r\n  demibold: 600,\r\n  bold: 700,\r\n  ultrabold: 800,\r\n  extrabold: 800,\r\n  heavy: 900,\r\n  black: 900,\r\n};\r\n\r\nexport const isFontWeightStyle = key => key.match(/^fontWeight/);\r\n\r\nexport const processFontWeight = value => {\r\n  if (!value) return FONT_WEIGHTS.normal;\r\n  if (typeof value === 'number') return value;\r\n  return FONT_WEIGHTS[value.toLowerCase()];\r\n};\r\n","export const isObjectPositionStyle = (key, value) =>\r\n  key.match(/^objectPosition/) && typeof value === 'string';\r\n\r\nconst matchObjectPosition = value =>\r\n  value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\r\n\r\n// Transforms shorthand objectPosition values\r\nexport const processObjectPosition = (key, value) => {\r\n  const match = matchObjectPosition(value);\r\n\r\n  if (match) {\r\n    if (key.match(/.X/)) {\r\n      return match[0];\r\n    } else if (key.match(/.Y/)) {\r\n      return match[1];\r\n    } else {\r\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\r\n    }\r\n  }\r\n\r\n  return value;\r\n};\r\n","export const isTransformOriginStyle = (key, value) =>\r\n  key.match(/^transformOrigin/) && typeof value === 'string';\r\n\r\nconst matchTransformOrigin = value =>\r\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%|vw|vh)?)|top|right|bottom|left|center/g);\r\n\r\nconst transformOffsetKeywords = value => {\r\n  switch (value) {\r\n    case 'top':\r\n    case 'left':\r\n      return '0%';\r\n    case 'right':\r\n    case 'bottom':\r\n      return '100%';\r\n    case 'center':\r\n      return '50%';\r\n    default:\r\n      return value;\r\n  }\r\n};\r\n\r\n// Transforms shorthand transformOrigin values\r\nexport const processTransformOrigin = (key, value) => {\r\n  const match = matchTransformOrigin(value);\r\n\r\n  if (match) {\r\n    let result;\r\n\r\n    if (key.match(/.X/)) {\r\n      result = match[0];\r\n    } else if (key.match(/.Y/)) {\r\n      result = match[1] || match[0];\r\n    } else {\r\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\r\n    }\r\n\r\n    return transformOffsetKeywords(result);\r\n  }\r\n\r\n  return value;\r\n};\r\n","import yogaValue from './yogaValue';\r\nimport parseScalar from './transformUnits';\r\nimport { isBorderStyle, processBorders } from './borders';\r\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\r\nimport { isFontWeightStyle, processFontWeight } from './transformFontWeight';\r\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\r\nimport {\r\n  isTransformOriginStyle,\r\n  processTransformOrigin,\r\n} from './transformOrigin';\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nconst styleShorthands = {\r\n  margin: {\r\n    marginTop: true,\r\n    marginRight: true,\r\n    marginBottom: true,\r\n    marginLeft: true,\r\n  },\r\n  marginHorizontal: {\r\n    marginLeft: true,\r\n    marginRight: true,\r\n  },\r\n  marginVertical: {\r\n    marginTop: true,\r\n    marginBottom: true,\r\n  },\r\n  padding: {\r\n    paddingTop: true,\r\n    paddingRight: true,\r\n    paddingBottom: true,\r\n    paddingLeft: true,\r\n  },\r\n  paddingHorizontal: {\r\n    paddingLeft: true,\r\n    paddingRight: true,\r\n  },\r\n  paddingVertical: {\r\n    paddingTop: true,\r\n    paddingBottom: true,\r\n  },\r\n  border: {\r\n    borderTopColor: true,\r\n    borderTopStyle: true,\r\n    borderTopWidth: true,\r\n    borderRightColor: true,\r\n    borderRightStyle: true,\r\n    borderRightWidth: true,\r\n    borderBottomColor: true,\r\n    borderBottomStyle: true,\r\n    borderBottomWidth: true,\r\n    borderLeftColor: true,\r\n    borderLeftStyle: true,\r\n    borderLeftWidth: true,\r\n  },\r\n  borderTop: {\r\n    borderTopColor: true,\r\n    borderTopStyle: true,\r\n    borderTopWidth: true,\r\n  },\r\n  borderRight: {\r\n    borderRightColor: true,\r\n    borderRightStyle: true,\r\n    borderRightWidth: true,\r\n  },\r\n  borderBottom: {\r\n    borderBottomColor: true,\r\n    borderBottomStyle: true,\r\n    borderBottomWidth: true,\r\n  },\r\n  borderLeft: {\r\n    borderLeftColor: true,\r\n    borderLeftStyle: true,\r\n    borderLeftWidth: true,\r\n  },\r\n  borderColor: {\r\n    borderTopColor: true,\r\n    borderRightColor: true,\r\n    borderBottomColor: true,\r\n    borderLeftColor: true,\r\n  },\r\n  borderRadius: {\r\n    borderTopLeftRadius: true,\r\n    borderTopRightRadius: true,\r\n    borderBottomRightRadius: true,\r\n    borderBottomLeftRadius: true,\r\n  },\r\n  borderStyle: {\r\n    borderTopStyle: true,\r\n    borderRightStyle: true,\r\n    borderBottomStyle: true,\r\n    borderLeftStyle: true,\r\n  },\r\n  borderWidth: {\r\n    borderTopWidth: true,\r\n    borderRightWidth: true,\r\n    borderBottomWidth: true,\r\n    borderLeftWidth: true,\r\n  },\r\n  objectPosition: {\r\n    objectPositionX: true,\r\n    objectPositionY: true,\r\n  },\r\n  transformOrigin: {\r\n    transformOriginX: true,\r\n    transformOriginY: true,\r\n  },\r\n};\r\n\r\n// Expand the shorthand properties to isolate every declaration from the others.\r\nconst expandStyles = style => {\r\n  if (!style) return style;\r\n\r\n  const propsArray = Object.keys(style);\r\n  const resolvedStyle = {};\r\n\r\n  for (let i = 0; i < propsArray.length; i++) {\r\n    const key = propsArray[i];\r\n    const value = style[key];\r\n\r\n    switch (key) {\r\n      case 'display':\r\n      case 'flex':\r\n      case 'flexDirection':\r\n      case 'flexWrap':\r\n      case 'flexFlow':\r\n      case 'flexGrow':\r\n      case 'flexShrink':\r\n      case 'flexBasis':\r\n      case 'justifyContent':\r\n      case 'alignSelf':\r\n      case 'alignItems':\r\n      case 'alignContent':\r\n      case 'order':\r\n        resolvedStyle[key] = yogaValue(key, value);\r\n        break;\r\n      case 'textAlignVertical':\r\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\r\n        break;\r\n      case 'margin':\r\n      case 'marginHorizontal':\r\n      case 'marginVertical':\r\n      case 'padding':\r\n      case 'paddingHorizontal':\r\n      case 'paddingVertical':\r\n      case 'border':\r\n      case 'borderTop':\r\n      case 'borderRight':\r\n      case 'borderBottom':\r\n      case 'borderLeft':\r\n      case 'borderColor':\r\n      case 'borderRadius':\r\n      case 'borderStyle':\r\n      case 'borderWidth':\r\n      case 'objectPosition':\r\n      case 'transformOrigin':\r\n        {\r\n          const expandedProps = styleShorthands[key];\r\n          for (const propName in expandedProps) {\r\n            if (hasOwnProperty.call(expandedProps, propName)) {\r\n              resolvedStyle[propName] = value;\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        resolvedStyle[key] = value;\r\n        break;\r\n    }\r\n  }\r\n\r\n  return resolvedStyle;\r\n};\r\n\r\nconst transformStyles = (style, container) => {\r\n  const expandedStyles = expandStyles(style);\r\n  const propsArray = Object.keys(expandedStyles);\r\n  const resolvedStyle = {};\r\n\r\n  for (let i = 0; i < propsArray.length; i++) {\r\n    const key = propsArray[i];\r\n    const value = expandedStyles[key];\r\n\r\n    let resolved;\r\n    if (isBorderStyle(key, value)) {\r\n      resolved = processBorders(key, value);\r\n    } else if (isBoxModelStyle(key, value)) {\r\n      resolved = processBoxModel(key, value);\r\n    } else if (isObjectPositionStyle(key, value)) {\r\n      resolved = processObjectPosition(key, value);\r\n    } else if (isTransformOriginStyle(key, value)) {\r\n      resolved = processTransformOrigin(key, value);\r\n    } else if (isFontWeightStyle(key, value)) {\r\n      resolved = processFontWeight(value);\r\n    } else {\r\n      resolved = value;\r\n    }\r\n\r\n    resolvedStyle[key] = parseScalar(resolved, container);\r\n  }\r\n\r\n  return resolvedStyle;\r\n};\r\n\r\nexport default transformStyles;\r\n","import matchMedia from 'media-engine';\r\nimport transformStyles from './transformStyles';\r\n\r\nconst create = styles => styles;\r\n\r\nconst flatten = input => {\r\n  if (!Array.isArray(input)) {\r\n    input = [input];\r\n  }\r\n\r\n  const result = input.reduce((acc, style) => {\r\n    if (style) {\r\n      const s = Array.isArray(style) ? flatten(style) : style;\r\n\r\n      Object.keys(s).forEach(key => {\r\n        if (s[key] !== null && s[key] !== undefined) {\r\n          acc[key] = s[key];\r\n        }\r\n      });\r\n    }\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  return result;\r\n};\r\n\r\nconst resolveMediaQueries = (input, container) => {\r\n  const result = Object.keys(input).reduce((acc, key) => {\r\n    if (/@media/.test(key)) {\r\n      return {\r\n        ...acc,\r\n        ...matchMedia({ [key]: input[key] }, container),\r\n      };\r\n    }\r\n\r\n    return { ...acc, [key]: input[key] };\r\n  }, {});\r\n\r\n  return result;\r\n};\r\n\r\nconst resolve = (styles, container) => {\r\n  if (!styles) return null;\r\n\r\n  styles = flatten(styles);\r\n  styles = resolveMediaQueries(styles, container);\r\n  styles = transformStyles(styles, container);\r\n\r\n  return styles;\r\n};\r\n\r\nconst absoluteFillObject = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  bottom: 0,\r\n  right: 0,\r\n};\r\n\r\nexport default {\r\n  hairlineWidth: 1,\r\n  create,\r\n  resolve,\r\n  flatten,\r\n  absoluteFillObject,\r\n};\r\n","const Debug = {\r\n  debug() {\r\n    const layout = this.getAbsoluteLayout();\r\n    const padding = this.padding;\r\n    const margin = this.margin;\r\n\r\n    this.root.instance.save();\r\n\r\n    this.debugContent(layout, margin, padding);\r\n    this.debugPadding(layout, margin, padding);\r\n    this.debugMargin(layout, margin);\r\n    this.debugText(layout, margin);\r\n    this.debugOrigin();\r\n\r\n    this.root.instance.restore();\r\n  },\r\n  debugOrigin() {\r\n    if (this.style.transform) {\r\n      const origin = this.origin;\r\n      this.root.instance\r\n        .circle(origin[0], origin[1], 3)\r\n        .fill('red')\r\n        .circle(origin[0], origin[1], 5)\r\n        .stroke('red');\r\n    }\r\n  },\r\n  debugText(layout, margin) {\r\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\r\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\r\n\r\n    this.root.instance\r\n      .fontSize(4)\r\n      .opacity(1)\r\n      .fillColor('black')\r\n      .text(\r\n        `${roundedWidth} x ${roundedHeight}`,\r\n        layout.left - margin.left,\r\n        Math.max(layout.top - margin.top - 4, 1),\r\n      );\r\n  },\r\n  debugContent(layout, margin, padding) {\r\n    this.root.instance\r\n      .fillColor('#a1c6e7')\r\n      .opacity(0.5)\r\n      .rect(\r\n        layout.left + padding.left,\r\n        layout.top + padding.top,\r\n        layout.width - padding.left - padding.right,\r\n        layout.height - padding.top - padding.bottom,\r\n      )\r\n      .fill();\r\n  },\r\n  debugPadding(layout, margin, padding) {\r\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\r\n\r\n    // Padding top\r\n    this.root.instance\r\n      .rect(\r\n        layout.left + padding.left,\r\n        layout.top,\r\n        layout.width - padding.right - padding.left,\r\n        padding.top,\r\n      )\r\n      .fill();\r\n\r\n    // Padding left\r\n    this.root.instance\r\n      .rect(layout.left, layout.top, padding.left, layout.height)\r\n      .fill();\r\n\r\n    // Padding right\r\n    this.root.instance\r\n      .rect(\r\n        layout.left + layout.width - padding.right,\r\n        layout.top,\r\n        padding.right,\r\n        layout.height,\r\n      )\r\n      .fill();\r\n\r\n    // Padding bottom\r\n    this.root.instance\r\n      .rect(\r\n        layout.left + padding.left,\r\n        layout.top + layout.height - padding.bottom,\r\n        layout.width - padding.right - padding.left,\r\n        padding.bottom,\r\n      )\r\n      .fill();\r\n  },\r\n  debugMargin(layout, margin) {\r\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\r\n\r\n    // Margin top\r\n    this.root.instance\r\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\r\n      .fill();\r\n\r\n    // Margin left\r\n    this.root.instance\r\n      .rect(\r\n        layout.left - margin.left,\r\n        layout.top - margin.top,\r\n        margin.left,\r\n        layout.height + margin.top + margin.bottom,\r\n      )\r\n      .fill();\r\n\r\n    // Margin right\r\n    this.root.instance\r\n      .rect(\r\n        layout.left + layout.width,\r\n        layout.top - margin.top,\r\n        margin.right,\r\n        layout.height + margin.top + margin.bottom,\r\n      )\r\n      .fill();\r\n\r\n    // Margin bottom\r\n    this.root.instance\r\n      .rect(\r\n        layout.left,\r\n        layout.top + layout.height,\r\n        layout.width,\r\n        margin.bottom,\r\n      )\r\n      .fill();\r\n  },\r\n};\r\n\r\nexport default Debug;\r\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\r\n\r\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\r\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\r\n\r\nfunction drawBorders() {\r\n  const { instance } = this.root;\r\n  const layout = this.getAbsoluteLayout();\r\n\r\n  const {\r\n    borderTopWidth,\r\n    borderLeftWidth,\r\n    borderRightWidth,\r\n    borderBottomWidth,\r\n  } = this;\r\n\r\n  const {\r\n    opacity,\r\n    borderTopLeftRadius = 0,\r\n    borderTopRightRadius = 0,\r\n    borderBottomLeftRadius = 0,\r\n    borderBottomRightRadius = 0,\r\n    borderTopColor = 'black',\r\n    borderTopStyle = 'solid',\r\n    borderLeftColor = 'black',\r\n    borderLeftStyle = 'solid',\r\n    borderRightColor = 'black',\r\n    borderRightStyle = 'solid',\r\n    borderBottomColor = 'black',\r\n    borderBottomStyle = 'solid',\r\n  } = this.style;\r\n\r\n  const style = {\r\n    borderTopColor,\r\n    borderTopWidth,\r\n    borderTopStyle,\r\n    borderLeftColor,\r\n    borderLeftWidth,\r\n    borderLeftStyle,\r\n    borderRightColor,\r\n    borderRightWidth,\r\n    borderRightStyle,\r\n    borderBottomColor,\r\n    borderBottomWidth,\r\n    borderBottomStyle,\r\n    borderTopLeftRadius,\r\n    borderTopRightRadius,\r\n    borderBottomLeftRadius,\r\n    borderBottomRightRadius,\r\n  };\r\n\r\n  const { width, height } = layout;\r\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\r\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\r\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\r\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\r\n\r\n  instance.save();\r\n  instance.strokeOpacity(opacity);\r\n\r\n  if (borderTopWidth) {\r\n    instance.save();\r\n    clipBorderTop(instance, layout, style, rtr, rtl);\r\n    fillBorderTop(instance, layout, style, rtr, rtl);\r\n    instance.restore();\r\n  }\r\n\r\n  if (borderRightWidth) {\r\n    instance.save();\r\n    clipBorderRight(instance, layout, style, rtr, rbr);\r\n    fillBorderRight(instance, layout, style, rtr, rbr);\r\n    instance.restore();\r\n  }\r\n\r\n  if (borderBottomWidth) {\r\n    instance.save();\r\n    clipBorderBottom(instance, layout, style, rbl, rbr);\r\n    fillBorderBottom(instance, layout, style, rbl, rbr);\r\n    instance.restore();\r\n  }\r\n\r\n  if (borderLeftWidth) {\r\n    instance.save();\r\n    clipBorderLeft(instance, layout, style, rbl, rtl);\r\n    fillBorderLeft(instance, layout, style, rbl, rtl);\r\n    instance.restore();\r\n  }\r\n\r\n  instance.restore();\r\n}\r\n\r\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\r\n  const { top, left, width, height } = layout;\r\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\r\n\r\n  // Clip outer top border edge\r\n  ctx.moveTo(left + rtl, top);\r\n  ctx.lineTo(left + width - rtr, top);\r\n\r\n  // Ellipse coefficients outer top right cap\r\n  const c0 = rtr * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width - c0,\r\n    top,\r\n    left + width,\r\n    top + c0,\r\n    left + width,\r\n    top + rtr,\r\n  );\r\n\r\n  // Move down in case the margin exceedes the radius\r\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\r\n  ctx.lineTo(left + width, topRightYCoord);\r\n\r\n  // Clip inner top right cap\r\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\r\n\r\n  // Ellipse coefficients inner top right cap\r\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\r\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\r\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\r\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\r\n\r\n  // Clip inner top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width - borderRightWidth,\r\n    top + borderTopWidth + c2,\r\n    left + width - borderRightWidth - c1,\r\n    top + borderTopWidth,\r\n    left + width - borderRightWidth - innerTopRightRadiusX,\r\n    top + borderTopWidth,\r\n  );\r\n\r\n  // Clip inner top border edge\r\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\r\n\r\n  // Ellipse coefficients inner top left cap\r\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\r\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\r\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\r\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\r\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\r\n\r\n  // Clip inner top left cap\r\n  ctx.bezierCurveTo(\r\n    left + borderLeftWidth + c3,\r\n    top + borderTopWidth,\r\n    left + borderLeftWidth,\r\n    top + borderTopWidth + c4,\r\n    left + borderLeftWidth,\r\n    topLeftYCoord,\r\n  );\r\n  ctx.lineTo(left, topLeftYCoord);\r\n\r\n  // Move down in case the margin exceedes the radius\r\n  ctx.lineTo(left, top + rtl);\r\n\r\n  // Ellipse coefficients outer top left cap\r\n  const c5 = rtl * (1.0 - KAPPA);\r\n\r\n  // Clip outer top left cap\r\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n\r\n  // Clip border top cap joins\r\n  if (borderRightWidth) {\r\n    const trSlope = -borderTopWidth / borderRightWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.lineTo(left, top);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n\r\n  if (borderLeftWidth) {\r\n    const trSlope = -borderTopWidth / borderLeftWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\r\n    ctx.lineTo(left, top);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n};\r\n\r\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\r\n  const { top, left, width } = layout;\r\n  const {\r\n    borderTopColor,\r\n    borderTopWidth,\r\n    borderTopStyle,\r\n    borderRightWidth,\r\n    borderLeftWidth,\r\n  } = style;\r\n\r\n  const c0 = rtl * (1.0 - KAPPA);\r\n  const c1 = rtr * (1.0 - KAPPA);\r\n\r\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\r\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\r\n  ctx.lineTo(left + width - rtr, top);\r\n  ctx.bezierCurveTo(\r\n    left + width - c1,\r\n    top,\r\n    left + width,\r\n    top + c1,\r\n    left + width,\r\n    top + rtr,\r\n  );\r\n\r\n  ctx.strokeColor(borderTopColor);\r\n  ctx.lineWidth(\r\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\r\n  );\r\n\r\n  if (borderTopStyle === 'dashed') {\r\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\r\n  } else if (borderTopStyle === 'dotted') {\r\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\r\n  }\r\n\r\n  ctx.stroke();\r\n  ctx.undash();\r\n};\r\n\r\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\r\n  const { top, left, width, height } = layout;\r\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\r\n\r\n  // Clip outer right border edge\r\n  ctx.moveTo(left + width, top + rtr);\r\n  ctx.lineTo(left + width, top + height - rbr);\r\n\r\n  // Ellipse coefficients outer bottom right cap\r\n  const c0 = rbr * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width,\r\n    top + height - c0,\r\n    left + width - c0,\r\n    top + height,\r\n    left + width - rbr,\r\n    top + height,\r\n  );\r\n\r\n  // Move left in case the margin exceedes the radius\r\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\r\n  ctx.lineTo(topBottomXCoord, top + height);\r\n\r\n  // Clip inner bottom right cap\r\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\r\n\r\n  // Ellipse coefficients inner bottom right cap\r\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\r\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\r\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\r\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\r\n\r\n  // Clip inner top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width - borderRightWidth - c1,\r\n    top + height - borderBottomWidth,\r\n    left + width - borderRightWidth,\r\n    top + height - borderBottomWidth - c2,\r\n    left + width - borderRightWidth,\r\n    top + height - Math.max(rbr, borderBottomWidth),\r\n  );\r\n\r\n  // Clip inner right border edge\r\n  ctx.lineTo(\r\n    left + width - borderRightWidth,\r\n    top + Math.max(rtr, borderTopWidth),\r\n  );\r\n\r\n  // Ellipse coefficients inner top right cap\r\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\r\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\r\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\r\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\r\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\r\n\r\n  // Clip inner top left cap\r\n  ctx.bezierCurveTo(\r\n    left + width - borderRightWidth,\r\n    top + borderTopWidth + c4,\r\n    left + width - borderRightWidth - c3,\r\n    top + borderTopWidth,\r\n    topRightXCoord,\r\n    top + borderTopWidth,\r\n  );\r\n  ctx.lineTo(topRightXCoord, top);\r\n\r\n  // Move right in case the margin exceedes the radius\r\n  ctx.lineTo(left + width - rtr, top);\r\n\r\n  // Ellipse coefficients outer top right cap\r\n  const c5 = rtr * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width - c5,\r\n    top,\r\n    left + width,\r\n    top + c5,\r\n    left + width,\r\n    top + rtr,\r\n  );\r\n\r\n  ctx.closePath();\r\n  ctx.clip();\r\n\r\n  // Clip border right cap joins\r\n  if (borderTopWidth) {\r\n    const trSlope = -borderTopWidth / borderRightWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n\r\n  if (borderBottomWidth) {\r\n    const brSlope = borderBottomWidth / borderRightWidth;\r\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.lineTo(left, top);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n};\r\n\r\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\r\n  const { top, left, width, height } = layout;\r\n  const {\r\n    borderRightColor,\r\n    borderRightStyle,\r\n    borderRightWidth,\r\n    borderTopWidth,\r\n    borderBottomWidth,\r\n  } = style;\r\n\r\n  const c0 = rbr * (1.0 - KAPPA);\r\n  const c1 = rtr * (1.0 - KAPPA);\r\n\r\n  ctx.moveTo(left + width - rtr, top);\r\n  ctx.bezierCurveTo(\r\n    left + width - c1,\r\n    top,\r\n    left + width,\r\n    top + c1,\r\n    left + width,\r\n    top + rtr,\r\n  );\r\n  ctx.lineTo(left + width, top + height - rbr);\r\n  ctx.bezierCurveTo(\r\n    left + width,\r\n    top + height - c0,\r\n    left + width - c0,\r\n    top + height,\r\n    left + width - rbr,\r\n    top + height,\r\n  );\r\n\r\n  ctx.strokeColor(borderRightColor);\r\n  ctx.lineWidth(\r\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\r\n  );\r\n\r\n  if (borderRightStyle === 'dashed') {\r\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\r\n  } else if (borderRightStyle === 'dotted') {\r\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\r\n  }\r\n\r\n  ctx.stroke();\r\n  ctx.undash();\r\n};\r\n\r\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\r\n  const { top, left, width, height } = layout;\r\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\r\n\r\n  // Clip outer top border edge\r\n  ctx.moveTo(left + width - rbr, top + height);\r\n  ctx.lineTo(left + rbl, top + height);\r\n\r\n  // Ellipse coefficients outer top right cap\r\n  const c0 = rbl * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + c0,\r\n    top + height,\r\n    left,\r\n    top + height - c0,\r\n    left,\r\n    top + height - rbl,\r\n  );\r\n\r\n  // Move up in case the margin exceedes the radius\r\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\r\n  ctx.lineTo(left, bottomLeftYCoord);\r\n\r\n  // Clip inner bottom left cap\r\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\r\n\r\n  // Ellipse coefficients inner top right cap\r\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\r\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\r\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\r\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\r\n\r\n  // Clip inner bottom left cap\r\n  ctx.bezierCurveTo(\r\n    left + borderLeftWidth,\r\n    top + height - borderBottomWidth - c2,\r\n    left + borderLeftWidth + c1,\r\n    top + height - borderBottomWidth,\r\n    left + borderLeftWidth + innerBottomLeftRadiusX,\r\n    top + height - borderBottomWidth,\r\n  );\r\n\r\n  // Clip inner bottom border edge\r\n  ctx.lineTo(\r\n    left + width - Math.max(rbr, borderRightWidth),\r\n    top + height - borderBottomWidth,\r\n  );\r\n\r\n  // Ellipse coefficients inner top left cap\r\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\r\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\r\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\r\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\r\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\r\n\r\n  // Clip inner top left cap\r\n  ctx.bezierCurveTo(\r\n    left + width - borderRightWidth - c3,\r\n    top + height - borderBottomWidth,\r\n    left + width - borderRightWidth,\r\n    top + height - borderBottomWidth - c4,\r\n    left + width - borderRightWidth,\r\n    bottomRightYCoord,\r\n  );\r\n  ctx.lineTo(left + width, bottomRightYCoord);\r\n\r\n  // Move down in case the margin exceedes the radius\r\n  ctx.lineTo(left + width, top + height - rbr);\r\n\r\n  // Ellipse coefficients outer top left cap\r\n  const c5 = rbr * (1.0 - KAPPA);\r\n\r\n  // Clip outer top left cap\r\n  ctx.bezierCurveTo(\r\n    left + width,\r\n    top + height - c5,\r\n    left + width - c5,\r\n    top + height,\r\n    left + width - rbr,\r\n    top + height,\r\n  );\r\n  ctx.closePath();\r\n  ctx.clip();\r\n\r\n  // Clip border bottom cap joins\r\n  if (borderRightWidth) {\r\n    const brSlope = borderBottomWidth / borderRightWidth;\r\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.lineTo(left, top);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n\r\n  if (borderLeftWidth) {\r\n    const trSlope = -borderBottomWidth / borderLeftWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n};\r\n\r\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\r\n  const { top, left, width, height } = layout;\r\n  const {\r\n    borderBottomColor,\r\n    borderBottomStyle,\r\n    borderBottomWidth,\r\n    borderRightWidth,\r\n    borderLeftWidth,\r\n  } = style;\r\n\r\n  const c0 = rbl * (1.0 - KAPPA);\r\n  const c1 = rbr * (1.0 - KAPPA);\r\n\r\n  ctx.moveTo(left + width, top + height - rbr);\r\n  ctx.bezierCurveTo(\r\n    left + width,\r\n    top + height - c1,\r\n    left + width - c1,\r\n    top + height,\r\n    left + width - rbr,\r\n    top + height,\r\n  );\r\n  ctx.lineTo(left + rbl, top + height);\r\n  ctx.bezierCurveTo(\r\n    left + c0,\r\n    top + height,\r\n    left,\r\n    top + height - c0,\r\n    left,\r\n    top + height - rbl,\r\n  );\r\n\r\n  ctx.strokeColor(borderBottomColor);\r\n  ctx.lineWidth(\r\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\r\n  );\r\n\r\n  if (borderBottomStyle === 'dashed') {\r\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\r\n  } else if (borderBottomStyle === 'dotted') {\r\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\r\n  }\r\n\r\n  ctx.stroke();\r\n  ctx.undash();\r\n};\r\n\r\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\r\n  const { top, left, width, height } = layout;\r\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\r\n\r\n  // Clip outer left border edge\r\n  ctx.moveTo(left, top + height - rbl);\r\n  ctx.lineTo(left, top + rtl);\r\n\r\n  // Ellipse coefficients outer top left cap\r\n  const c0 = rtl * (1.0 - KAPPA);\r\n\r\n  // Clip outer top left cap\r\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\r\n\r\n  // Move right in case the margin exceedes the radius\r\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\r\n  ctx.lineTo(topLeftCoordX, top);\r\n\r\n  // Clip inner top left cap\r\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\r\n\r\n  // Ellipse coefficients inner top left cap\r\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\r\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\r\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\r\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\r\n\r\n  // Clip inner top right cap\r\n  ctx.bezierCurveTo(\r\n    left + borderLeftWidth + c1,\r\n    top + borderTopWidth,\r\n    left + borderLeftWidth,\r\n    top + borderTopWidth + c2,\r\n    left + borderLeftWidth,\r\n    top + Math.max(rtl, borderTopWidth),\r\n  );\r\n\r\n  // Clip inner left border edge\r\n  ctx.lineTo(\r\n    left + borderLeftWidth,\r\n    top + height - Math.max(rbl, borderBottomWidth),\r\n  );\r\n\r\n  // Ellipse coefficients inner bottom left cap\r\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\r\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\r\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\r\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\r\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\r\n\r\n  // Clip inner top left cap\r\n  ctx.bezierCurveTo(\r\n    left + borderLeftWidth,\r\n    top + height - borderBottomWidth - c4,\r\n    left + borderLeftWidth + c3,\r\n    top + height - borderBottomWidth,\r\n    bottomLeftXCoord,\r\n    top + height - borderBottomWidth,\r\n  );\r\n  ctx.lineTo(bottomLeftXCoord, top + height);\r\n\r\n  // Move left in case the margin exceedes the radius\r\n  ctx.lineTo(left + rbl, top + height);\r\n\r\n  // Ellipse coefficients outer top right cap\r\n  const c5 = rbl * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + c5,\r\n    top + height,\r\n    left,\r\n    top + height - c5,\r\n    left,\r\n    top + height - rbl,\r\n  );\r\n\r\n  ctx.closePath();\r\n  ctx.clip();\r\n\r\n  // Clip border right cap joins\r\n  if (borderBottomWidth) {\r\n    const trSlope = -borderBottomWidth / borderLeftWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.lineTo(left, top);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n\r\n  if (borderBottomWidth) {\r\n    const trSlope = -borderTopWidth / borderLeftWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\r\n    ctx.lineTo(left, top);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n};\r\n\r\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\r\n  const { top, left, height } = layout;\r\n  const {\r\n    borderLeftColor,\r\n    borderLeftStyle,\r\n    borderLeftWidth,\r\n    borderTopWidth,\r\n    borderBottomWidth,\r\n  } = style;\r\n\r\n  const c0 = rbl * (1.0 - KAPPA);\r\n  const c1 = rtl * (1.0 - KAPPA);\r\n\r\n  ctx.moveTo(left + rbl, top + height);\r\n  ctx.bezierCurveTo(\r\n    left + c0,\r\n    top + height,\r\n    left,\r\n    top + height - c0,\r\n    left,\r\n    top + height - rbl,\r\n  );\r\n  ctx.lineTo(left, top + rtl);\r\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\r\n\r\n  ctx.strokeColor(borderLeftColor);\r\n  ctx.lineWidth(\r\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\r\n  );\r\n\r\n  if (borderLeftStyle === 'dashed') {\r\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\r\n  } else if (borderLeftStyle === 'dotted') {\r\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\r\n  }\r\n\r\n  ctx.stroke();\r\n  ctx.undash();\r\n};\r\n\r\nexport default { drawBorders };\r\n","// This constant is used to approximate a symmetrical arc using a cubic\r\n// Bezier curve.\r\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\r\n\r\nconst Clipping = {\r\n  clip() {\r\n    const { top, left, width, height } = this.getAbsoluteLayout();\r\n\r\n    const {\r\n      borderTopLeftRadius = 0,\r\n      borderTopRightRadius = 0,\r\n      borderBottomRightRadius = 0,\r\n      borderBottomLeftRadius = 0,\r\n    } = this.style;\r\n\r\n    // Border top\r\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\r\n    const ctr = rtr * (1.0 - KAPPA);\r\n\r\n    this.root.instance.moveTo(left + rtr, top);\r\n    this.root.instance.lineTo(left + width - rtr, top);\r\n    this.root.instance.bezierCurveTo(\r\n      left + width - ctr,\r\n      top,\r\n      left + width,\r\n      top + ctr,\r\n      left + width,\r\n      top + rtr,\r\n    );\r\n\r\n    // Border right\r\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\r\n    const cbr = rbr * (1.0 - KAPPA);\r\n\r\n    this.root.instance.lineTo(left + width, top + height - rbr);\r\n    this.root.instance.bezierCurveTo(\r\n      left + width,\r\n      top + height - cbr,\r\n      left + width - cbr,\r\n      top + height,\r\n      left + width - rbr,\r\n      top + height,\r\n    );\r\n\r\n    // Border bottom\r\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\r\n    const cbl = rbl * (1.0 - KAPPA);\r\n\r\n    this.root.instance.lineTo(left + rbl, top + height);\r\n    this.root.instance.bezierCurveTo(\r\n      left + cbl,\r\n      top + height,\r\n      left,\r\n      top + height - cbl,\r\n      left,\r\n      top + height - rbl,\r\n    );\r\n\r\n    // Border left\r\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\r\n    const ctl = rtl * (1.0 - KAPPA);\r\n\r\n    this.root.instance.lineTo(left, top + rtl);\r\n    this.root.instance.bezierCurveTo(\r\n      left,\r\n      top + ctl,\r\n      left + ctl,\r\n      top,\r\n      left + rtl,\r\n      top,\r\n    );\r\n    this.root.instance.closePath();\r\n    this.root.instance.clip();\r\n  },\r\n};\r\n\r\nexport default Clipping;\r\n","const getRotation = transform => {\r\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\r\n\r\n  if (match && match[1] && match[2]) {\r\n    const value = match[1];\r\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nconst getTranslateX = transform => {\r\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\r\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\r\n    transform,\r\n  );\r\n\r\n  if (matchX && matchX[1]) return matchX[1];\r\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\r\n\r\n  return 0;\r\n};\r\n\r\nconst getTranslateY = transform => {\r\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\r\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\r\n    transform,\r\n  );\r\n\r\n  if (matchY && matchY[1]) return matchY[1];\r\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\r\n\r\n  return 0;\r\n};\r\n\r\nconst getScaleX = transform => {\r\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\r\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\r\n    transform,\r\n  );\r\n\r\n  if (matchX && matchX[1]) return matchX[1];\r\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\r\n\r\n  return 1;\r\n};\r\n\r\nconst getScaleY = transform => {\r\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\r\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\r\n    transform,\r\n  );\r\n\r\n  if (matchY && matchY[1]) return matchY[1];\r\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\r\n\r\n  return 1;\r\n};\r\n\r\nconst getMatrix = transform => {\r\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\r\n    transform,\r\n  );\r\n  if (match) return match.slice(1, 7);\r\n  return null;\r\n};\r\n\r\nconst applySingleTransformation = (element, transform, origin) => {\r\n  if (/rotate/g.test(transform)) {\r\n    element.root.instance.rotate(getRotation(transform), { origin });\r\n  } else if (/scaleX/g.test(transform)) {\r\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\r\n  } else if (/scaleY/g.test(transform)) {\r\n    element.root.instance.scale(1, getScaleY(transform), { origin });\r\n  } else if (/scale/g.test(transform)) {\r\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\r\n      origin,\r\n    });\r\n  } else if (/translateX/g.test(transform)) {\r\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\r\n  } else if (/translateY/g.test(transform)) {\r\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\r\n  } else if (/translate/g.test(transform)) {\r\n    element.root.instance.translate(\r\n      getTranslateX(transform),\r\n      getTranslateY(transform),\r\n      { origin },\r\n    );\r\n  } else if (/matrix/g.test(transform)) {\r\n    element.root.instance.transform(...getMatrix(transform));\r\n  }\r\n};\r\n\r\nconst Transformations = {\r\n  applyTransformations() {\r\n    let match;\r\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\r\n    const origin = this.origin;\r\n    const transform = (this.style && this.style.transform) || '';\r\n\r\n    while ((match = re.exec(transform)) != null) {\r\n      applySingleTransformation(this, match[0], origin);\r\n    }\r\n  },\r\n};\r\n\r\nexport default Transformations;\r\n","function printWarning(format, ...args) {\r\n  let argIndex = 0;\r\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\r\n\r\n  if (typeof console !== 'undefined') {\r\n    console.error(message);\r\n  }\r\n\r\n  try {\r\n    throw new Error(message);\r\n  } catch (x) {}\r\n}\r\n\r\nconst __DEV__ = process.env.NODE_ENV !== 'production';\r\n\r\nconst warning = __DEV__\r\n  ? (condition, format, ...args) => {\r\n      if (format === undefined) {\r\n        throw new Error(\r\n          '`warning(condition, format, ...args)` requires a warning ' +\r\n            'message argument',\r\n        );\r\n      }\r\n      if (!condition) {\r\n        printWarning(format, ...args);\r\n      }\r\n    }\r\n  : () => {};\r\n\r\nexport default warning;\r\n","import { isNil, mergeDeepWith } from 'ramda';\r\n\r\nconst merge = (a, b) => {\r\n  return isNil(b) ? a : b;\r\n};\r\n\r\nconst deepMerge = objs =>\r\n  objs.reduce((acc, obj) => {\r\n    return mergeDeepWith(merge, acc, obj);\r\n  }, {});\r\n\r\nexport default deepMerge;\r\n","import { compose, equals, type } from 'ramda';\r\n\r\nconst isFunction = compose(\r\n  equals('Function'),\r\n  type,\r\n);\r\n\r\nexport default isFunction;\r\n","export const inheritedProperties = [\r\n  'color',\r\n  'fontFamily',\r\n  'fontSize',\r\n  'fontStyle',\r\n  'fontWeight',\r\n  'letterSpacing',\r\n  'opacity',\r\n  'textDecoration',\r\n  'lineHeight',\r\n  'textAlign',\r\n  'visibility',\r\n  'wordSpacing',\r\n];\r\n","import { pick, toPairsIn } from 'ramda';\r\n\r\nimport Node from './Node';\r\nimport StyleSheet from '../stylesheet';\r\nimport Debug from '../mixins/debug';\r\nimport Borders from '../mixins/borders';\r\nimport Clipping from '../mixins/clipping';\r\nimport Transform from '../mixins/transform';\r\nimport warning from '../utils/warning';\r\nimport deepMerge from '../utils/deepMerge';\r\nimport upperFirst from '../utils/upperFirst';\r\nimport isFunction from '../utils/isFunction';\r\nimport matchPercent from '../utils/matchPercent';\r\nimport { inheritedProperties } from '../stylesheet/inherit';\r\n\r\nclass Base extends Node {\r\n  constructor(root, props) {\r\n    super();\r\n\r\n    this.root = root;\r\n    this.style = {};\r\n    this.props = deepMerge([\r\n      this.constructor.defaultProps,\r\n      Base.defaultProps,\r\n      props,\r\n    ]);\r\n\r\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\r\n  }\r\n\r\n  get page() {\r\n    return this.parent.page;\r\n  }\r\n\r\n  get wrap() {\r\n    return this.props.wrap;\r\n  }\r\n\r\n  get break() {\r\n    return this.props.break;\r\n  }\r\n\r\n  get fixed() {\r\n    return this.props.fixed;\r\n  }\r\n\r\n  get minPresenceAhead() {\r\n    return this.props.minPresenceAhead;\r\n  }\r\n\r\n  get absolute() {\r\n    return this.props.style.position === 'absolute';\r\n  }\r\n\r\n  get origin() {\r\n    const { transformOriginX, transformOriginY } = this.style;\r\n    const { left, top, width, height } = this.getAbsoluteLayout();\r\n\r\n    const percentX = matchPercent(transformOriginX);\r\n    const percentY = matchPercent(transformOriginY);\r\n\r\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\r\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\r\n\r\n    return [left + offsetX, top + offsetY];\r\n  }\r\n\r\n  set break(value) {\r\n    this.props.break = value;\r\n  }\r\n\r\n  appendChild(child) {\r\n    super.appendChild(child);\r\n    this.root.markDirty();\r\n  }\r\n\r\n  appendChildBefore(child, beforeChild) {\r\n    super.appendChildBefore(child, beforeChild);\r\n    this.root.markDirty();\r\n  }\r\n\r\n  removeChild(child) {\r\n    super.removeChild(child);\r\n    this.root.markDirty();\r\n  }\r\n\r\n  update(newProps) {\r\n    this.props = deepMerge([\r\n      this.constructor.defaultProps,\r\n      Base.defaultProps,\r\n      newProps,\r\n    ]);\r\n    this.root.markDirty();\r\n  }\r\n\r\n  applyProps() {\r\n    this.style = this.resolveStyles();\r\n\r\n    toPairsIn(this.style).map(([attribute, value]) => {\r\n      this.applyStyle(attribute, value);\r\n    });\r\n\r\n    this.children.forEach(child => {\r\n      if (child.applyProps) child.applyProps();\r\n    });\r\n  }\r\n\r\n  resolveStyles() {\r\n    const { size, orientation, isAutoHeight } = this.page;\r\n    const container = {\r\n      orientation,\r\n      isAutoHeight,\r\n      width: size.width,\r\n      height: size.height,\r\n    };\r\n\r\n    const ownStyles = StyleSheet.resolve(this.props.style, container);\r\n\r\n    const inheritedStyles = this.parent\r\n      ? pick(inheritedProperties, this.parent.style)\r\n      : {};\r\n\r\n    return { ...inheritedStyles, ...ownStyles };\r\n  }\r\n\r\n  applyStyle(attribute, value) {\r\n    if (value === undefined) return;\r\n\r\n    const setter = `set${upperFirst(attribute)}`;\r\n\r\n    switch (attribute) {\r\n      case 'marginTop':\r\n      case 'marginRight':\r\n      case 'marginBottom':\r\n      case 'marginLeft':\r\n      case 'paddingTop':\r\n      case 'paddingRight':\r\n      case 'paddingBottom':\r\n      case 'paddingLeft':\r\n      case 'borderTopWidth':\r\n      case 'borderRightWidth':\r\n      case 'borderBottomWidth':\r\n      case 'borderLeftWidth':\r\n      case 'position':\r\n      case 'top':\r\n      case 'right':\r\n      case 'bottom':\r\n      case 'left':\r\n      case 'width':\r\n      case 'height':\r\n      case 'minHeight':\r\n      case 'maxHeight':\r\n      case 'minWidth':\r\n      case 'maxWidth':\r\n        this[attribute] = value;\r\n        break;\r\n      default:\r\n        if (isFunction(this.layout[setter])) {\r\n          this.layout[setter](value);\r\n        }\r\n    }\r\n  }\r\n\r\n  getLayoutData() {\r\n    const layout = this.getAbsoluteLayout();\r\n\r\n    return {\r\n      type: this.name,\r\n      top: layout.top,\r\n      left: layout.left,\r\n      width: layout.width,\r\n      style: this.style,\r\n      height: layout.height,\r\n      children: this.children.map(c => {\r\n        return c.getLayoutData();\r\n      }),\r\n    };\r\n  }\r\n\r\n  drawBackgroundColor() {\r\n    const { backgroundColor, opacity = 1 } = this.style;\r\n    const { left, top, width, height } = this.getAbsoluteLayout();\r\n\r\n    if (backgroundColor) {\r\n      this.root.instance.save();\r\n\r\n      this.clip();\r\n\r\n      this.root.instance\r\n        .fillOpacity(opacity)\r\n        .fillColor(backgroundColor)\r\n        .rect(left, top, width, height)\r\n        .fill()\r\n        .restore();\r\n    }\r\n  }\r\n\r\n  clone() {\r\n    const clone = new this.constructor(this.root, this.props);\r\n\r\n    clone.copyStyle(this);\r\n    clone.style = this.style;\r\n\r\n    return clone;\r\n  }\r\n\r\n  onNodeSplit(height, clone) {\r\n    this.calculateLayout();\r\n\r\n    clone.marginTop = 0;\r\n    clone.paddingTop = 0;\r\n\r\n    // If a height was given to the element, we need to substract the remaining wrapping height\r\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\r\n    if (clone.style.height) {\r\n      clone.height = this.height - height;\r\n    }\r\n\r\n    this.height = height;\r\n    this.marginBottom = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n\r\n  async renderChildren() {\r\n    for (let i = 0; i < this.children.length; i++) {\r\n      await this.children[i].render();\r\n    }\r\n  }\r\n}\r\n\r\nBase.defaultProps = {\r\n  style: {\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n    transformOriginX: '50%',\r\n    transformOriginY: '50%',\r\n  },\r\n  minPresenceAhead: 0,\r\n};\r\n\r\nObject.assign(Base.prototype, Debug);\r\nObject.assign(Base.prototype, Borders);\r\nObject.assign(Base.prototype, Clipping);\r\nObject.assign(Base.prototype, Transform);\r\n\r\nexport default Base;\r\n","import matchPercent from '../utils/matchPercent';\r\n\r\nconst RULER_WIDTH = 13;\r\nconst RULER_COLOR = 'white';\r\nconst RULER_FONT_SIZE = 5;\r\nconst DEFAULT_RULER_STEPS = 50;\r\nconst LINE_WIDTH = 0.5;\r\nconst LINE_COLOR = 'gray';\r\nconst GRID_COLOR = '#ababab';\r\n\r\nconst range = (max, steps) =>\r\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\r\n\r\nconst matchPercentage = value => {\r\n  const match = matchPercent(value);\r\n  return match ? 100 / match.value : null;\r\n};\r\n\r\nconst Ruler = {\r\n  getRulerWidth() {\r\n    return RULER_WIDTH;\r\n  },\r\n  hasHorizontalRuler() {\r\n    return this.props.ruler || this.props.horizontalRuler;\r\n  },\r\n  hasVerticalRuler() {\r\n    return this.props.ruler || this.props.verticalRuler;\r\n  },\r\n  getHorizontalSteps() {\r\n    const value =\r\n      this.props.horizontalRulerSteps ||\r\n      this.props.rulerSteps ||\r\n      DEFAULT_RULER_STEPS;\r\n\r\n    if (typeof value === 'string') {\r\n      const percentage = matchPercentage(value);\r\n      if (percentage) {\r\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\r\n        return width / percentage;\r\n      }\r\n      throw new Error('Page: Invalid horizontal steps value');\r\n    }\r\n\r\n    return value;\r\n  },\r\n  getVerticalSteps() {\r\n    const value =\r\n      this.props.verticalRulerSteps ||\r\n      this.props.rulerSteps ||\r\n      DEFAULT_RULER_STEPS;\r\n\r\n    if (typeof value === 'string') {\r\n      const percentage = matchPercentage(value);\r\n      if (percentage) {\r\n        const height =\r\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\r\n        return height / percentage;\r\n      }\r\n      throw new Error('Page: Invalid horizontal steps value');\r\n    }\r\n\r\n    return value;\r\n  },\r\n  renderRuler() {\r\n    const hasHorizontalRuler = this.hasHorizontalRuler();\r\n    const hasVerticalRuler = this.hasVerticalRuler();\r\n\r\n    if (hasHorizontalRuler || hasVerticalRuler) {\r\n      this.root.instance\r\n        .save()\r\n        .lineWidth(LINE_WIDTH)\r\n        .fontSize(RULER_FONT_SIZE)\r\n        .opacity(1);\r\n\r\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\r\n\r\n      if (hasVerticalRuler) this.drawVerticalRuler();\r\n\r\n      if (hasHorizontalRuler && hasVerticalRuler) {\r\n        this.root.instance\r\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\r\n          .fill(RULER_COLOR);\r\n      }\r\n\r\n      this.root.instance.restore();\r\n    }\r\n  },\r\n  drawHorizontalRuler() {\r\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\r\n\r\n    this.root.instance\r\n      .rect(offset, 0, this.width, RULER_WIDTH)\r\n      .fill(RULER_COLOR)\r\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\r\n      .lineTo(this.width, RULER_WIDTH)\r\n      .stroke(LINE_COLOR);\r\n\r\n    const hRange = range(this.width, this.getHorizontalSteps());\r\n\r\n    hRange.map(step => {\r\n      this.root.instance\r\n        .moveTo(offset + step, 0)\r\n        .lineTo(offset + step, RULER_WIDTH)\r\n        .stroke(LINE_COLOR)\r\n        .fillColor('black')\r\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\r\n    });\r\n\r\n    hRange.map(step => {\r\n      if (step !== 0) {\r\n        this.root.instance\r\n          .moveTo(offset + step, RULER_WIDTH)\r\n          .lineTo(offset + step, this.height)\r\n          .stroke(GRID_COLOR);\r\n      }\r\n    });\r\n  },\r\n  drawVerticalRuler() {\r\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\r\n\r\n    this.root.instance\r\n      .rect(0, offset, RULER_WIDTH, this.height)\r\n      .fill(RULER_COLOR)\r\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\r\n      .lineTo(RULER_WIDTH, this.height)\r\n      .stroke(LINE_COLOR);\r\n\r\n    const vRange = range(this.height, this.getVerticalSteps());\r\n\r\n    vRange.map(step => {\r\n      this.root.instance\r\n        .moveTo(0, offset + step)\r\n        .lineTo(RULER_WIDTH, offset + step)\r\n        .stroke(LINE_COLOR)\r\n        .fillColor('black')\r\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\r\n    });\r\n\r\n    vRange.map(step => {\r\n      if (step !== 0) {\r\n        this.root.instance\r\n          .moveTo(RULER_WIDTH, offset + step)\r\n          .lineTo(this.width, offset + step)\r\n          .stroke(GRID_COLOR);\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nexport default Ruler;\r\n","class TextInstance {\r\n  constructor(root, value) {\r\n    this.root = root;\r\n    this.value = value;\r\n    this.parent = null;\r\n    this.props = {};\r\n  }\r\n\r\n  get name() {\r\n    return 'TextInstance';\r\n  }\r\n\r\n  getLayoutData() {\r\n    return this.value;\r\n  }\r\n\r\n  remove() {\r\n    this.parent.removeChild(this);\r\n  }\r\n\r\n  clone() {\r\n    return new this.constructor(this.root, this.value);\r\n  }\r\n\r\n  cleanup() {}\r\n\r\n  update(value) {\r\n    this.value = value;\r\n    this.parent.computed = false;\r\n    this.parent.container = null;\r\n    this.root.markDirty();\r\n  }\r\n}\r\n\r\nexport default TextInstance;\r\n","const PAGE_SIZES = {\r\n  '4A0': [4767.87, 6740.79],\r\n  '2A0': [3370.39, 4767.87],\r\n  A0: [2383.94, 3370.39],\r\n  A1: [1683.78, 2383.94],\r\n  A2: [1190.55, 1683.78],\r\n  A3: [841.89, 1190.55],\r\n  A4: [595.28, 841.89],\r\n  A5: [419.53, 595.28],\r\n  A6: [297.64, 419.53],\r\n  A7: [209.76, 297.64],\r\n  A8: [147.4, 209.76],\r\n  A9: [104.88, 147.4],\r\n  A10: [73.7, 104.88],\r\n  B0: [2834.65, 4008.19],\r\n  B1: [2004.09, 2834.65],\r\n  B2: [1417.32, 2004.09],\r\n  B3: [1000.63, 1417.32],\r\n  B4: [708.66, 1000.63],\r\n  B5: [498.9, 708.66],\r\n  B6: [354.33, 498.9],\r\n  B7: [249.45, 354.33],\r\n  B8: [175.75, 249.45],\r\n  B9: [124.72, 175.75],\r\n  B10: [87.87, 124.72],\r\n  C0: [2599.37, 3676.54],\r\n  C1: [1836.85, 2599.37],\r\n  C2: [1298.27, 1836.85],\r\n  C3: [918.43, 1298.27],\r\n  C4: [649.13, 918.43],\r\n  C5: [459.21, 649.13],\r\n  C6: [323.15, 459.21],\r\n  C7: [229.61, 323.15],\r\n  C8: [161.57, 229.61],\r\n  C9: [113.39, 161.57],\r\n  C10: [79.37, 113.39],\r\n  RA0: [2437.8, 3458.27],\r\n  RA1: [1729.13, 2437.8],\r\n  RA2: [1218.9, 1729.13],\r\n  RA3: [864.57, 1218.9],\r\n  RA4: [609.45, 864.57],\r\n  SRA0: [2551.18, 3628.35],\r\n  SRA1: [1814.17, 2551.18],\r\n  SRA2: [1275.59, 1814.17],\r\n  SRA3: [907.09, 1275.59],\r\n  SRA4: [637.8, 907.09],\r\n  EXECUTIVE: [521.86, 756.0],\r\n  FOLIO: [612.0, 936.0],\r\n  LEGAL: [612.0, 1008.0],\r\n  LETTER: [612.0, 792.0],\r\n  TABLOID: [792.0, 1224.0],\r\n};\r\n\r\n// Return page size in an object { width, height } given the passed size and orientation\r\n// Accepts page type string, number, array or object as parameter\r\nconst getPageSize = (size, orientation = 'portrait') => {\r\n  let result;\r\n\r\n  if (typeof size === 'string') {\r\n    result = PAGE_SIZES[size.toUpperCase()];\r\n  } else if (Array.isArray(size)) {\r\n    result = size;\r\n  } else if (typeof size === 'number') {\r\n    result = [size];\r\n  } else if (typeof size === 'object' && size.width) {\r\n    result = [size.width, size.height];\r\n  } else {\r\n    throw new Error(`Invalid Page size: ${size}`);\r\n  }\r\n\r\n  return orientation === 'portrait'\r\n    ? { width: result[0], height: result[1] }\r\n    : { width: result[1], height: result[0] };\r\n};\r\n\r\nexport default getPageSize;\r\n","import { Fragment } from 'react';\r\nimport Yoga from 'yoga-layout';\r\n\r\nimport Base from './Base';\r\nimport Ruler from '../mixins/ruler';\r\nimport warning from '../utils/warning';\r\nimport { createInstance } from './index';\r\nimport TextInstance from './TextInstance';\r\nimport getPageSize from '../utils/pageSizes';\r\nimport matchPercent from '../utils/matchPercent';\r\n\r\nclass Page extends Base {\r\n  static defaultProps = {\r\n    size: 'A4',\r\n    wrap: true,\r\n    orientation: 'portrait',\r\n  };\r\n\r\n  constructor(root, props) {\r\n    super(root, props);\r\n\r\n    this._size = null;\r\n  }\r\n\r\n  get name() {\r\n    return 'Page';\r\n  }\r\n\r\n  get document() {\r\n    return this.parent;\r\n  }\r\n\r\n  get page() {\r\n    return this;\r\n  }\r\n\r\n  get orientation() {\r\n    return this.props.orientation;\r\n  }\r\n\r\n  get size() {\r\n    if (this._size) return this._size;\r\n\r\n    this._size = getPageSize(this.props.size, this.orientation);\r\n\r\n    // Adjust size for ruler\r\n    if (this.hasHorizontalRuler()) {\r\n      this._size.width += this.getRulerWidth();\r\n    }\r\n\r\n    if (this.hasVerticalRuler()) {\r\n      this._size.height += this.getRulerWidth();\r\n    }\r\n\r\n    return this._size;\r\n  }\r\n\r\n  get isAutoHeight() {\r\n    return typeof this.size.height === 'undefined';\r\n  }\r\n\r\n  resetMargins() {\r\n    if (\r\n      !!this.marginTop ||\r\n      !!this.marginBottom ||\r\n      !!this.marginLeft ||\r\n      !!this.marginRight\r\n    ) {\r\n      warning(\r\n        false,\r\n        'Margin values are not allowed on Page element. Use padding instead.',\r\n      );\r\n\r\n      this.marginTop = 0;\r\n      this.marginBottom = 0;\r\n      this.marginLeft = 0;\r\n      this.marginRight = 0;\r\n    }\r\n  }\r\n\r\n  applyProps() {\r\n    super.applyProps();\r\n\r\n    this.top = 0;\r\n    this.left = 0;\r\n    this.width = this.size.width;\r\n\r\n    this.resetMargins();\r\n\r\n    // Add some padding if ruler present, so we can see the whole page inside it\r\n    const rulerWidth = this.getRulerWidth();\r\n\r\n    if (this.hasHorizontalRuler()) {\r\n      this.paddingTop = this.paddingTop + rulerWidth;\r\n    }\r\n\r\n    if (this.hasVerticalRuler()) {\r\n      this.paddingLeft = this.paddingLeft + rulerWidth;\r\n    }\r\n  }\r\n\r\n  setPadding(edge, value) {\r\n    const dimension =\r\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\r\n        ? this.size.height\r\n        : this.size.width;\r\n\r\n    const match = matchPercent(value);\r\n\r\n    if (match) {\r\n      this.layout.setPadding(edge, dimension * match.percent);\r\n    } else {\r\n      this.layout.setPadding(edge, value);\r\n    }\r\n  }\r\n\r\n  async addDynamicChild(parent, elements) {\r\n    if (!elements) return;\r\n    const children = Array.isArray(elements) ? elements : [elements];\r\n\r\n    for (let i = 0; i < children.length; i++) {\r\n      const child = children[i];\r\n      const { type, props } = child;\r\n\r\n      if (typeof child === 'string') {\r\n        const instance = new TextInstance(this.root, child);\r\n        parent.appendChild(instance);\r\n      } else if (type !== Fragment) {\r\n        const instance = createInstance(child, this.root);\r\n        await instance.onAppendDynamically();\r\n        parent.appendChild(instance);\r\n        instance.applyProps();\r\n        await this.addDynamicChild(instance, props.children);\r\n      } else {\r\n        await this.addDynamicChild(parent, props.children);\r\n      }\r\n    }\r\n  }\r\n\r\n  async renderDynamicNodes(props, cb) {\r\n    const listToExplore = this.children.slice(0);\r\n\r\n    while (listToExplore.length > 0) {\r\n      const node = listToExplore.shift();\r\n      const condition = cb ? cb(node) : true;\r\n\r\n      if (condition && node.props.render) {\r\n        node.removeAllChilds();\r\n        const elements = node.props.render(props);\r\n        await this.addDynamicChild(node, elements);\r\n        if (!node.fixed) node.props.render = null;\r\n        continue;\r\n      }\r\n\r\n      if (node.children) {\r\n        listToExplore.push(...node.children);\r\n      }\r\n    }\r\n  }\r\n\r\n  async nodeWillWrap(props) {\r\n    await this.renderDynamicNodes(props);\r\n    this.calculateLayout();\r\n  }\r\n\r\n  onNodeSplit(height, clone) {\r\n    clone.marginTop = 0;\r\n    this.marginBottom = 0;\r\n    this.calculateLayout();\r\n  }\r\n\r\n  clone() {\r\n    const clone = super.clone();\r\n    clone._size = this.size;\r\n    return clone;\r\n  }\r\n\r\n  update(newProps) {\r\n    super.update(newProps);\r\n    this._size = null;\r\n  }\r\n\r\n  async render() {\r\n    const { instance } = this.root;\r\n\r\n    if (!this.isAutoHeight) {\r\n      this.height = this.size.height;\r\n    }\r\n\r\n    this.calculateLayout();\r\n\r\n    const height = this.isAutoHeight ? this.height : this.size.height;\r\n\r\n    instance.addPage({\r\n      size: [this.size.width, height],\r\n      margin: 0,\r\n    });\r\n\r\n    if (this.style.backgroundColor) {\r\n      instance\r\n        .fillColor(this.style.backgroundColor)\r\n        .rect(0, 0, this.size.width, height)\r\n        .fill();\r\n    }\r\n\r\n    await this.renderChildren();\r\n\r\n    if (this.props.debug) {\r\n      this.debug();\r\n    }\r\n\r\n    this.renderRuler();\r\n  }\r\n}\r\n\r\nObject.assign(Page.prototype, Ruler);\r\n\r\nexport default Page;\r\n","import Base from './Base';\r\n\r\nclass View extends Base {\r\n  static defaultProps = {\r\n    wrap: true,\r\n  };\r\n\r\n  get name() {\r\n    return 'View';\r\n  }\r\n\r\n  async render() {\r\n    this.root.instance.save();\r\n    this.applyTransformations();\r\n    this.drawBackgroundColor();\r\n    this.drawBorders();\r\n    await this.renderChildren();\r\n    if (this.props.debug) this.debug();\r\n    this.root.instance.restore();\r\n  }\r\n}\r\n\r\nexport default View;\r\n","import isUrl from 'is-url';\r\nimport fontkit from '@react-pdf/fontkit';\r\nimport fetch from 'cross-fetch';\r\n\r\nimport { processFontWeight } from '../stylesheet/transformFontWeight';\r\n\r\nconst fetchFont = async (src, options) => {\r\n  const response = await fetch(src, options);\r\n\r\n  const buffer = await (response.buffer\r\n    ? response.buffer()\r\n    : response.arrayBuffer());\r\n\r\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\r\n};\r\n\r\nclass FontSource {\r\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\r\n    this.src = src;\r\n    this.fontFamily = fontFamily;\r\n    this.fontStyle = fontStyle || 'normal';\r\n    this.fontWeight = processFontWeight(fontWeight) || 400;\r\n\r\n    this.data = null;\r\n    this.loading = false;\r\n    this.options = options;\r\n  }\r\n\r\n  async load() {\r\n    this.loading = true;\r\n\r\n    if (BROWSER || isUrl(this.src)) {\r\n      const { headers, body, method = 'GET' } = this.options;\r\n      const data = await fetchFont(this.src, { method, body, headers });\r\n      this.data = fontkit.create(data);\r\n    } else {\r\n      this.data = await new Promise((resolve, reject) =>\r\n        fontkit.open(this.src, (err, data) =>\r\n          err ? reject(err) : resolve(data),\r\n        ),\r\n      );\r\n    }\r\n\r\n    this.loading = false;\r\n  }\r\n}\r\n\r\nclass Font {\r\n  static create(family) {\r\n    return new Font(family);\r\n  }\r\n\r\n  constructor(family) {\r\n    this.family = family;\r\n    this.sources = [];\r\n  }\r\n\r\n  register({ src, fontWeight, fontStyle, ...options }) {\r\n    this.sources.push(\r\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\r\n    );\r\n  }\r\n\r\n  resolve(descriptor) {\r\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\r\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\r\n\r\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\r\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\r\n\r\n    if (exactFit) return exactFit;\r\n\r\n    let res;\r\n\r\n    if (fontWeight >= 400 && fontWeight <= 500) {\r\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\r\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\r\n      const fit = styleSources.filter(\r\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\r\n      );\r\n\r\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\r\n    }\r\n\r\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\r\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\r\n\r\n    if (fontWeight < 400) {\r\n      res = lt[lt.length - 1] || gt[0];\r\n    }\r\n\r\n    if (fontWeight > 500) {\r\n      res = gt[0] || lt[lt.length - 1];\r\n    }\r\n\r\n    if (!res) {\r\n      throw new Error(\r\n        `Could not resolve font for ${\r\n          this.fontFamily\r\n        }, fontWeight ${fontWeight}`,\r\n      );\r\n    }\r\n\r\n    return res;\r\n  }\r\n}\r\n\r\nexport default Font;\r\n","let emojiSource;\r\n\r\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\r\n  emojiSource = { url, format };\r\n};\r\n\r\nexport const getEmojiSource = () => emojiSource;\r\n\r\nexport default {\r\n  registerEmojiSource,\r\n  getEmojiSource,\r\n};\r\n","export default [\r\n  'Courier',\r\n  'Courier-Bold',\r\n  'Courier-Oblique',\r\n  'Helvetica',\r\n  'Helvetica-Bold',\r\n  'Helvetica-Oblique',\r\n  'Times-Roman',\r\n  'Times-Bold',\r\n  'Times-Italic',\r\n];\r\n","let hyphenationCallback;\r\n\r\nexport const registerHyphenationCallback = callback => {\r\n  hyphenationCallback = callback;\r\n};\r\n\r\nexport const getHyphenationCallback = () => hyphenationCallback;\r\n\r\nexport default {\r\n  registerHyphenationCallback,\r\n  getHyphenationCallback,\r\n};\r\n","import font from './font';\r\nimport emoji from './emoji';\r\nimport standardFonts from './standard';\r\nimport hyphenation from './hyphenation';\r\nimport warning from '../utils/warning';\r\n\r\nlet fonts = {};\r\n\r\nconst register = (src, data) => {\r\n  if (typeof src === 'object') {\r\n    data = src;\r\n  } else {\r\n    warning(\r\n      false,\r\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\r\n    );\r\n\r\n    data.src = src;\r\n  }\r\n\r\n  const { family } = data;\r\n\r\n  if (!fonts[family]) {\r\n    fonts[family] = font.create(family);\r\n  }\r\n\r\n  // Bulk loading\r\n  if (data.fonts) {\r\n    for (let i = 0; i < data.fonts.length; i++) {\r\n      fonts[family].register({ family, ...data.fonts[i] });\r\n    }\r\n  } else {\r\n    fonts[family].register(data);\r\n  }\r\n};\r\n\r\nconst getRegisteredFonts = () => fonts;\r\n\r\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\r\n\r\nconst getFont = descriptor => {\r\n  const { fontFamily } = descriptor;\r\n  const isStandard = standardFonts.includes(fontFamily);\r\n\r\n  if (isStandard) return null;\r\n\r\n  if (!fonts[fontFamily]) {\r\n    throw new Error(\r\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\r\n    );\r\n  }\r\n\r\n  return fonts[fontFamily].resolve(descriptor);\r\n};\r\n\r\nconst load = async function(descriptor, doc) {\r\n  const { fontFamily } = descriptor;\r\n  const isStandard = standardFonts.includes(fontFamily);\r\n\r\n  if (isStandard) return;\r\n\r\n  const font = getFont(descriptor);\r\n\r\n  // We cache the font to avoid fetching it many times\r\n  if (!font.data && !font.loading) {\r\n    await font.load();\r\n  }\r\n};\r\n\r\nconst reset = function() {\r\n  for (const font in fonts) {\r\n    if (fonts.hasOwnProperty(font)) {\r\n      fonts[font].data = null;\r\n    }\r\n  }\r\n};\r\n\r\nconst clear = function() {\r\n  fonts = {};\r\n};\r\n\r\nexport default {\r\n  register,\r\n  getRegisteredFonts,\r\n  getRegisteredFontFamilies,\r\n  getFont,\r\n  load,\r\n  clear,\r\n  reset,\r\n  ...emoji,\r\n  ...hyphenation,\r\n};\r\n","import { PDFFont } from '@react-pdf/pdfkit';\r\n\r\nclass StandardFont {\r\n  constructor(src) {\r\n    this.name = src;\r\n    this.src = PDFFont.open(null, src);\r\n  }\r\n\r\n  layout(str) {\r\n    const [encoded, positions] = this.src.encode(str);\r\n\r\n    return {\r\n      positions,\r\n      stringIndices: positions.map((_, i) => i),\r\n      glyphs: encoded.map((g, i) => {\r\n        const glyph = this.getGlyph(parseInt(g, 16));\r\n        glyph.advanceWidth = positions[i].advanceWidth;\r\n        return glyph;\r\n      }),\r\n    };\r\n  }\r\n\r\n  glyphForCodePoint(codePoint) {\r\n    const glyph = this.getGlyph(codePoint);\r\n    glyph.advanceWidth = 400;\r\n    return glyph;\r\n  }\r\n\r\n  getGlyph(id) {\r\n    return {\r\n      id,\r\n      _font: this.src,\r\n      codePoints: [id],\r\n      isLigature: false,\r\n      name: this.src.font.characterToGlyph(id),\r\n    };\r\n  }\r\n\r\n  hasGlyphForCodePoint(codePoint) {\r\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\r\n  }\r\n\r\n  // Based on empirical observation\r\n  get ascent() {\r\n    return 900;\r\n  }\r\n\r\n  // Based on empirical observation\r\n  get descent() {\r\n    switch (this.name) {\r\n      case 'Times-Roman':\r\n      case 'Times-Bold':\r\n      case 'Times-Italic':\r\n        return -220;\r\n      case 'Courier':\r\n      case 'Courier-Bold':\r\n      case 'Courier-Oblique':\r\n        return -230;\r\n      default:\r\n        return -200;\r\n    }\r\n  }\r\n\r\n  get lineGap() {\r\n    return 0;\r\n  }\r\n\r\n  get unitsPerEm() {\r\n    return 1000;\r\n  }\r\n}\r\n\r\nexport default StandardFont;\r\n","import { pathOr, last } from 'ramda';\r\n\r\nimport StandardFont from './standardFont';\r\n\r\nconst fontCache = {};\r\n\r\nconst IGNORED_CODE_POINTS = [173];\r\n\r\nconst getFontSize = pathOr(12, ['attributes', 'fontSize']);\r\n\r\nconst getFallbackFont = () => {\r\n  return getOrCreateFont('Helvetica');\r\n};\r\n\r\nconst getOrCreateFont = name => {\r\n  if (fontCache[name]) return fontCache[name];\r\n\r\n  const font = new StandardFont(name);\r\n  fontCache[name] = font;\r\n\r\n  return font;\r\n};\r\n\r\nconst shouldFallbackToFont = (codePoint, font) => {\r\n  return (\r\n    !IGNORED_CODE_POINTS.includes(codePoint) &&\r\n    !font.hasGlyphForCodePoint(codePoint) &&\r\n    getFallbackFont().hasGlyphForCodePoint(codePoint)\r\n  );\r\n};\r\n\r\nconst fontSubstitution = () => ({ string, runs }) => {\r\n  let lastFont = null;\r\n  let lastIndex = 0;\r\n  let index = 0;\r\n\r\n  const res = [];\r\n\r\n  for (const run of runs) {\r\n    const fontSize = getFontSize(run);\r\n    const defaultFont =\r\n      typeof run.attributes.font === 'string'\r\n        ? getOrCreateFont(run.attributes.font)\r\n        : run.attributes.font;\r\n\r\n    if (string.length === 0) {\r\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\r\n      break;\r\n    }\r\n\r\n    for (const char of string.slice(run.start, run.end)) {\r\n      const codePoint = char.codePointAt();\r\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\r\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\r\n\r\n      // If the default font does not have a glyph and the fallback font does, we use it\r\n      if (font !== lastFont) {\r\n        if (lastFont) {\r\n          res.push({\r\n            start: lastIndex,\r\n            end: index,\r\n            attributes: {\r\n              font: lastFont,\r\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\r\n            },\r\n          });\r\n        }\r\n\r\n        lastFont = font;\r\n        lastIndex = index;\r\n      }\r\n\r\n      index += char.length;\r\n    }\r\n  }\r\n\r\n  if (lastIndex < string.length) {\r\n    const fontSize = getFontSize(last(runs));\r\n\r\n    res.push({\r\n      start: lastIndex,\r\n      end: string.length,\r\n      attributes: {\r\n        font: lastFont,\r\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\r\n      },\r\n    });\r\n  }\r\n\r\n  return { string, runs: res };\r\n};\r\n\r\nexport default fontSubstitution;\r\n","import layoutEngine from '@react-pdf/textkit/layout';\r\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\r\nimport justification from '@react-pdf/textkit/engines/justification';\r\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\r\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\r\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\r\n\r\nimport fontSubstitution from './fontSubstitution';\r\n\r\nconst engines = {\r\n  linebreaker,\r\n  justification,\r\n  textDecoration,\r\n  scriptItemizer,\r\n  wordHyphenation,\r\n  fontSubstitution,\r\n};\r\n\r\nconst engine = layoutEngine(engines);\r\n\r\nexport default engine;\r\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\r\n\r\nexport const getURL = value => {\r\n  if (!value) return '';\r\n\r\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\r\n    return `http://${value}`;\r\n  }\r\n\r\n  return value;\r\n};\r\n","import PNG from '@react-pdf/png-js';\r\n\r\nPNG.isValid = function(data) {\r\n  try {\r\n    return !!new PNG(data);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default PNG;\r\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\r\n\r\nconst MARKERS = [\r\n  0xffc0,\r\n  0xffc1,\r\n  0xffc2,\r\n  0xffc3,\r\n  0xffc5,\r\n  0xffc6,\r\n  0xffc7,\r\n  0xffc8,\r\n  0xffc9,\r\n  0xffca,\r\n  0xffcb,\r\n  0xffcc,\r\n  0xffcd,\r\n  0xffce,\r\n  0xffcf,\r\n];\r\n\r\nclass JPEG {\r\n  data = null;\r\n  width = null;\r\n  height = null;\r\n\r\n  constructor(data) {\r\n    this.data = data;\r\n\r\n    if (data.readUInt16BE(0) !== 0xffd8) {\r\n      throw new Error('SOI not found in JPEG');\r\n    }\r\n\r\n    let marker;\r\n    let pos = 2;\r\n\r\n    while (pos < data.length) {\r\n      marker = data.readUInt16BE(pos);\r\n      pos += 2;\r\n      if (MARKERS.includes(marker)) {\r\n        break;\r\n      }\r\n      pos += data.readUInt16BE(pos);\r\n    }\r\n\r\n    if (!MARKERS.includes(marker)) {\r\n      throw new Error('Invalid JPEG.');\r\n    }\r\n\r\n    pos += 3;\r\n    this.height = data.readUInt16BE(pos);\r\n\r\n    pos += 2;\r\n    this.width = data.readUInt16BE(pos);\r\n  }\r\n}\r\n\r\nJPEG.isValid = function(data) {\r\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\r\n    return false;\r\n  }\r\n\r\n  let marker;\r\n  let pos = 2;\r\n\r\n  while (pos < data.length) {\r\n    marker = data.readUInt16BE(pos);\r\n    pos += 2;\r\n    if (MARKERS.includes(marker)) {\r\n      break;\r\n    }\r\n    pos += data.readUInt16BE(pos);\r\n  }\r\n\r\n  if (!MARKERS.includes(marker)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport default JPEG;\r\n","const createCache = ({ limit = 100 } = {}) => {\r\n  let cache = {};\r\n  let keys = [];\r\n\r\n  return {\r\n    get: key => cache[key],\r\n    set: (key, value) => {\r\n      keys.push(key);\r\n      if (keys.length > limit) {\r\n        delete cache[keys.shift()];\r\n      }\r\n      cache[key] = value;\r\n    },\r\n    reset: () => {\r\n      cache = {};\r\n      keys = [];\r\n    },\r\n    length: () => keys.length,\r\n  };\r\n};\r\n\r\nexport default createCache;\r\n","import fs from 'fs';\r\nimport url from 'url';\r\nimport path from 'path';\r\nimport fetch from 'cross-fetch';\r\n\r\nimport PNG from './png';\r\nimport JPEG from './jpeg';\r\nimport createCache from './cache';\r\n\r\nexport const IMAGE_CACHE = createCache({ limit: 30 });\r\n\r\nexport const getAbsoluteLocalPath = src => {\r\n  if (BROWSER) {\r\n    throw new Error('Cannot check local paths in client-side environment');\r\n  }\r\n\r\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\r\n    src,\r\n  );\r\n  const absolutePath = path.resolve(pathname);\r\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\r\n    return undefined;\r\n  }\r\n  return absolutePath;\r\n};\r\n\r\nexport const isDangerousLocalPath = (\r\n  filename,\r\n  { safePath = './public' } = {},\r\n) => {\r\n  if (BROWSER) {\r\n    throw new Error(\r\n      'Cannot check dangerous local path in client-side environemnt',\r\n    );\r\n  }\r\n  const absoluteSafePath = path.resolve(safePath);\r\n  const absoluteFilePath = path.resolve(filename);\r\n  return !absoluteFilePath.startsWith(absoluteSafePath);\r\n};\r\n\r\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\r\n  new Promise((resolve, reject) => {\r\n    try {\r\n      if (BROWSER) {\r\n        return reject(new Error('Cannot fetch local file in this environemnt'));\r\n      }\r\n      const absolutePath = getAbsoluteLocalPath(src);\r\n      if (!absolutePath) {\r\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\r\n      }\r\n      if (\r\n        !allowDangerousPaths &&\r\n        isDangerousLocalPath(absolutePath, { safePath })\r\n      ) {\r\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\r\n      }\r\n      fs.readFile(absolutePath, (err, data) =>\r\n        err ? reject(err) : resolve(data),\r\n      );\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n\r\nconst fetchRemoteFile = async (uri, options) => {\r\n  const response = await fetch(uri, options);\r\n\r\n  const buffer = await (response.buffer\r\n    ? response.buffer()\r\n    : response.arrayBuffer());\r\n\r\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\r\n};\r\n\r\nconst isValidFormat = format => {\r\n  const lower = format.toLowerCase();\r\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\r\n};\r\n\r\nconst guessFormat = buffer => {\r\n  let format;\r\n\r\n  if (JPEG.isValid(buffer)) {\r\n    format = 'jpg';\r\n  } else if (PNG.isValid(buffer)) {\r\n    format = 'png';\r\n  }\r\n\r\n  return format;\r\n};\r\n\r\nconst isCompatibleBase64 = ({ uri }) =>\r\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\r\n\r\nfunction getImage(body, extension) {\r\n  switch (extension.toLowerCase()) {\r\n    case 'jpg':\r\n    case 'jpeg':\r\n      return new JPEG(body);\r\n    case 'png':\r\n      return new PNG(body);\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nconst resolveBase64Image = ({ uri }) => {\r\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\r\n  const format = match[1];\r\n  const data = match[2];\r\n\r\n  if (!isValidFormat(format)) {\r\n    throw new Error(`Base64 image invalid format: ${format}`);\r\n  }\r\n\r\n  return new Promise(resolve => {\r\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\r\n  });\r\n};\r\n\r\nconst resolveImageFromData = src => {\r\n  if (src.data && src.format) {\r\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\r\n  }\r\n\r\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\r\n};\r\n\r\nconst resolveBufferImage = buffer => {\r\n  const format = guessFormat(buffer);\r\n\r\n  if (format) {\r\n    return new Promise(resolve => resolve(getImage(buffer, format)));\r\n  }\r\n};\r\n\r\nconst getImageFormat = body => {\r\n  const isPng =\r\n    body[0] === 137 &&\r\n    body[1] === 80 &&\r\n    body[2] === 78 &&\r\n    body[3] === 71 &&\r\n    body[4] === 13 &&\r\n    body[5] === 10 &&\r\n    body[6] === 26 &&\r\n    body[7] === 10;\r\n\r\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\r\n\r\n  let extension = '';\r\n  if (isPng) {\r\n    extension = 'png';\r\n  } else if (isJpg) {\r\n    extension = 'jpg';\r\n  } else {\r\n    throw new Error('Not valid image extension');\r\n  }\r\n\r\n  return extension;\r\n};\r\n\r\nconst resolveImageFromUrl = async (src, options) => {\r\n  const { uri, body, headers, method = 'GET' } = src;\r\n\r\n  const data =\r\n    !BROWSER && getAbsoluteLocalPath(uri)\r\n      ? await fetchLocalFile(uri, options)\r\n      : await fetchRemoteFile(uri, { body, headers, method });\r\n\r\n  const extension = getImageFormat(data);\r\n\r\n  return getImage(data, extension);\r\n};\r\n\r\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\r\n  const cacheKey = src.data ? src.data.toString() : src.uri;\r\n\r\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\r\n    return IMAGE_CACHE.get(cacheKey);\r\n  }\r\n\r\n  let image;\r\n  if (isCompatibleBase64(src)) {\r\n    image = resolveBase64Image(src);\r\n  } else if (Buffer.isBuffer(src)) {\r\n    image = resolveBufferImage(src);\r\n  } else if (typeof src === 'object' && src.data) {\r\n    image = resolveImageFromData(src);\r\n  } else {\r\n    image = resolveImageFromUrl(src, options);\r\n  }\r\n\r\n  if (!image) {\r\n    throw new Error('Cannot resolve image');\r\n  }\r\n\r\n  if (cache) {\r\n    IMAGE_CACHE.set(cacheKey, image);\r\n  }\r\n\r\n  return image;\r\n};\r\n","/* eslint-disable no-cond-assign */\r\nimport emojiRegex from 'emoji-regex';\r\nimport Font from '../font';\r\nimport { resolveImage } from '../utils/image';\r\n\r\n// Caches emoji images data\r\nconst emojis = {};\r\nconst regex = emojiRegex();\r\n\r\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\r\n\r\n// Returns a function to be able to mock resolveImage.\r\nconst makeFetchEmojiImage = () => reflect(resolveImage);\r\n\r\n/**\r\n * When an emoji as no color, it might still have 2 parts,\r\n * the canonical emoji and an empty string.\r\n * ex.\r\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\r\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\r\n *\r\n * The empty string needs to be removed otherwise the generated\r\n * url will be incorect.\r\n */\r\nconst _removeNoColor = x => x !== '️';\r\n\r\nconst getCodePoints = string =>\r\n  Array.from(string)\r\n    .filter(_removeNoColor)\r\n    .map(char => char.codePointAt(0).toString(16))\r\n    .join('-');\r\n\r\nconst buildEmojiUrl = emoji => {\r\n  const { url, format } = Font.getEmojiSource();\r\n  return `${url}${getCodePoints(emoji)}.${format}`;\r\n};\r\n\r\nexport const fetchEmojis = string => {\r\n  const emojiSource = Font.getEmojiSource();\r\n\r\n  if (!emojiSource || !emojiSource.url) return [];\r\n\r\n  const promises = [];\r\n\r\n  let match;\r\n  while ((match = regex.exec(string))) {\r\n    const emoji = match[0];\r\n\r\n    if (!emojis[emoji] || emojis[emoji].loading) {\r\n      const emojiUrl = buildEmojiUrl(emoji);\r\n\r\n      emojis[emoji] = { loading: true };\r\n      const fetchEmojiImage = makeFetchEmojiImage();\r\n      promises.push(\r\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\r\n          emojis[emoji].loading = false;\r\n          emojis[emoji].data = image.data;\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  return promises;\r\n};\r\n\r\nexport const embedEmojis = fragments => {\r\n  const result = [];\r\n\r\n  for (let i = 0; i < fragments.length; i++) {\r\n    const fragment = fragments[i];\r\n\r\n    let match;\r\n    let lastIndex = 0;\r\n\r\n    while ((match = regex.exec(fragment.string))) {\r\n      const index = match.index;\r\n      const emoji = match[0];\r\n      const emojiSize = fragment.attributes.fontSize;\r\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\r\n\r\n      // If emoji image was found, we create a new fragment with the\r\n      // correct attachment and object substitution character;\r\n      if (emojis[emoji] && emojis[emoji].data) {\r\n        result.push({\r\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\r\n          attributes: {\r\n            ...fragment.attributes,\r\n            attachment: {\r\n              width: emojiSize,\r\n              height: emojiSize,\r\n              yOffset: Math.floor(emojiSize * 0.1),\r\n              image: emojis[emoji].data,\r\n            },\r\n          },\r\n        });\r\n      } else {\r\n        // If no emoji data, we just replace the emoji with a nodef char\r\n        result.push({\r\n          string: chunk.replace(match, String.fromCharCode(0)),\r\n          attributes: fragment.attributes,\r\n        });\r\n      }\r\n\r\n      lastIndex = index + emoji.length;\r\n    }\r\n\r\n    if (lastIndex < fragment.string.length) {\r\n      result.push({\r\n        string: fragment.string.slice(lastIndex),\r\n        attributes: fragment.attributes,\r\n      });\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n","const IGNORABLE_CODEPOINTS = [\r\n  8232, // LINE_SEPARATOR\r\n  8233, // PARAGRAPH_SEPARATOR\r\n];\r\n\r\nconst buildSubsetForFont = font =>\r\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\r\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\r\n      return acc;\r\n    }\r\n    return [...acc, String.fromCharCode(codePoint)];\r\n  }, []);\r\n\r\nexport const ignoreChars = fragments =>\r\n  fragments.map(fragment => {\r\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\r\n    const subsetRegex = new RegExp(charSubset.join('|'));\r\n\r\n    return {\r\n      string: fragment.string.replace(subsetRegex, ''),\r\n      attributes: fragment.attributes,\r\n    };\r\n  });\r\n","import { isNil, propEq, prop, complement, compose } from 'ramda';\r\nimport AttributedString from '@react-pdf/textkit/attributedString';\r\n\r\nimport Font from '../font';\r\nimport { embedEmojis } from './emoji';\r\nimport { ignoreChars } from './ignorableChars';\r\n\r\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\r\n\r\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\r\n\r\nconst isImage = propEq('name', 'Image');\r\n\r\nconst isTextInstance = compose(\r\n  complement(isNil),\r\n  prop('value'),\r\n);\r\n\r\nconst transformText = (text, transformation) => {\r\n  switch (transformation) {\r\n    case 'uppercase':\r\n      return text.toUpperCase();\r\n    case 'lowercase':\r\n      return text.toLowerCase();\r\n    case 'capitalize':\r\n      return capitalize(text);\r\n    default:\r\n      return text;\r\n  }\r\n};\r\n\r\nexport const getFragments = instance => {\r\n  if (!instance) return [{ string: '' }];\r\n\r\n  let fragments = [];\r\n  const {\r\n    color = 'black',\r\n    backgroundColor,\r\n    fontFamily = 'Helvetica',\r\n    fontWeight,\r\n    fontStyle,\r\n    fontSize = 18,\r\n    textAlign = 'left',\r\n    lineHeight,\r\n    textDecoration,\r\n    textDecorationColor,\r\n    textDecorationStyle,\r\n    textTransform,\r\n    letterSpacing,\r\n    textIndent,\r\n    opacity,\r\n  } = instance.style;\r\n\r\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\r\n  const font = obj ? obj.data : fontFamily;\r\n  const attributes = {\r\n    font,\r\n    color,\r\n    opacity,\r\n    fontSize,\r\n    backgroundColor,\r\n    align: textAlign,\r\n    indent: textIndent,\r\n    link: instance.src,\r\n    characterSpacing: letterSpacing,\r\n    underlineStyle: textDecorationStyle,\r\n    underline: textDecoration === 'underline',\r\n    underlineColor: textDecorationColor || color,\r\n    strike: textDecoration === 'line-through',\r\n    strikeStyle: textDecorationStyle,\r\n    strikeColor: textDecorationColor || color,\r\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\r\n  };\r\n\r\n  instance.children.forEach(child => {\r\n    if (isImage(child)) {\r\n      fragments.push({\r\n        string: String.fromCharCode(0xfffc),\r\n        attributes: {\r\n          ...attributes,\r\n          attachment: {\r\n            width: child.style.width || fontSize,\r\n            height: child.style.height || fontSize,\r\n            image: child.image.data,\r\n          },\r\n        },\r\n      });\r\n    } else if (isTextInstance(child)) {\r\n      fragments.push({\r\n        string: transformText(child.value, textTransform),\r\n        attributes,\r\n      });\r\n    } else {\r\n      if (child) {\r\n        fragments.push(...getFragments(child));\r\n      }\r\n    }\r\n  });\r\n\r\n  for (const preprocessor of PREPROCESSORS) {\r\n    fragments = preprocessor(fragments);\r\n  }\r\n\r\n  return fragments;\r\n};\r\n\r\nexport const getAttributedString = instance => {\r\n  return AttributedString.fromFragments(getFragments(instance));\r\n};\r\n","import Yoga from 'yoga-layout';\r\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\r\nimport AttributedString from '@react-pdf/textkit/attributedString';\r\n\r\nimport Base from './Base';\r\nimport Font from '../font';\r\nimport layout from '../layout';\r\nimport { getURL } from '../utils/url';\r\nimport { getAttributedString } from '../utils/attributedString';\r\n\r\nclass Text extends Base {\r\n  static defaultProps = {\r\n    wrap: true,\r\n    widows: 2,\r\n    orphans: 2,\r\n  };\r\n\r\n  constructor(root, props) {\r\n    super(root, props);\r\n\r\n    this.start = 0;\r\n    this.end = 0;\r\n\r\n    this.blocks = null;\r\n    this.computed = false;\r\n    this.attributedString = null;\r\n    this.layoutOptions = {\r\n      hyphenationPenalty: props.hyphenationPenalty,\r\n      hyphenationCallback: Font.getHyphenationCallback(),\r\n      shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\r\n    };\r\n\r\n    this.layout.setMeasureFunc(this.measureText.bind(this));\r\n  }\r\n\r\n  get name() {\r\n    return 'Text';\r\n  }\r\n\r\n  get src() {\r\n    return getURL(this.props.src || this.props.href);\r\n  }\r\n\r\n  get lines() {\r\n    if (!this.blocks) return [];\r\n\r\n    return this.blocks\r\n      .reduce((acc, block) => [...acc, ...block], [])\r\n      .splice(this.start, this.end);\r\n  }\r\n\r\n  get linesHeight() {\r\n    if (!this.blocks) return -1;\r\n    return this.lines.reduce((acc, line) => acc + line.box.height, 0);\r\n  }\r\n\r\n  get linesWidth() {\r\n    if (!this.blocks) return -1;\r\n    return Math.max(\r\n      ...this.lines.map(line => AttributedString.advanceWidth(line)),\r\n    );\r\n  }\r\n\r\n  appendChild(child) {\r\n    if (child) {\r\n      child.parent = this;\r\n      this.children.push(child);\r\n      this.computed = false;\r\n      this.attributedString = null;\r\n      this.markDirty();\r\n    }\r\n  }\r\n\r\n  removeChild(child) {\r\n    const index = this.children.indexOf(child);\r\n\r\n    if (index !== -1) {\r\n      child.parent = null;\r\n      this.children.splice(index, 1);\r\n      this.computed = false;\r\n      this.attributedString = null;\r\n      this.markDirty();\r\n\r\n      child.cleanup();\r\n    }\r\n  }\r\n\r\n  lineIndexAtHeight(height) {\r\n    let counter = 0;\r\n\r\n    for (let i = 0; i < this.lines.length; i++) {\r\n      const line = this.lines[i];\r\n      if (counter + line.box.height > height) return i;\r\n      counter += line.box.height;\r\n    }\r\n\r\n    return this.lines.length;\r\n  }\r\n\r\n  heightAtLineIndex(index) {\r\n    let counter = 0;\r\n\r\n    for (let i = 0; i < index; i++) {\r\n      const line = this.lines[i];\r\n      counter += line.box.height;\r\n    }\r\n\r\n    return counter;\r\n  }\r\n\r\n  layoutText(width, height) {\r\n    this.attributedString = getAttributedString(this);\r\n\r\n    // Text layout is expensive. That's why we ensure to only do it once\r\n    // (except dynamic nodes. Those change content and needs to relayout every time)\r\n    if (!this.blocks || this.props.render) {\r\n      // Do the actual text layout.\r\n      /// If height null or NaN, we take some liberty on layout height\r\n      const container = {\r\n        x: 0,\r\n        y: 0,\r\n        width,\r\n        height: height || Infinity,\r\n        maxLines: this.style.maxLines,\r\n        truncateMode: this.style.textOverflow,\r\n      };\r\n      this.blocks = layout(\r\n        this.attributedString,\r\n        container,\r\n        this.layoutOptions,\r\n      );\r\n    }\r\n\r\n    // Get the total amount of rendered lines\r\n    const linesCount = this.blocks.reduce((acc, b) => acc + b.length, 0);\r\n\r\n    this.end = linesCount + 1;\r\n    this.computed = true;\r\n  }\r\n\r\n  measureText(width, widthMode, height, heightMode) {\r\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\r\n      this.layoutText(width, height);\r\n\r\n      return { height: this.linesHeight };\r\n    }\r\n\r\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\r\n      this.layoutText(width, height);\r\n\r\n      return {\r\n        height: this.linesHeight,\r\n        width: Math.min(width, this.linesWidth),\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  resolveStyles() {\r\n    const styles = super.resolveStyles();\r\n\r\n    // Inherit relative positioning for inline childs\r\n    if (\r\n      this.parent &&\r\n      this.parent.name === 'Text' &&\r\n      this.parent.style.position === 'relative'\r\n    ) {\r\n      styles.top = styles.top || this.parent.style.top;\r\n      styles.bottom = styles.bottom || this.parent.style.bottom;\r\n      styles.position = styles.position || 'relative';\r\n    }\r\n\r\n    // Apply default link styles\r\n    if (this.src) {\r\n      styles.color = styles.color || 'blue';\r\n      styles.textDecoration = styles.textDecoration || 'underline';\r\n    }\r\n\r\n    return styles;\r\n  }\r\n\r\n  wrapHeight(height) {\r\n    const { orphans, widows } = this.props;\r\n    const linesQuantity = this.lines.length;\r\n    const sliceHeight = height - this.paddingTop;\r\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\r\n\r\n    if (linesQuantity < orphans) {\r\n      return height;\r\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\r\n      return 0;\r\n    } else if (linesQuantity === orphans + widows) {\r\n      return this.heightAtLineIndex(orphans);\r\n    } else if (linesQuantity - slicedLine < widows) {\r\n      return height - this.heightAtLineIndex(widows - 1);\r\n    }\r\n\r\n    return height;\r\n  }\r\n\r\n  onNodeSplit(height, clone) {\r\n    const wrapHeight = this.wrapHeight(height);\r\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\r\n\r\n    clone.marginTop = 0;\r\n    clone.paddingTop = 0;\r\n    clone.start = slicedLineIndex;\r\n    clone.attributedString = this.attributedString;\r\n\r\n    this.height = wrapHeight;\r\n    this.marginBottom = 0;\r\n    this.paddingBottom = 0;\r\n    this.end = slicedLineIndex;\r\n  }\r\n\r\n  clone() {\r\n    const text = super.clone();\r\n\r\n    text.layoutEngine = this.layoutEngine;\r\n\r\n    // Save calculated layout for non-dynamic clone elements\r\n    if (this.blocks && !this.props.render) {\r\n      text.blocks = [...this.blocks];\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  renderText() {\r\n    const { top, left } = this.getAbsoluteLayout();\r\n    const initialY = this.lines[0] ? this.lines[0].box.y : 0;\r\n\r\n    // We translate lines based on Yoga container\r\n    this.root.instance.save();\r\n    this.root.instance.translate(\r\n      left + this.padding.left,\r\n      top + this.padding.top - initialY,\r\n    );\r\n\r\n    // Perform actual text rendering on document\r\n    PDFRenderer.render(this.root.instance, [this.lines]);\r\n\r\n    this.root.instance.restore();\r\n  }\r\n\r\n  async render() {\r\n    this.root.instance.save();\r\n    this.applyTransformations();\r\n    this.drawBackgroundColor();\r\n    this.drawBorders();\r\n\r\n    // Calculate text layout if needed\r\n    // This can happen if measureText was not called by Yoga\r\n    if (!this.computed) {\r\n      this.layoutText(\r\n        this.width - this.padding.left - this.padding.right,\r\n        this.height - this.padding.top - this.padding.bottom,\r\n      );\r\n    }\r\n\r\n    this.renderText();\r\n\r\n    if (this.props.debug) {\r\n      this.debug();\r\n    }\r\n\r\n    this.root.instance.restore();\r\n  }\r\n}\r\n\r\nexport default Text;\r\n","import Base from './Base';\r\n\r\nclass Note extends Base {\r\n  static defaultProps = {};\r\n\r\n  get name() {\r\n    return 'Note';\r\n  }\r\n\r\n  appendChild(child) {\r\n    if (child.name !== 'TextInstance') {\r\n      throw new Error('Note only accepts string children');\r\n    }\r\n\r\n    if (child) {\r\n      child.parent = this;\r\n      this.children.push(child);\r\n    }\r\n  }\r\n\r\n  removeChild(child) {\r\n    const index = this.children.indexOf(child);\r\n\r\n    if (index !== -1) {\r\n      child.parent = null;\r\n      this.children.splice(index, 1);\r\n    }\r\n\r\n    child.cleanup();\r\n  }\r\n\r\n  applyProps() {\r\n    super.applyProps();\r\n    this.height = 0;\r\n    this.width = 0;\r\n  }\r\n\r\n  async render() {\r\n    const { top, left } = this.getAbsoluteLayout();\r\n    const value = this.children[0] ? this.children[0].value : '';\r\n\r\n    this.root.instance.note(left, top, 0, 0, value);\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import matchPercent from './matchPercent';\r\n\r\nconst isNumeric = n => {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n};\r\n\r\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\r\n  const cr = cw / ch;\r\n  const ir = iw / ih;\r\n\r\n  const pxp = matchPercent(px);\r\n  const pyp = matchPercent(py);\r\n  const pxv = pxp ? pxp.percent : 0.5;\r\n  const pyv = pyp ? pyp.percent : 0.5;\r\n\r\n  if (cr > ir) {\r\n    const height = ch;\r\n    const width = height * ir;\r\n    const yOffset = isNumeric(py) ? py : 0;\r\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\r\n\r\n    return { width, height, xOffset, yOffset };\r\n  } else {\r\n    const width = cw;\r\n    const height = width / ir;\r\n    const xOffset = isNumeric(px) ? px : 0;\r\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\r\n\r\n    return { width, height, yOffset, xOffset };\r\n  }\r\n};\r\n\r\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\r\n  const width = iw;\r\n  const height = ih;\r\n  const pxp = matchPercent(px);\r\n  const pyp = matchPercent(py);\r\n  const pxv = pxp ? pxp.percent : 0.5;\r\n  const pyv = pyp ? pyp.percent : 0.5;\r\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\r\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\r\n\r\n  return { width, height, xOffset, yOffset };\r\n};\r\n\r\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\r\n  const ir = iw / ih;\r\n  const cr = cw / ch;\r\n\r\n  const pxp = matchPercent(px);\r\n  const pyp = matchPercent(py);\r\n  const pxv = pxp ? pxp.percent : 0.5;\r\n  const pyv = pyp ? pyp.percent : 0.5;\r\n\r\n  if (cr > ir) {\r\n    const width = cw;\r\n    const height = width / ir;\r\n    const xOffset = isNumeric(px) ? px : 0;\r\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\r\n    return { width, height, yOffset, xOffset };\r\n  } else {\r\n    const height = ch;\r\n    const width = height * ir;\r\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\r\n    const yOffset = isNumeric(py) ? py : 0;\r\n    return { width, height, xOffset, yOffset };\r\n  }\r\n};\r\n\r\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\r\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\r\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\r\n\r\n  return containDimension.width < noneDimension.width\r\n    ? containDimension\r\n    : noneDimension;\r\n};\r\n\r\nconst applyFillObjectFit = (cw, ch, px, py) => {\r\n  return {\r\n    width: cw,\r\n    height: ch,\r\n    xOffset: matchPercent(px) ? 0 : px || 0,\r\n    yOffset: matchPercent(py) ? 0 : py || 0,\r\n  };\r\n};\r\n\r\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\r\n  switch (type) {\r\n    case 'contain':\r\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\r\n    case 'cover':\r\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\r\n    case 'none':\r\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\r\n    case 'scale-down':\r\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\r\n    default:\r\n      return applyFillObjectFit(cw, ch, px, py);\r\n  }\r\n};\r\n","import Yoga from 'yoga-layout';\r\n\r\nimport Base from './Base';\r\nimport warning from '../utils/warning';\r\nimport { resolveImage } from '../utils/image';\r\nimport { resolveObjectFit } from '../utils/objectFit';\r\n\r\nconst SAFETY_HEIGHT = 10;\r\n\r\nclass Image extends Base {\r\n  static defaultProps = {\r\n    wrap: false,\r\n    cache: true,\r\n    style: {},\r\n  };\r\n\r\n  constructor(root, props) {\r\n    super(root, props);\r\n\r\n    this.image = null;\r\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\r\n  }\r\n\r\n  get name() {\r\n    return 'Image';\r\n  }\r\n\r\n  shouldGrow() {\r\n    return !!this.style.flexGrow;\r\n  }\r\n\r\n  measureImage(width, widthMode, height, heightMode) {\r\n    const imageMargin = this.margin;\r\n    const pagePadding = this.page.padding;\r\n    const pageArea = this.page.isAutoHeight\r\n      ? Infinity\r\n      : this.page.size.height -\r\n        pagePadding.top -\r\n        pagePadding.bottom -\r\n        imageMargin.top -\r\n        imageMargin.bottom -\r\n        SAFETY_HEIGHT;\r\n\r\n    // Skip measure if image data not present yet\r\n    if (!this.image) return { width: 0, height: 0 };\r\n\r\n    if (\r\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\r\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\r\n    ) {\r\n      const scaledHeight = width / this.ratio;\r\n      return { height: Math.min(pageArea, scaledHeight) };\r\n    }\r\n\r\n    if (\r\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\r\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\r\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\r\n    ) {\r\n      return { width: Math.min(height * this.ratio, width) };\r\n    }\r\n\r\n    if (\r\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\r\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\r\n    ) {\r\n      const scaledHeight = width / this.ratio;\r\n      return { height: Math.min(height, pageArea, scaledHeight) };\r\n    }\r\n\r\n    if (\r\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\r\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\r\n    ) {\r\n      if (this.ratio > 1) {\r\n        return {\r\n          width: width,\r\n          height: Math.min(width / this.ratio, height),\r\n        };\r\n      } else {\r\n        return {\r\n          width: Math.min(height * this.ratio, width),\r\n          height: height,\r\n        };\r\n      }\r\n    }\r\n\r\n    return { height, width };\r\n  }\r\n\r\n  get ratio() {\r\n    return this.image.data ? this.image.width / this.image.height : 1;\r\n  }\r\n\r\n  get src() {\r\n    const src = this.props.src || this.props.source;\r\n    return typeof src === 'string' ? { uri: src } : src;\r\n  }\r\n\r\n  async fetch() {\r\n    const { cache, safePath, allowDangerousPaths } = this.props;\r\n\r\n    if (!this.src) {\r\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.image = await resolveImage(this.src, {\r\n        cache,\r\n        safePath,\r\n        allowDangerousPaths,\r\n      });\r\n    } catch (e) {\r\n      this.image = { width: 0, height: 0 };\r\n      console.warn(e.message);\r\n    }\r\n  }\r\n\r\n  clone() {\r\n    const clone = super.clone();\r\n    clone.image = this.image;\r\n    return clone;\r\n  }\r\n\r\n  async onAppendDynamically() {\r\n    await this.fetch();\r\n  }\r\n\r\n  renderImage() {\r\n    const padding = this.padding;\r\n    const { left, top } = this.getAbsoluteLayout();\r\n    const { opacity, objectPositionX, objectPositionY } = this.style;\r\n\r\n    this.root.instance.save();\r\n\r\n    // Clip path to keep image inside border radius\r\n    this.clip();\r\n\r\n    if (this.image.data) {\r\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\r\n        this.style.objectFit,\r\n        this.width - padding.left - padding.right,\r\n        this.height - padding.top - padding.bottom,\r\n        this.image.width,\r\n        this.image.height,\r\n        objectPositionX,\r\n        objectPositionY,\r\n      );\r\n\r\n      if (width !== 0 && height !== 0) {\r\n        this.root.instance\r\n          .fillOpacity(opacity)\r\n          .image(\r\n            this.image.data,\r\n            left + padding.left + xOffset,\r\n            top + padding.top + yOffset,\r\n            { width, height },\r\n          );\r\n      } else {\r\n        warning(\r\n          false,\r\n          `Image with src '${\r\n            this.props.src\r\n          }' skipped due to invalid dimensions`,\r\n        );\r\n      }\r\n    }\r\n\r\n    this.root.instance.restore();\r\n  }\r\n\r\n  async render() {\r\n    this.root.instance.save();\r\n    this.applyTransformations();\r\n    this.drawBackgroundColor();\r\n    this.renderImage();\r\n    this.drawBorders();\r\n\r\n    if (this.props.debug) {\r\n      this.debug();\r\n    }\r\n\r\n    this.root.instance.restore();\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import wrapPages from 'page-wrapping';\r\n\r\nimport Font from '../font';\r\nimport { fetchEmojis } from '../utils/emoji';\r\n\r\nclass Document {\r\n  static defaultProps = {\r\n    author: null,\r\n    keywords: null,\r\n    subject: null,\r\n    title: null,\r\n  };\r\n\r\n  constructor(root, props) {\r\n    this.root = root;\r\n    this.style = {};\r\n    this.props = props;\r\n    this.children = [];\r\n    this.subpages = [];\r\n  }\r\n\r\n  get name() {\r\n    return 'Document';\r\n  }\r\n\r\n  appendChild(child) {\r\n    child.parent = this;\r\n    this.children.push(child);\r\n  }\r\n\r\n  removeChild(child) {\r\n    const index = this.children.indexOf(child);\r\n\r\n    if (index !== -1) {\r\n      child.parent = null;\r\n      this.children.splice(index, 1);\r\n    }\r\n\r\n    child.cleanup();\r\n  }\r\n\r\n  addMetaData() {\r\n    const { title, author, subject, keywords, creator, producer } = this.props;\r\n\r\n    // The object keys need to start with a capital letter by the PDF spec\r\n    if (title) this.root.instance.info.Title = title;\r\n    if (author) this.root.instance.info.Author = author;\r\n    if (subject) this.root.instance.info.Subject = subject;\r\n    if (keywords) this.root.instance.info.Keywords = keywords;\r\n\r\n    this.root.instance.info.Creator = creator || 'react-pdf';\r\n    this.root.instance.info.Producer = producer || 'react-pdf';\r\n  }\r\n\r\n  async loadFonts() {\r\n    const promises = [];\r\n    const listToExplore = this.children.slice(0);\r\n\r\n    while (listToExplore.length > 0) {\r\n      const node = listToExplore.shift();\r\n\r\n      if (node.style && node.style.fontFamily) {\r\n        promises.push(Font.load(node.style, this.root.instance));\r\n      }\r\n\r\n      if (node.children) {\r\n        node.children.forEach(childNode => {\r\n          listToExplore.push(childNode);\r\n        });\r\n      }\r\n    }\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  async loadEmojis() {\r\n    const promises = [];\r\n    const listToExplore = this.children.slice(0);\r\n\r\n    while (listToExplore.length > 0) {\r\n      const node = listToExplore.shift();\r\n\r\n      if (typeof node === 'string') {\r\n        promises.push(...fetchEmojis(node));\r\n      } else if (typeof node.value === 'string') {\r\n        promises.push(...fetchEmojis(node.value));\r\n      } else if (node.children) {\r\n        node.children.forEach(childNode => {\r\n          listToExplore.push(childNode);\r\n        });\r\n      }\r\n    }\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  async loadImages() {\r\n    const promises = [];\r\n    const listToExplore = this.children.slice(0);\r\n\r\n    while (listToExplore.length > 0) {\r\n      const node = listToExplore.shift();\r\n\r\n      if (node.name === 'Image') {\r\n        promises.push(node.fetch());\r\n      }\r\n\r\n      if (node.children) {\r\n        node.children.forEach(childNode => {\r\n          listToExplore.push(childNode);\r\n        });\r\n      }\r\n    }\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  async loadAssets() {\r\n    await Promise.all([this.loadFonts(), this.loadImages(), this.loadEmojis()]);\r\n  }\r\n\r\n  applyProps() {\r\n    this.children.forEach(child => child.applyProps());\r\n  }\r\n\r\n  update(newProps) {\r\n    this.props = newProps;\r\n  }\r\n\r\n  cleanup() {\r\n    this.subpages.forEach(p => p.cleanup());\r\n  }\r\n\r\n  finish() {\r\n    this.children.forEach(c => c.cleanup());\r\n  }\r\n\r\n  getLayoutData() {\r\n    return {\r\n      type: this.name,\r\n      children: this.subpages.map(c => c.getLayoutData()),\r\n    };\r\n  }\r\n\r\n  async wrapPages() {\r\n    let pageCount = 1;\r\n    const pages = [];\r\n\r\n    for (const page of this.children) {\r\n      if (page.wrap) {\r\n        const wrapArea = page.isAutoHeight\r\n          ? Infinity\r\n          : page.size.height - (page.style.paddingBottom || 0);\r\n\r\n        const subpages = await wrapPages(page, wrapArea, pageCount);\r\n\r\n        pageCount += subpages.length;\r\n\r\n        pages.push(...subpages);\r\n      } else {\r\n        pages.push(page);\r\n      }\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  async renderPages() {\r\n    this.subpages = await this.wrapPages();\r\n\r\n    for (let j = 0; j < this.subpages.length; j++) {\r\n      // Update dynamic text nodes with total pages info\r\n      this.subpages[j].renderDynamicNodes(\r\n        {\r\n          pageNumber: j + 1,\r\n          totalPages: this.subpages.length,\r\n        },\r\n        node => node.name === 'Text',\r\n      );\r\n      await this.subpages[j].render();\r\n    }\r\n\r\n    return this.subpages;\r\n  }\r\n\r\n  async render() {\r\n    try {\r\n      this.addMetaData();\r\n      this.applyProps();\r\n      await this.loadAssets();\r\n      await this.renderPages();\r\n      this.root.instance.end();\r\n      Font.reset();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","export const availableMethods = [\r\n  'dash',\r\n  'clip',\r\n  'save',\r\n  'path',\r\n  'fill',\r\n  'font',\r\n  'text',\r\n  'rect',\r\n  'scale',\r\n  'moveTo',\r\n  'lineTo',\r\n  'stroke',\r\n  'rotate',\r\n  'circle',\r\n  'lineCap',\r\n  'opacity',\r\n  'ellipse',\r\n  'polygon',\r\n  'restore',\r\n  'lineJoin',\r\n  'fontSize',\r\n  'fillColor',\r\n  'lineWidth',\r\n  'translate',\r\n  'miterLimit',\r\n  'strokeColor',\r\n  'fillOpacity',\r\n  'roundedRect',\r\n  'strokeOpacity',\r\n  'bezierCurveTo',\r\n  'quadraticCurveTo',\r\n  'linearGradient',\r\n  'radialGradient',\r\n];\r\n\r\nconst painter = function(instance) {\r\n  const p = availableMethods.reduce(\r\n    (acc, prop) => ({\r\n      ...acc,\r\n      [prop]: (...args) => {\r\n        instance[prop](...args);\r\n        return p;\r\n      },\r\n    }),\r\n    {},\r\n  );\r\n\r\n  return p;\r\n};\r\n\r\nexport default painter;\r\n","import Base from './Base';\r\n\r\nimport painter from '../utils/painter';\r\nimport warning from '../utils/warning';\r\n\r\nclass Canvas extends Base {\r\n  static defaultProps = {\r\n    style: {},\r\n    wrap: false,\r\n  };\r\n\r\n  get name() {\r\n    return 'Canvas';\r\n  }\r\n\r\n  async render() {\r\n    const { left, top, width, height } = this.getAbsoluteLayout();\r\n\r\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\r\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\r\n\r\n    warning(\r\n      availableWidth && availableHeight,\r\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\r\n    );\r\n\r\n    this.root.instance.save();\r\n    this.applyTransformations();\r\n    this.drawBackgroundColor();\r\n    this.drawBorders();\r\n    this.clip();\r\n\r\n    this.root.instance.translate(\r\n      left + this.paddingLeft,\r\n      top + this.paddingTop,\r\n    );\r\n\r\n    if (this.props.paint) {\r\n      this.props.paint(\r\n        painter(this.root.instance),\r\n        availableWidth,\r\n        availableHeight,\r\n      );\r\n    }\r\n\r\n    this.root.instance.restore();\r\n\r\n    if (this.props.debug) {\r\n      this.debug();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import Root from './Root';\r\nimport Page from './Page';\r\nimport View from './View';\r\nimport Text from './Text';\r\nimport Link from './Link';\r\nimport Note from './Note';\r\nimport Image from './Image';\r\nimport Document from './Document';\r\nimport Canvas from './Canvas';\r\nimport TextInstance from './TextInstance';\r\n\r\nconst constructors = {\r\n  ROOT: Root,\r\n  PAGE: Page,\r\n  TEXT: Text,\r\n  LINK: Link,\r\n  VIEW: View,\r\n  NOTE: Note,\r\n  IMAGE: Image,\r\n  CANVAS: Canvas,\r\n  DOCUMENT: Document,\r\n  TEXT_INSTANCE: TextInstance,\r\n};\r\n\r\nfunction createInstance(element, root) {\r\n  const { type, props = {} } = element;\r\n\r\n  if (constructors[type]) {\r\n    return new constructors[type](root, props);\r\n  }\r\n\r\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\r\n}\r\n\r\nexport { createInstance };\r\n","import PDFDocument from '@react-pdf/pdfkit';\r\n\r\nclass Root {\r\n  constructor() {\r\n    this.isDirty = false;\r\n    this.document = null;\r\n    this.instance = null;\r\n  }\r\n\r\n  get name() {\r\n    return 'Root';\r\n  }\r\n\r\n  appendChild(child) {\r\n    this.document = child;\r\n  }\r\n\r\n  removeChild() {\r\n    this.document.cleanup();\r\n    this.document = null;\r\n  }\r\n\r\n  markDirty() {\r\n    this.isDirty = true;\r\n  }\r\n\r\n  cleanup() {\r\n    this.document.cleanup();\r\n  }\r\n\r\n  finish() {\r\n    this.document.finish();\r\n  }\r\n\r\n  async render() {\r\n    this.instance = new PDFDocument({ autoFirstPage: false });\r\n    await this.document.render();\r\n    this.cleanup();\r\n    this.isDirty = false;\r\n  }\r\n}\r\n\r\nexport default Root;\r\n","import Base from './Base';\r\nimport { getURL } from '../utils/url';\r\n\r\nclass Link extends Base {\r\n  get name() {\r\n    return 'Link';\r\n  }\r\n\r\n  get src() {\r\n    return getURL(this.props.src || this.props.href);\r\n  }\r\n\r\n  async render() {\r\n    const { top, left, width, height } = this.getAbsoluteLayout();\r\n    this.root.instance.link(left, top, width, height, this.src);\r\n    await this.renderChildren();\r\n    if (this.props.debug) this.debug();\r\n  }\r\n}\r\n\r\nexport default Link;\r\n","const propsEqual = (a, b) => {\r\n  const oldPropsKeys = Object.keys(a);\r\n  const newPropsKeys = Object.keys(b);\r\n\r\n  if (oldPropsKeys.length !== newPropsKeys.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < oldPropsKeys.length; i++) {\r\n    const propName = oldPropsKeys[i];\r\n\r\n    if (propName === 'render') {\r\n      if (!a[propName] !== !b[propName]) {\r\n        return false;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (propName !== 'children' && a[propName] !== b[propName]) {\r\n      if (\r\n        typeof a[propName] === 'object' &&\r\n        typeof b[propName] === 'object' &&\r\n        propsEqual(a[propName], b[propName])\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      propName === 'children' &&\r\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\r\n    ) {\r\n      return a[propName] === b[propName];\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport default propsEqual;\r\n","'use strict';\r\n\r\nimport ReactFiberReconciler from 'react-reconciler';\r\nimport {\r\n  unstable_scheduleCallback as schedulePassiveEffects,\r\n  unstable_cancelCallback as cancelPassiveEffects\r\n} from 'scheduler';\r\n\r\nimport { createInstance } from './elements';\r\nimport propsEqual from './utils/propsEqual';\r\n\r\nconst emptyObject = {};\r\n\r\n// If the Link has a strign child or render prop, substitute the instance by a Text,\r\n// that will ultimately render the inline Link via the textkit PDF renderer.\r\nconst shouldReplaceLink = (type, props) =>\r\n  type === 'LINK' &&\r\n  (typeof props.children === 'string' ||\r\n    typeof props.children === 'number' ||\r\n    Array.isArray(props.children) ||\r\n    props.render);\r\n\r\nconst PDFRenderer = ReactFiberReconciler({\r\n  schedulePassiveEffects,\r\n  cancelPassiveEffects,\r\n  supportsMutation: true,\r\n  appendInitialChild(parentInstance, child) {\r\n    parentInstance.appendChild(child);\r\n  },\r\n\r\n  createInstance(type, props, internalInstanceHandle) {\r\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\r\n    return createInstance(\r\n      { type: instanceType, props },\r\n      internalInstanceHandle,\r\n    );\r\n  },\r\n\r\n  createTextInstance(text, rootContainerInstance) {\r\n    return createInstance(\r\n      { type: 'TEXT_INSTANCE', props: text },\r\n      rootContainerInstance,\r\n    );\r\n  },\r\n\r\n  finalizeInitialChildren(element, type, props) {\r\n    return false;\r\n  },\r\n\r\n  getPublicInstance(instance) {\r\n    return instance;\r\n  },\r\n\r\n  prepareForCommit() {\r\n    // Noop\r\n  },\r\n\r\n  prepareUpdate(element, type, oldProps, newProps) {\r\n    return !propsEqual(oldProps, newProps);\r\n  },\r\n\r\n  resetAfterCommit() {\r\n    // Noop\r\n  },\r\n\r\n  resetTextContent(element) {\r\n    // Noop\r\n  },\r\n\r\n  getRootHostContext() {\r\n    return emptyObject;\r\n  },\r\n\r\n  getChildHostContext() {\r\n    return emptyObject;\r\n  },\r\n\r\n  shouldSetTextContent(type, props) {\r\n    return false;\r\n  },\r\n\r\n  now: Date.now,\r\n\r\n  useSyncScheduling: true,\r\n\r\n  appendChild(parentInstance, child) {\r\n    parentInstance.appendChild(child);\r\n  },\r\n\r\n  appendChildToContainer(parentInstance, child) {\r\n    parentInstance.appendChild(child);\r\n  },\r\n\r\n  insertBefore(parentInstance, child, beforeChild) {\r\n    parentInstance.appendChildBefore(child, beforeChild);\r\n  },\r\n\r\n  removeChild(parentInstance, child) {\r\n    parentInstance.removeChild(child);\r\n  },\r\n\r\n  removeChildFromContainer(parentInstance, child) {\r\n    parentInstance.removeChild(child);\r\n  },\r\n\r\n  commitTextUpdate(textInstance, oldText, newText) {\r\n    textInstance.update(newText);\r\n  },\r\n\r\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\r\n    instance.update(newProps);\r\n  },\r\n});\r\n\r\nexport default PDFRenderer;\r\n","import BlobStream from 'blob-stream';\r\nimport PDFRenderer from './renderer';\r\nimport StyleSheet from './stylesheet';\r\nimport { createInstance } from './elements';\r\nimport Font from './font';\r\nimport { version } from '../package.json';\r\n\r\nconst View = 'VIEW';\r\nconst Text = 'TEXT';\r\nconst Link = 'LINK';\r\nconst Page = 'PAGE';\r\nconst Note = 'NOTE';\r\nconst Image = 'IMAGE';\r\nconst Document = 'DOCUMENT';\r\nconst Canvas = 'CANVAS';\r\n\r\nconst pdf = input => {\r\n  const container = createInstance({ type: 'ROOT' });\r\n  const mountNode = PDFRenderer.createContainer(container);\r\n\r\n  if (input) updateContainer(input);\r\n\r\n  function callOnRender(params = {}) {\r\n    if (container.document.props.onRender) {\r\n      const layoutData = container.document.getLayoutData();\r\n      container.document.props.onRender({ ...params, layoutData });\r\n    }\r\n  }\r\n\r\n  function isDirty() {\r\n    return container.isDirty;\r\n  }\r\n\r\n  function updateContainer(doc) {\r\n    PDFRenderer.updateContainer(doc, mountNode, null);\r\n  }\r\n\r\n  async function toBlob() {\r\n    await container.render();\r\n\r\n    const stream = container.instance.pipe(BlobStream());\r\n\r\n    return new Promise((resolve, reject) => {\r\n      stream.on('finish', () => {\r\n        try {\r\n          const blob = stream.toBlob('application/pdf');\r\n\r\n          callOnRender({ blob });\r\n\r\n          resolve(blob);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      });\r\n\r\n      stream.on('error', reject);\r\n    });\r\n  }\r\n\r\n  async function toBuffer() {\r\n    await container.render();\r\n\r\n    callOnRender();\r\n\r\n    return container.instance;\r\n  }\r\n\r\n  function toString() {\r\n    let result = '';\r\n    container.render();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        container.instance.on('data', function(buffer) {\r\n          result += buffer;\r\n        });\r\n\r\n        container.instance.on('end', function() {\r\n          callOnRender({ string: result });\r\n          resolve(result);\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    isDirty,\r\n    container,\r\n    updateContainer,\r\n    toBuffer,\r\n    toBlob,\r\n    toString,\r\n  };\r\n};\r\n\r\nexport {\r\n  version,\r\n  PDFRenderer,\r\n  View,\r\n  Text,\r\n  Link,\r\n  Page,\r\n  Font,\r\n  Note,\r\n  Image,\r\n  Document,\r\n  Canvas,\r\n  StyleSheet,\r\n  createInstance,\r\n  pdf,\r\n};\r\n","import fs from 'fs';\r\nimport {\r\n  pdf,\r\n  View,\r\n  Text,\r\n  Link,\r\n  Page,\r\n  Font,\r\n  Note,\r\n  Image,\r\n  Canvas,\r\n  version,\r\n  Document,\r\n  StyleSheet,\r\n  PDFRenderer,\r\n  createInstance,\r\n} from './index';\r\n\r\nexport const renderToStream = async function(element) {\r\n  const instance = pdf(element);\r\n  const buffer = await instance.toBuffer();\r\n  instance.container.finish();\r\n  return buffer;\r\n};\r\n\r\nexport const renderToFile = async function(element, filePath, callback) {\r\n  const output = await renderToStream(element);\r\n  const stream = fs.createWriteStream(filePath);\r\n\r\n  output.pipe(stream);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    stream.on('finish', () => {\r\n      if (callback) callback(output, filePath);\r\n      resolve(output);\r\n    });\r\n    stream.on('error', reject);\r\n  });\r\n};\r\n\r\nconst throwEnvironmentError = name => {\r\n  throw new Error(\r\n    `${name} is a web specific API. Or you're either using this component on Node, or your bundler is not loading react-pdf from the appropiate web build.`,\r\n  );\r\n};\r\n\r\nexport const PDFViewer = () => {\r\n  throwEnvironmentError('PDFViewer');\r\n};\r\n\r\nexport const PDFDownloadLink = () => {\r\n  throwEnvironmentError('PDFDownloadLink');\r\n};\r\n\r\nexport const BlobProvider = () => {\r\n  throwEnvironmentError('BlobProvider');\r\n};\r\n\r\nexport const render = renderToFile;\r\n\r\nexport {\r\n  pdf,\r\n  View,\r\n  Text,\r\n  Link,\r\n  Page,\r\n  Font,\r\n  Note,\r\n  Image,\r\n  Canvas,\r\n  version,\r\n  Document,\r\n  StyleSheet,\r\n  PDFRenderer,\r\n  createInstance,\r\n} from './index';\r\n\r\nexport default {\r\n  pdf,\r\n  View,\r\n  Text,\r\n  Link,\r\n  Page,\r\n  Font,\r\n  Note,\r\n  Image,\r\n  Canvas,\r\n  version,\r\n  Document,\r\n  StyleSheet,\r\n  PDFRenderer,\r\n  PDFViewer,\r\n  BlobProvider,\r\n  PDFDownloadLink,\r\n  createInstance,\r\n  renderToStream,\r\n  renderToFile,\r\n  render,\r\n};\r\n"],"names":["upperFirst","value","charAt","toUpperCase","slice","matchPercent","match","exec","isPercent","parseFloat","percent","absValue","Math","abs","absPercent","YOGA_CONFIG","Yoga","Config","create","setPointScaleFactor","Node","constructor","parent","children","computed","layout","createWithConfig","appendChild","child","this","push","insertChild","getChildCount","appendChildBefore","beforeChild","index","indexOf","splice","removeChild","cleanup","removeAllChilds","i","length","remove","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","Error","getAbsoluteLayout","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","markDirty","onAppendDynamically","forEach","c","unsetMeasureFunc","destroy","getPositionType","POSITION_TYPE_ABSOLUTE","getComputedTop","getComputedLeft","getComputedRight","getComputedBottom","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getComputedMargin","getComputedBorder","paddingTop","right","paddingRight","bottom","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","setPositionType","POSITION_TYPE_RELATIVE","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseScalar","container","scalar","unit","undefined","parseValue","isAutoHeight","isBorderStyle","key","processBorders","matchBorderShorthand","isBoxModelStyle","processBoxModel","matchBoxModel","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","isFontWeightStyle","processFontWeight","toLowerCase","isObjectPositionStyle","processObjectPosition","matchObjectPosition","isTransformOriginStyle","processTransformOrigin","matchTransformOrigin","result","transformOffsetKeywords","hasOwnProperty","Object","prototype","styleShorthands","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","transformStyles","style","expandedStyles","propsArray","keys","resolvedStyle","verticalAlign","expandedProps","propName","call","expandStyles","resolved","flatten","input","Array","isArray","reduce","acc","s","hairlineWidth","styles","resolve","test","matchMedia","resolveMediaQueries","absoluteFillObject","position","Debug","debug","root","instance","save","debugContent","debugPadding","debugMargin","debugText","debugOrigin","restore","transform","origin","circle","fill","stroke","roundedWidth","round","roundedHeight","fontSize","opacity","fillColor","text","max","rect","KAPPA","sqrt","clipBorderTop","ctx","rtr","rtl","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","fillBorderTop","strokeColor","lineWidth","dash","space","undash","clipBorderRight","rbr","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","clipBorderBottom","rbl","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","drawBorders","min","strokeOpacity","Clipping","ctr","cbr","cbl","ctl","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","applySingleTransformation","element","rotate","PI","getRotation","scale","translate","getMatrix","Transformations","applyTransformations","re","warning","process","env","NODE_ENV","condition","format","args","argIndex","message","replace","console","error","x","printWarning","merge","a","b","isNil","deepMerge","objs","obj","mergeDeepWith","isFunction","compose","equals","type","inheritedProperties","Base","props","defaultProps","page","wrap","break","fixed","minPresenceAhead","percentX","percentY","update","newProps","applyProps","resolveStyles","toPairsIn","map","attribute","applyStyle","size","orientation","ownStyles","StyleSheet","pick","setter","getLayoutData","name","drawBackgroundColor","backgroundColor","fillOpacity","clone","onNodeSplit","render","assign","Borders","Transform","range","steps","from","ceil","_","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","ruler","horizontalRuler","hasVerticalRuler","verticalRuler","getHorizontalSteps","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","verticalRulerSteps","renderRuler","drawHorizontalRuler","drawVerticalRuler","RULER_WIDTH","offset","hRange","step","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getPageSize","Page","_size","resetMargins","rulerWidth","dimension","elements","Fragment","createInstance","addDynamicChild","cb","listToExplore","shift","renderDynamicNodes","super","addPage","renderChildren","View","fetchFont","async","src","options","response","fetch","buffer","arrayBuffer","Buffer","FontSource","fontFamily","fontStyle","fontWeight","data","loading","BROWSER","headers","body","method","fontkit","Promise","reject","open","err","Font","family","sources","register","descriptor","styleSources","filter","exactFit","find","res","leftOffset","rightOffset","lt","gt","emojiSource","hyphenationCallback","fonts","getFont","standardFonts","includes","font","getRegisteredFonts","getRegisteredFontFamilies","load","doc","clear","reset","registerEmojiSource","url","getEmojiSource","registerHyphenationCallback","callback","getHyphenationCallback","StandardFont","PDFFont","str","encoded","positions","encode","stringIndices","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","fontCache","IGNORED_CODE_POINTS","getFontSize","pathOr","getFallbackFont","getOrCreateFont","shouldFallbackToFont","engine","layoutEngine","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","fontSubstitution","string","runs","lastFont","lastIndex","run","defaultFont","attributes","start","end","char","codePointAt","unitsPerEm","last","PROTOCOL_REGEXP","getURL","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","IMAGE_CACHE","limit","cache","get","set","createCache","getAbsoluteLocalPath","protocol","auth","host","port","hostname","path","pathname","parse","absolutePath","fetchLocalFile","safePath","allowDangerousPaths","filename","absoluteSafePath","startsWith","isDangerousLocalPath","fs","readFile","getImage","extension","resolveBufferImage","guessFormat","resolveImageFromUrl","uri","fetchRemoteFile","isPng","isJpg","getImageFormat","resolveImage","cacheKey","toString","image","isCompatibleBase64","lower","isValidFormat","resolveBase64Image","JSON","stringify","resolveImageFromData","emojis","regex","emojiRegex","makeFetchEmojiImage","promise","then","v","reflect","_removeNoColor","buildEmojiUrl","emoji","join","getCodePoints","fetchEmojis","promises","emojiUrl","fetchEmojiImage","IGNORABLE_CODEPOINTS","PREPROCESSORS","fragments","fragment","charSubset","String","fromCharCode","buildSubsetForFont","subsetRegex","RegExp","emojiSize","chunk","attachment","yOffset","floor","isImage","propEq","isTextInstance","complement","transformText","transformation","l","capitalize","getFragments","color","textAlign","lineHeight","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","textIndent","align","indent","link","characterSpacing","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","preprocessor","getAttributedString","AttributedString","fromFragments","Text","blocks","attributedString","layoutOptions","hyphenationPenalty","shrinkWhitespaceFactor","before","after","setMeasureFunc","measureText","bind","href","block","lines","line","box","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","y","Infinity","maxLines","truncateMode","textOverflow","linesCount","widthMode","heightMode","MEASURE_MODE_EXACTLY","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","renderText","initialY","PDFRenderer","Note","note","isNumeric","n","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","resolveObjectFit","applyCoverObjectFit","containDimension","noneDimension","applyScaleDownObjectFit","applyFillObjectFit","SAFETY_HEIGHT","Image","measureImage","shouldGrow","flexGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","ratio","source","warn","renderImage","objectFit","Document","subpages","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","childNode","all","loadFonts","loadImages","loadEmojis","p","finish","pageCount","pages","wrapArea","wrapPages","j","pageNumber","totalPages","loadAssets","renderPages","availableMethods","painter","Canvas","availableWidth","availableHeight","paint","constructors","ROOT","isDirty","document","PDFDocument","autoFirstPage","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","propsEqual","oldPropsKeys","newPropsKeys","emptyObject","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","appendInitialChild","parentInstance","internalInstanceHandle","shouldReplaceLink","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","insertBefore","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","Link","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","toBuffer","toBlob","stream","pipe","BlobStream","on","blob","renderToStream","renderToFile","filePath","output","createWriteStream","throwEnvironmentError","PDFViewer","PDFDownloadLink","BlobProvider","version"],"mappings":"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"}