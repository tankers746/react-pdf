{"version":3,"file":"react-pdf.browser.es.min.js","sources":["../src/utils/warning.js","../src/elements/Root.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/transformFontWeight.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/utils/deepMerge.js","../src/utils/isFunction.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/elements/Page.js","../src/elements/View.js","../src/font/font.js","../src/font/emoji.js","../src/font/hyphenation.js","../src/font/standard.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/index.js","../src/utils/url.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["function printWarning(format, ...args) {\r\n  let argIndex = 0;\r\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\r\n\r\n  if (typeof console !== 'undefined') {\r\n    console.error(message);\r\n  }\r\n\r\n  try {\r\n    throw new Error(message);\r\n  } catch (x) {}\r\n}\r\n\r\nconst __DEV__ = process.env.NODE_ENV !== 'production';\r\n\r\nconst warning = __DEV__\r\n  ? (condition, format, ...args) => {\r\n      if (format === undefined) {\r\n        throw new Error(\r\n          '`warning(condition, format, ...args)` requires a warning ' +\r\n            'message argument',\r\n        );\r\n      }\r\n      if (!condition) {\r\n        printWarning(format, ...args);\r\n      }\r\n    }\r\n  : () => {};\r\n\r\nexport default warning;\r\n","import PDFDocument from '@react-pdf/pdfkit';\r\n\r\nclass Root {\r\n  constructor() {\r\n    this.isDirty = false;\r\n    this.document = null;\r\n    this.instance = null;\r\n  }\r\n\r\n  get name() {\r\n    return 'Root';\r\n  }\r\n\r\n  appendChild(child) {\r\n    this.document = child;\r\n  }\r\n\r\n  removeChild() {\r\n    this.document.cleanup();\r\n    this.document = null;\r\n  }\r\n\r\n  markDirty() {\r\n    this.isDirty = true;\r\n  }\r\n\r\n  cleanup() {\r\n    this.document.cleanup();\r\n  }\r\n\r\n  finish() {\r\n    this.document.finish();\r\n  }\r\n\r\n  async render() {\r\n    this.instance = new PDFDocument({ autoFirstPage: false });\r\n    await this.document.render();\r\n    this.cleanup();\r\n    this.isDirty = false;\r\n  }\r\n}\r\n\r\nexport default Root;\r\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\r\n\r\nexport default upperFirst;\r\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\r\n\r\nconst matchPercent = value => {\r\n  const match = isPercent(value);\r\n\r\n  if (match) {\r\n    const value = parseFloat(match[1], 10);\r\n    const percent = value / 100;\r\n\r\n    return {\r\n      value,\r\n      percent,\r\n      absValue: Math.abs(value),\r\n      absPercent: Math.abs(percent),\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default matchPercent;\r\n","import Yoga from 'yoga-layout';\r\n\r\nimport upperFirst from '../utils/upperFirst';\r\nimport matchPercent from '../utils/matchPercent';\r\n\r\nconst YOGA_CONFIG = Yoga.Config.create();\r\nYOGA_CONFIG.setPointScaleFactor(0);\r\n\r\nclass Node {\r\n  constructor() {\r\n    this.parent = null;\r\n    this.children = [];\r\n    this.computed = false;\r\n    this.layout = Yoga.Node.createWithConfig(YOGA_CONFIG);\r\n  }\r\n\r\n  appendChild(child) {\r\n    if (child) {\r\n      child.parent = this;\r\n      this.children.push(child);\r\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\r\n    }\r\n  }\r\n\r\n  appendChildBefore(child, beforeChild) {\r\n    const index = this.children.indexOf(beforeChild);\r\n\r\n    if (index !== -1 && child) {\r\n      child.parent = this;\r\n      this.children.splice(index, 0, child);\r\n      this.layout.insertChild(child.layout, index);\r\n    }\r\n  }\r\n\r\n  removeChild(child) {\r\n    const index = this.children.indexOf(child);\r\n\r\n    if (index !== -1) {\r\n      child.parent = null;\r\n      this.children.splice(index, 1);\r\n      this.layout.removeChild(child.layout);\r\n    }\r\n\r\n    child.cleanup();\r\n  }\r\n\r\n  removeAllChilds() {\r\n    const children = [...this.children];\r\n    for (let i = 0; i < children.length; i++) {\r\n      children[i].remove();\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.parent.removeChild(this);\r\n  }\r\n\r\n  setDimension(attr, value) {\r\n    const fixedMethod = `set${upperFirst(attr)}`;\r\n    const percentMethod = `${fixedMethod}Percent`;\r\n    const percent = matchPercent(value);\r\n\r\n    if (percent) {\r\n      this.layout[percentMethod](percent.value);\r\n    } else {\r\n      this.layout[fixedMethod](value);\r\n    }\r\n  }\r\n\r\n  setPosition(edge, value) {\r\n    const percent = matchPercent(value);\r\n\r\n    if (percent) {\r\n      this.layout.setPositionPercent(edge, percent.value);\r\n    } else {\r\n      this.layout.setPosition(edge, value);\r\n    }\r\n  }\r\n\r\n  setPadding(edge, value) {\r\n    const percent = matchPercent(value);\r\n\r\n    if (percent) {\r\n      this.layout.setPaddingPercent(edge, percent.value);\r\n    } else {\r\n      this.layout.setPadding(edge, value);\r\n    }\r\n  }\r\n\r\n  setMargin(edge, value) {\r\n    const percent = matchPercent(value);\r\n\r\n    if (percent) {\r\n      this.layout.setMarginPercent(edge, percent.value);\r\n    } else {\r\n      this.layout.setMargin(edge, value);\r\n    }\r\n  }\r\n\r\n  setBorder(edge, value) {\r\n    if (matchPercent(value)) {\r\n      throw new Error('Node: You cannot set percentage border widths');\r\n    }\r\n    this.layout.setBorder(edge, value);\r\n  }\r\n\r\n  getAbsoluteLayout() {\r\n    const parent = this.parent;\r\n    const parentLayout =\r\n      parent && parent.getAbsoluteLayout\r\n        ? parent.getAbsoluteLayout()\r\n        : { left: 0, top: 0 };\r\n\r\n    return {\r\n      left: this.left + parentLayout.left,\r\n      top: this.top + parentLayout.top,\r\n      height: this.height,\r\n      width: this.width,\r\n    };\r\n  }\r\n\r\n  copyStyle(node) {\r\n    this.layout.copyStyle(node.layout);\r\n  }\r\n\r\n  calculateLayout() {\r\n    this.layout.calculateLayout();\r\n    this.computed = true;\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.children.length === 0;\r\n  }\r\n\r\n  markDirty() {\r\n    return this.layout.markDirty();\r\n  }\r\n\r\n  onAppendDynamically() {}\r\n\r\n  cleanup() {\r\n    this.children.forEach(c => c.cleanup());\r\n    this.layout.unsetMeasureFunc();\r\n    Yoga.Node.destroy(this.layout);\r\n  }\r\n\r\n  get position() {\r\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\r\n      ? 'absolute'\r\n      : 'relative';\r\n  }\r\n\r\n  get top() {\r\n    return this.layout.getComputedTop() || 0;\r\n  }\r\n\r\n  get left() {\r\n    return this.layout.getComputedLeft() || 0;\r\n  }\r\n\r\n  get right() {\r\n    return this.layout.getComputedRight() || 0;\r\n  }\r\n\r\n  get bottom() {\r\n    return this.layout.getComputedBottom() || 0;\r\n  }\r\n\r\n  get width() {\r\n    return this.layout.getComputedWidth();\r\n  }\r\n\r\n  get minWidth() {\r\n    return this.layout.getMinWidth().value;\r\n  }\r\n\r\n  get maxWidth() {\r\n    return this.layout.getMaxWidth().value;\r\n  }\r\n\r\n  get height() {\r\n    return this.layout.getComputedHeight();\r\n  }\r\n\r\n  get minHeight() {\r\n    return this.layout.getMinHeight().value;\r\n  }\r\n\r\n  get maxHeight() {\r\n    return this.layout.getMaxHeight().value;\r\n  }\r\n\r\n  get paddingTop() {\r\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\r\n  }\r\n\r\n  get paddingRight() {\r\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\r\n  }\r\n\r\n  get paddingBottom() {\r\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\r\n  }\r\n\r\n  get paddingLeft() {\r\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\r\n  }\r\n\r\n  get marginTop() {\r\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\r\n  }\r\n\r\n  get marginRight() {\r\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\r\n  }\r\n\r\n  get marginBottom() {\r\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\r\n  }\r\n\r\n  get marginLeft() {\r\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\r\n  }\r\n\r\n  get borderTopWidth() {\r\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\r\n  }\r\n\r\n  get borderRightWidth() {\r\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\r\n  }\r\n\r\n  get borderBottomWidth() {\r\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\r\n  }\r\n\r\n  get borderLeftWidth() {\r\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\r\n  }\r\n\r\n  get padding() {\r\n    return {\r\n      top: this.paddingTop,\r\n      right: this.paddingRight,\r\n      bottom: this.paddingBottom,\r\n      left: this.paddingLeft,\r\n    };\r\n  }\r\n\r\n  get margin() {\r\n    return {\r\n      top: this.marginTop,\r\n      right: this.marginRight,\r\n      bottom: this.marginBottom,\r\n      left: this.marginLeft,\r\n    };\r\n  }\r\n\r\n  set position(value) {\r\n    this.layout.setPositionType(\r\n      value === 'absolute'\r\n        ? Yoga.POSITION_TYPE_ABSOLUTE\r\n        : Yoga.POSITION_TYPE_RELATIVE,\r\n    );\r\n  }\r\n\r\n  set top(value) {\r\n    this.setPosition(Yoga.EDGE_TOP, value);\r\n  }\r\n\r\n  set left(value) {\r\n    this.setPosition(Yoga.EDGE_LEFT, value);\r\n  }\r\n\r\n  set right(value) {\r\n    this.setPosition(Yoga.EDGE_RIGHT, value);\r\n  }\r\n\r\n  set bottom(value) {\r\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\r\n  }\r\n\r\n  set width(value) {\r\n    this.setDimension('width', value);\r\n  }\r\n\r\n  set minWidth(value) {\r\n    this.setDimension('minWidth', value);\r\n  }\r\n\r\n  set maxWidth(value) {\r\n    this.setDimension('maxWidth', value);\r\n  }\r\n\r\n  set height(value) {\r\n    this.setDimension('height', value);\r\n  }\r\n\r\n  set minHeight(value) {\r\n    this.setDimension('minHeight', value);\r\n  }\r\n\r\n  set maxHeight(value) {\r\n    this.setDimension('maxHeight', value);\r\n  }\r\n\r\n  set paddingTop(value) {\r\n    this.setPadding(Yoga.EDGE_TOP, value);\r\n  }\r\n\r\n  set paddingRight(value) {\r\n    this.setPadding(Yoga.EDGE_RIGHT, value);\r\n  }\r\n\r\n  set paddingBottom(value) {\r\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\r\n  }\r\n\r\n  set paddingLeft(value) {\r\n    this.setPadding(Yoga.EDGE_LEFT, value);\r\n  }\r\n\r\n  set marginTop(value) {\r\n    this.setMargin(Yoga.EDGE_TOP, value);\r\n  }\r\n\r\n  set marginRight(value) {\r\n    this.setMargin(Yoga.EDGE_RIGHT, value);\r\n  }\r\n\r\n  set marginBottom(value) {\r\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\r\n  }\r\n\r\n  set marginLeft(value) {\r\n    this.setMargin(Yoga.EDGE_LEFT, value);\r\n  }\r\n\r\n  set padding(value) {\r\n    this.paddingTop = value;\r\n    this.paddingRight = value;\r\n    this.paddingBottom = value;\r\n    this.paddingLeft = value;\r\n  }\r\n\r\n  set margin(value) {\r\n    this.marginTop = value;\r\n    this.marginRight = value;\r\n    this.marginBottom = value;\r\n    this.marginLeft = value;\r\n  }\r\n\r\n  set borderTopWidth(value) {\r\n    this.setBorder(Yoga.EDGE_TOP, value);\r\n  }\r\n\r\n  set borderRightWidth(value) {\r\n    this.setBorder(Yoga.EDGE_RIGHT, value);\r\n  }\r\n\r\n  set borderBottomWidth(value) {\r\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\r\n  }\r\n\r\n  set borderLeftWidth(value) {\r\n    this.setBorder(Yoga.EDGE_LEFT, value);\r\n  }\r\n}\r\n\r\nexport default Node;\r\n","import Yoga from 'yoga-layout';\r\n\r\nconst yogaValue = (prop, value) => {\r\n  const isAlignType = prop =>\r\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\r\n\r\n  switch (value) {\r\n    case 'auto':\r\n      if (prop === 'alignSelf') {\r\n        return Yoga.ALIGN_AUTO;\r\n      }\r\n      break;\r\n    case 'flex':\r\n      return Yoga.DISPLAY_FLEX;\r\n    case 'none':\r\n      return Yoga.DISPLAY_NONE;\r\n    case 'row':\r\n      return Yoga.FLEX_DIRECTION_ROW;\r\n    case 'row-reverse':\r\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\r\n    case 'column':\r\n      return Yoga.FLEX_DIRECTION_COLUMN;\r\n    case 'column-reverse':\r\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\r\n    case 'stretch':\r\n      return Yoga.ALIGN_STRETCH;\r\n    case 'baseline':\r\n      return Yoga.ALIGN_BASELINE;\r\n    case 'space-around':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_SPACE_AROUND;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_SPACE_AROUND;\r\n      }\r\n      break;\r\n    case 'space-between':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_SPACE_BETWEEN;\r\n      }\r\n      break;\r\n    case 'around':\r\n      return Yoga.JUSTIFY_SPACE_AROUND;\r\n    case 'between':\r\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\r\n    case 'wrap':\r\n      return Yoga.WRAP_WRAP;\r\n    case 'wrap-reverse':\r\n      return Yoga.WRAP_WRAP_REVERSE;\r\n    case 'nowrap':\r\n      return Yoga.WRAP_NO_WRAP;\r\n    case 'flex-start':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_FLEX_START;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_FLEX_START;\r\n      }\r\n      break;\r\n    case 'flex-end':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_FLEX_END;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_FLEX_END;\r\n      }\r\n      break;\r\n    case 'center':\r\n      if (prop === 'justifyContent') {\r\n        return Yoga.JUSTIFY_CENTER;\r\n      } else if (isAlignType(prop)) {\r\n        return Yoga.ALIGN_CENTER;\r\n      }\r\n      break;\r\n    default:\r\n      return value;\r\n  }\r\n};\r\n\r\n// These are not supported yet\r\n\r\n// ALIGN_AUTO: 0,\r\n// DIMENSION_WIDTH: 0,\r\n// DIMENSION_HEIGHT: 1,\r\n// DIRECTION_INHERIT: 0,\r\n// DIRECTION_LTR: 1,\r\n// DIRECTION_RTL: 2,\r\n// EDGE_LEFT: 0,\r\n// EDGE_TOP: 1,\r\n// EDGE_RIGHT: 2,\r\n// EDGE_BOTTOM: 3,\r\n// EDGE_START: 4,\r\n// EDGE_END: 5,\r\n// EDGE_HORIZONTAL: 6,\r\n// EDGE_VERTICAL: 7,\r\n// EDGE_ALL: 8,\r\n// MEASURE_MODE_UNDEFINED: 0,\r\n// MEASURE_MODE_EXACTLY: 1,\r\n// MEASURE_MODE_AT_MOST: 2,\r\n// NODE_TYPE_DEFAULT: 0,\r\n// NODE_TYPE_TEXT: 1,\r\n// OVERFLOW_VISIBLE: 0,\r\n// OVERFLOW_HIDDEN: 1,\r\n// OVERFLOW_SCROLL: 2,\r\n// POSITION_TYPE_RELATIVE: 0,\r\n// POSITION_TYPE_ABSOLUTE: 1,\r\n// PRINT_OPTIONS_LAYOUT: 1,\r\n// PRINT_OPTIONS_STYLE: 2,\r\n// PRINT_OPTIONS_CHILDREN: 4,\r\n// UNIT_UNDEFINED: 0,\r\n// UNIT_POINT: 1,\r\n// UNIT_PERCENT: 2,\r\n// UNIT_AUTO: 3,\r\n\r\nexport default yogaValue;\r\n","const DPI = 72; // 72pt per inch.\r\n\r\nconst parseValue = value => {\r\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw)?$/g.exec(value);\r\n\r\n  if (match) {\r\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\r\n  }\r\n\r\n  return { value, unit: undefined };\r\n};\r\n\r\nconst parseScalar = (value, container) => {\r\n  const scalar = parseValue(value);\r\n  switch (scalar.unit) {\r\n    case 'in':\r\n      return scalar.value * DPI;\r\n    case 'mm':\r\n      return scalar.value * (1 / 25.4) * DPI;\r\n    case 'cm':\r\n      return scalar.value * (1 / 2.54) * DPI;\r\n    case 'vh':\r\n      if (container.isAutoHeight) {\r\n        throw new Error(\r\n          'vh unit not supported in auto-height pages. Please specify page height if you want to use vh.',\r\n        );\r\n      }\r\n\r\n      return scalar.value * (container.height / 100);\r\n    case 'vw':\r\n      return scalar.value * (container.width / 100);\r\n    default:\r\n      return scalar.value;\r\n  }\r\n};\r\n\r\nexport default parseScalar;\r\n","export const isBorderStyle = (key, value) =>\r\n  key.match(/^border/) && typeof value === 'string';\r\n\r\nconst matchBorderShorthand = value =>\r\n  value.match(/(\\d+(px|in|mm|cm|pt|vw|vh)?)\\s(\\S+)\\s(\\S+)/);\r\n\r\n// Transforms shorthand border values\r\nexport const processBorders = (key, value) => {\r\n  const match = matchBorderShorthand(value);\r\n\r\n  if (match) {\r\n    if (key.match(/.Color/)) {\r\n      return match[4];\r\n    } else if (key.match(/.Style/)) {\r\n      return match[3];\r\n    } else if (key.match(/.Width/)) {\r\n      return match[1];\r\n    } else {\r\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\r\n    }\r\n  }\r\n\r\n  return value;\r\n};\r\n","export const isBoxModelStyle = (key, value) =>\r\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\r\n\r\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\r\n\r\n// Transforms shorthand margin and padding values\r\nexport const processBoxModel = (key, value) => {\r\n  const match = matchBoxModel(value);\r\n\r\n  if (match) {\r\n    if (key.match(/.Top/)) {\r\n      return match[0];\r\n    } else if (key.match(/.Right/)) {\r\n      return match[1] || match[0];\r\n    } else if (key.match(/.Bottom/)) {\r\n      return match[2] || match[0];\r\n    } else if (key.match(/.Left/)) {\r\n      return match[3] || match[1] || match[0];\r\n    } else {\r\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\r\n    }\r\n  }\r\n\r\n  return value;\r\n};\r\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\r\nconst FONT_WEIGHTS = {\r\n  thin: 100,\r\n  hairline: 100,\r\n  ultralight: 200,\r\n  extralight: 200,\r\n  light: 300,\r\n  normal: 400,\r\n  medium: 500,\r\n  semibold: 600,\r\n  demibold: 600,\r\n  bold: 700,\r\n  ultrabold: 800,\r\n  extrabold: 800,\r\n  heavy: 900,\r\n  black: 900,\r\n};\r\n\r\nexport const isFontWeightStyle = key => key.match(/^fontWeight/);\r\n\r\nexport const processFontWeight = value => {\r\n  if (!value) return FONT_WEIGHTS.normal;\r\n  if (typeof value === 'number') return value;\r\n  return FONT_WEIGHTS[value.toLowerCase()];\r\n};\r\n","export const isObjectPositionStyle = (key, value) =>\r\n  key.match(/^objectPosition/) && typeof value === 'string';\r\n\r\nconst matchObjectPosition = value =>\r\n  value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\r\n\r\n// Transforms shorthand objectPosition values\r\nexport const processObjectPosition = (key, value) => {\r\n  const match = matchObjectPosition(value);\r\n\r\n  if (match) {\r\n    if (key.match(/.X/)) {\r\n      return match[0];\r\n    } else if (key.match(/.Y/)) {\r\n      return match[1];\r\n    } else {\r\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\r\n    }\r\n  }\r\n\r\n  return value;\r\n};\r\n","export const isTransformOriginStyle = (key, value) =>\r\n  key.match(/^transformOrigin/) && typeof value === 'string';\r\n\r\nconst matchTransformOrigin = value =>\r\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%|vw|vh)?)|top|right|bottom|left|center/g);\r\n\r\nconst transformOffsetKeywords = value => {\r\n  switch (value) {\r\n    case 'top':\r\n    case 'left':\r\n      return '0%';\r\n    case 'right':\r\n    case 'bottom':\r\n      return '100%';\r\n    case 'center':\r\n      return '50%';\r\n    default:\r\n      return value;\r\n  }\r\n};\r\n\r\n// Transforms shorthand transformOrigin values\r\nexport const processTransformOrigin = (key, value) => {\r\n  const match = matchTransformOrigin(value);\r\n\r\n  if (match) {\r\n    let result;\r\n\r\n    if (key.match(/.X/)) {\r\n      result = match[0];\r\n    } else if (key.match(/.Y/)) {\r\n      result = match[1] || match[0];\r\n    } else {\r\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\r\n    }\r\n\r\n    return transformOffsetKeywords(result);\r\n  }\r\n\r\n  return value;\r\n};\r\n","import yogaValue from './yogaValue';\r\nimport parseScalar from './transformUnits';\r\nimport { isBorderStyle, processBorders } from './borders';\r\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\r\nimport { isFontWeightStyle, processFontWeight } from './transformFontWeight';\r\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\r\nimport {\r\n  isTransformOriginStyle,\r\n  processTransformOrigin,\r\n} from './transformOrigin';\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nconst styleShorthands = {\r\n  margin: {\r\n    marginTop: true,\r\n    marginRight: true,\r\n    marginBottom: true,\r\n    marginLeft: true,\r\n  },\r\n  marginHorizontal: {\r\n    marginLeft: true,\r\n    marginRight: true,\r\n  },\r\n  marginVertical: {\r\n    marginTop: true,\r\n    marginBottom: true,\r\n  },\r\n  padding: {\r\n    paddingTop: true,\r\n    paddingRight: true,\r\n    paddingBottom: true,\r\n    paddingLeft: true,\r\n  },\r\n  paddingHorizontal: {\r\n    paddingLeft: true,\r\n    paddingRight: true,\r\n  },\r\n  paddingVertical: {\r\n    paddingTop: true,\r\n    paddingBottom: true,\r\n  },\r\n  border: {\r\n    borderTopColor: true,\r\n    borderTopStyle: true,\r\n    borderTopWidth: true,\r\n    borderRightColor: true,\r\n    borderRightStyle: true,\r\n    borderRightWidth: true,\r\n    borderBottomColor: true,\r\n    borderBottomStyle: true,\r\n    borderBottomWidth: true,\r\n    borderLeftColor: true,\r\n    borderLeftStyle: true,\r\n    borderLeftWidth: true,\r\n  },\r\n  borderTop: {\r\n    borderTopColor: true,\r\n    borderTopStyle: true,\r\n    borderTopWidth: true,\r\n  },\r\n  borderRight: {\r\n    borderRightColor: true,\r\n    borderRightStyle: true,\r\n    borderRightWidth: true,\r\n  },\r\n  borderBottom: {\r\n    borderBottomColor: true,\r\n    borderBottomStyle: true,\r\n    borderBottomWidth: true,\r\n  },\r\n  borderLeft: {\r\n    borderLeftColor: true,\r\n    borderLeftStyle: true,\r\n    borderLeftWidth: true,\r\n  },\r\n  borderColor: {\r\n    borderTopColor: true,\r\n    borderRightColor: true,\r\n    borderBottomColor: true,\r\n    borderLeftColor: true,\r\n  },\r\n  borderRadius: {\r\n    borderTopLeftRadius: true,\r\n    borderTopRightRadius: true,\r\n    borderBottomRightRadius: true,\r\n    borderBottomLeftRadius: true,\r\n  },\r\n  borderStyle: {\r\n    borderTopStyle: true,\r\n    borderRightStyle: true,\r\n    borderBottomStyle: true,\r\n    borderLeftStyle: true,\r\n  },\r\n  borderWidth: {\r\n    borderTopWidth: true,\r\n    borderRightWidth: true,\r\n    borderBottomWidth: true,\r\n    borderLeftWidth: true,\r\n  },\r\n  objectPosition: {\r\n    objectPositionX: true,\r\n    objectPositionY: true,\r\n  },\r\n  transformOrigin: {\r\n    transformOriginX: true,\r\n    transformOriginY: true,\r\n  },\r\n};\r\n\r\n// Expand the shorthand properties to isolate every declaration from the others.\r\nconst expandStyles = style => {\r\n  if (!style) return style;\r\n\r\n  const propsArray = Object.keys(style);\r\n  const resolvedStyle = {};\r\n\r\n  for (let i = 0; i < propsArray.length; i++) {\r\n    const key = propsArray[i];\r\n    const value = style[key];\r\n\r\n    switch (key) {\r\n      case 'display':\r\n      case 'flex':\r\n      case 'flexDirection':\r\n      case 'flexWrap':\r\n      case 'flexFlow':\r\n      case 'flexGrow':\r\n      case 'flexShrink':\r\n      case 'flexBasis':\r\n      case 'justifyContent':\r\n      case 'alignSelf':\r\n      case 'alignItems':\r\n      case 'alignContent':\r\n      case 'order':\r\n        resolvedStyle[key] = yogaValue(key, value);\r\n        break;\r\n      case 'textAlignVertical':\r\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\r\n        break;\r\n      case 'margin':\r\n      case 'marginHorizontal':\r\n      case 'marginVertical':\r\n      case 'padding':\r\n      case 'paddingHorizontal':\r\n      case 'paddingVertical':\r\n      case 'border':\r\n      case 'borderTop':\r\n      case 'borderRight':\r\n      case 'borderBottom':\r\n      case 'borderLeft':\r\n      case 'borderColor':\r\n      case 'borderRadius':\r\n      case 'borderStyle':\r\n      case 'borderWidth':\r\n      case 'objectPosition':\r\n      case 'transformOrigin':\r\n        {\r\n          const expandedProps = styleShorthands[key];\r\n          for (const propName in expandedProps) {\r\n            if (hasOwnProperty.call(expandedProps, propName)) {\r\n              resolvedStyle[propName] = value;\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        resolvedStyle[key] = value;\r\n        break;\r\n    }\r\n  }\r\n\r\n  return resolvedStyle;\r\n};\r\n\r\nconst transformStyles = (style, container) => {\r\n  const expandedStyles = expandStyles(style);\r\n  const propsArray = Object.keys(expandedStyles);\r\n  const resolvedStyle = {};\r\n\r\n  for (let i = 0; i < propsArray.length; i++) {\r\n    const key = propsArray[i];\r\n    const value = expandedStyles[key];\r\n\r\n    let resolved;\r\n    if (isBorderStyle(key, value)) {\r\n      resolved = processBorders(key, value);\r\n    } else if (isBoxModelStyle(key, value)) {\r\n      resolved = processBoxModel(key, value);\r\n    } else if (isObjectPositionStyle(key, value)) {\r\n      resolved = processObjectPosition(key, value);\r\n    } else if (isTransformOriginStyle(key, value)) {\r\n      resolved = processTransformOrigin(key, value);\r\n    } else if (isFontWeightStyle(key, value)) {\r\n      resolved = processFontWeight(value);\r\n    } else {\r\n      resolved = value;\r\n    }\r\n\r\n    resolvedStyle[key] = parseScalar(resolved, container);\r\n  }\r\n\r\n  return resolvedStyle;\r\n};\r\n\r\nexport default transformStyles;\r\n","import matchMedia from 'media-engine';\r\nimport transformStyles from './transformStyles';\r\n\r\nconst create = styles => styles;\r\n\r\nconst flatten = input => {\r\n  if (!Array.isArray(input)) {\r\n    input = [input];\r\n  }\r\n\r\n  const result = input.reduce((acc, style) => {\r\n    if (style) {\r\n      const s = Array.isArray(style) ? flatten(style) : style;\r\n\r\n      Object.keys(s).forEach(key => {\r\n        if (s[key] !== null && s[key] !== undefined) {\r\n          acc[key] = s[key];\r\n        }\r\n      });\r\n    }\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  return result;\r\n};\r\n\r\nconst resolveMediaQueries = (input, container) => {\r\n  const result = Object.keys(input).reduce((acc, key) => {\r\n    if (/@media/.test(key)) {\r\n      return {\r\n        ...acc,\r\n        ...matchMedia({ [key]: input[key] }, container),\r\n      };\r\n    }\r\n\r\n    return { ...acc, [key]: input[key] };\r\n  }, {});\r\n\r\n  return result;\r\n};\r\n\r\nconst resolve = (styles, container) => {\r\n  if (!styles) return null;\r\n\r\n  styles = flatten(styles);\r\n  styles = resolveMediaQueries(styles, container);\r\n  styles = transformStyles(styles, container);\r\n\r\n  return styles;\r\n};\r\n\r\nconst absoluteFillObject = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  bottom: 0,\r\n  right: 0,\r\n};\r\n\r\nexport default {\r\n  hairlineWidth: 1,\r\n  create,\r\n  resolve,\r\n  flatten,\r\n  absoluteFillObject,\r\n};\r\n","const Debug = {\r\n  debug() {\r\n    const layout = this.getAbsoluteLayout();\r\n    const padding = this.padding;\r\n    const margin = this.margin;\r\n\r\n    this.root.instance.save();\r\n\r\n    this.debugContent(layout, margin, padding);\r\n    this.debugPadding(layout, margin, padding);\r\n    this.debugMargin(layout, margin);\r\n    this.debugText(layout, margin);\r\n    this.debugOrigin();\r\n\r\n    this.root.instance.restore();\r\n  },\r\n  debugOrigin() {\r\n    if (this.style.transform) {\r\n      const origin = this.origin;\r\n      this.root.instance\r\n        .circle(origin[0], origin[1], 3)\r\n        .fill('red')\r\n        .circle(origin[0], origin[1], 5)\r\n        .stroke('red');\r\n    }\r\n  },\r\n  debugText(layout, margin) {\r\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\r\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\r\n\r\n    this.root.instance\r\n      .fontSize(4)\r\n      .opacity(1)\r\n      .fillColor('black')\r\n      .text(\r\n        `${roundedWidth} x ${roundedHeight}`,\r\n        layout.left - margin.left,\r\n        Math.max(layout.top - margin.top - 4, 1),\r\n      );\r\n  },\r\n  debugContent(layout, margin, padding) {\r\n    this.root.instance\r\n      .fillColor('#a1c6e7')\r\n      .opacity(0.5)\r\n      .rect(\r\n        layout.left + padding.left,\r\n        layout.top + padding.top,\r\n        layout.width - padding.left - padding.right,\r\n        layout.height - padding.top - padding.bottom,\r\n      )\r\n      .fill();\r\n  },\r\n  debugPadding(layout, margin, padding) {\r\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\r\n\r\n    // Padding top\r\n    this.root.instance\r\n      .rect(\r\n        layout.left + padding.left,\r\n        layout.top,\r\n        layout.width - padding.right - padding.left,\r\n        padding.top,\r\n      )\r\n      .fill();\r\n\r\n    // Padding left\r\n    this.root.instance\r\n      .rect(layout.left, layout.top, padding.left, layout.height)\r\n      .fill();\r\n\r\n    // Padding right\r\n    this.root.instance\r\n      .rect(\r\n        layout.left + layout.width - padding.right,\r\n        layout.top,\r\n        padding.right,\r\n        layout.height,\r\n      )\r\n      .fill();\r\n\r\n    // Padding bottom\r\n    this.root.instance\r\n      .rect(\r\n        layout.left + padding.left,\r\n        layout.top + layout.height - padding.bottom,\r\n        layout.width - padding.right - padding.left,\r\n        padding.bottom,\r\n      )\r\n      .fill();\r\n  },\r\n  debugMargin(layout, margin) {\r\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\r\n\r\n    // Margin top\r\n    this.root.instance\r\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\r\n      .fill();\r\n\r\n    // Margin left\r\n    this.root.instance\r\n      .rect(\r\n        layout.left - margin.left,\r\n        layout.top - margin.top,\r\n        margin.left,\r\n        layout.height + margin.top + margin.bottom,\r\n      )\r\n      .fill();\r\n\r\n    // Margin right\r\n    this.root.instance\r\n      .rect(\r\n        layout.left + layout.width,\r\n        layout.top - margin.top,\r\n        margin.right,\r\n        layout.height + margin.top + margin.bottom,\r\n      )\r\n      .fill();\r\n\r\n    // Margin bottom\r\n    this.root.instance\r\n      .rect(\r\n        layout.left,\r\n        layout.top + layout.height,\r\n        layout.width,\r\n        margin.bottom,\r\n      )\r\n      .fill();\r\n  },\r\n};\r\n\r\nexport default Debug;\r\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\r\n\r\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\r\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\r\n\r\nfunction drawBorders() {\r\n  const { instance } = this.root;\r\n  const layout = this.getAbsoluteLayout();\r\n\r\n  const {\r\n    borderTopWidth,\r\n    borderLeftWidth,\r\n    borderRightWidth,\r\n    borderBottomWidth,\r\n  } = this;\r\n\r\n  const {\r\n    opacity,\r\n    borderTopLeftRadius = 0,\r\n    borderTopRightRadius = 0,\r\n    borderBottomLeftRadius = 0,\r\n    borderBottomRightRadius = 0,\r\n    borderTopColor = 'black',\r\n    borderTopStyle = 'solid',\r\n    borderLeftColor = 'black',\r\n    borderLeftStyle = 'solid',\r\n    borderRightColor = 'black',\r\n    borderRightStyle = 'solid',\r\n    borderBottomColor = 'black',\r\n    borderBottomStyle = 'solid',\r\n  } = this.style;\r\n\r\n  const style = {\r\n    borderTopColor,\r\n    borderTopWidth,\r\n    borderTopStyle,\r\n    borderLeftColor,\r\n    borderLeftWidth,\r\n    borderLeftStyle,\r\n    borderRightColor,\r\n    borderRightWidth,\r\n    borderRightStyle,\r\n    borderBottomColor,\r\n    borderBottomWidth,\r\n    borderBottomStyle,\r\n    borderTopLeftRadius,\r\n    borderTopRightRadius,\r\n    borderBottomLeftRadius,\r\n    borderBottomRightRadius,\r\n  };\r\n\r\n  const { width, height } = layout;\r\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\r\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\r\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\r\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\r\n\r\n  instance.save();\r\n  instance.strokeOpacity(opacity);\r\n\r\n  if (borderTopWidth) {\r\n    instance.save();\r\n    clipBorderTop(instance, layout, style, rtr, rtl);\r\n    fillBorderTop(instance, layout, style, rtr, rtl);\r\n    instance.restore();\r\n  }\r\n\r\n  if (borderRightWidth) {\r\n    instance.save();\r\n    clipBorderRight(instance, layout, style, rtr, rbr);\r\n    fillBorderRight(instance, layout, style, rtr, rbr);\r\n    instance.restore();\r\n  }\r\n\r\n  if (borderBottomWidth) {\r\n    instance.save();\r\n    clipBorderBottom(instance, layout, style, rbl, rbr);\r\n    fillBorderBottom(instance, layout, style, rbl, rbr);\r\n    instance.restore();\r\n  }\r\n\r\n  if (borderLeftWidth) {\r\n    instance.save();\r\n    clipBorderLeft(instance, layout, style, rbl, rtl);\r\n    fillBorderLeft(instance, layout, style, rbl, rtl);\r\n    instance.restore();\r\n  }\r\n\r\n  instance.restore();\r\n}\r\n\r\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\r\n  const { top, left, width, height } = layout;\r\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\r\n\r\n  // Clip outer top border edge\r\n  ctx.moveTo(left + rtl, top);\r\n  ctx.lineTo(left + width - rtr, top);\r\n\r\n  // Ellipse coefficients outer top right cap\r\n  const c0 = rtr * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width - c0,\r\n    top,\r\n    left + width,\r\n    top + c0,\r\n    left + width,\r\n    top + rtr,\r\n  );\r\n\r\n  // Move down in case the margin exceedes the radius\r\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\r\n  ctx.lineTo(left + width, topRightYCoord);\r\n\r\n  // Clip inner top right cap\r\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\r\n\r\n  // Ellipse coefficients inner top right cap\r\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\r\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\r\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\r\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\r\n\r\n  // Clip inner top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width - borderRightWidth,\r\n    top + borderTopWidth + c2,\r\n    left + width - borderRightWidth - c1,\r\n    top + borderTopWidth,\r\n    left + width - borderRightWidth - innerTopRightRadiusX,\r\n    top + borderTopWidth,\r\n  );\r\n\r\n  // Clip inner top border edge\r\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\r\n\r\n  // Ellipse coefficients inner top left cap\r\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\r\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\r\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\r\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\r\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\r\n\r\n  // Clip inner top left cap\r\n  ctx.bezierCurveTo(\r\n    left + borderLeftWidth + c3,\r\n    top + borderTopWidth,\r\n    left + borderLeftWidth,\r\n    top + borderTopWidth + c4,\r\n    left + borderLeftWidth,\r\n    topLeftYCoord,\r\n  );\r\n  ctx.lineTo(left, topLeftYCoord);\r\n\r\n  // Move down in case the margin exceedes the radius\r\n  ctx.lineTo(left, top + rtl);\r\n\r\n  // Ellipse coefficients outer top left cap\r\n  const c5 = rtl * (1.0 - KAPPA);\r\n\r\n  // Clip outer top left cap\r\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n\r\n  // Clip border top cap joins\r\n  if (borderRightWidth) {\r\n    const trSlope = -borderTopWidth / borderRightWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.lineTo(left, top);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n\r\n  if (borderLeftWidth) {\r\n    const trSlope = -borderTopWidth / borderLeftWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\r\n    ctx.lineTo(left, top);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n};\r\n\r\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\r\n  const { top, left, width } = layout;\r\n  const {\r\n    borderTopColor,\r\n    borderTopWidth,\r\n    borderTopStyle,\r\n    borderRightWidth,\r\n    borderLeftWidth,\r\n  } = style;\r\n\r\n  const c0 = rtl * (1.0 - KAPPA);\r\n  const c1 = rtr * (1.0 - KAPPA);\r\n\r\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\r\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\r\n  ctx.lineTo(left + width - rtr, top);\r\n  ctx.bezierCurveTo(\r\n    left + width - c1,\r\n    top,\r\n    left + width,\r\n    top + c1,\r\n    left + width,\r\n    top + rtr,\r\n  );\r\n\r\n  ctx.strokeColor(borderTopColor);\r\n  ctx.lineWidth(\r\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\r\n  );\r\n\r\n  if (borderTopStyle === 'dashed') {\r\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\r\n  } else if (borderTopStyle === 'dotted') {\r\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\r\n  }\r\n\r\n  ctx.stroke();\r\n  ctx.undash();\r\n};\r\n\r\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\r\n  const { top, left, width, height } = layout;\r\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\r\n\r\n  // Clip outer right border edge\r\n  ctx.moveTo(left + width, top + rtr);\r\n  ctx.lineTo(left + width, top + height - rbr);\r\n\r\n  // Ellipse coefficients outer bottom right cap\r\n  const c0 = rbr * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width,\r\n    top + height - c0,\r\n    left + width - c0,\r\n    top + height,\r\n    left + width - rbr,\r\n    top + height,\r\n  );\r\n\r\n  // Move left in case the margin exceedes the radius\r\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\r\n  ctx.lineTo(topBottomXCoord, top + height);\r\n\r\n  // Clip inner bottom right cap\r\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\r\n\r\n  // Ellipse coefficients inner bottom right cap\r\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\r\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\r\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\r\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\r\n\r\n  // Clip inner top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width - borderRightWidth - c1,\r\n    top + height - borderBottomWidth,\r\n    left + width - borderRightWidth,\r\n    top + height - borderBottomWidth - c2,\r\n    left + width - borderRightWidth,\r\n    top + height - Math.max(rbr, borderBottomWidth),\r\n  );\r\n\r\n  // Clip inner right border edge\r\n  ctx.lineTo(\r\n    left + width - borderRightWidth,\r\n    top + Math.max(rtr, borderTopWidth),\r\n  );\r\n\r\n  // Ellipse coefficients inner top right cap\r\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\r\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\r\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\r\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\r\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\r\n\r\n  // Clip inner top left cap\r\n  ctx.bezierCurveTo(\r\n    left + width - borderRightWidth,\r\n    top + borderTopWidth + c4,\r\n    left + width - borderRightWidth - c3,\r\n    top + borderTopWidth,\r\n    topRightXCoord,\r\n    top + borderTopWidth,\r\n  );\r\n  ctx.lineTo(topRightXCoord, top);\r\n\r\n  // Move right in case the margin exceedes the radius\r\n  ctx.lineTo(left + width - rtr, top);\r\n\r\n  // Ellipse coefficients outer top right cap\r\n  const c5 = rtr * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + width - c5,\r\n    top,\r\n    left + width,\r\n    top + c5,\r\n    left + width,\r\n    top + rtr,\r\n  );\r\n\r\n  ctx.closePath();\r\n  ctx.clip();\r\n\r\n  // Clip border right cap joins\r\n  if (borderTopWidth) {\r\n    const trSlope = -borderTopWidth / borderRightWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n\r\n  if (borderBottomWidth) {\r\n    const brSlope = borderBottomWidth / borderRightWidth;\r\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.lineTo(left, top);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n};\r\n\r\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\r\n  const { top, left, width, height } = layout;\r\n  const {\r\n    borderRightColor,\r\n    borderRightStyle,\r\n    borderRightWidth,\r\n    borderTopWidth,\r\n    borderBottomWidth,\r\n  } = style;\r\n\r\n  const c0 = rbr * (1.0 - KAPPA);\r\n  const c1 = rtr * (1.0 - KAPPA);\r\n\r\n  ctx.moveTo(left + width - rtr, top);\r\n  ctx.bezierCurveTo(\r\n    left + width - c1,\r\n    top,\r\n    left + width,\r\n    top + c1,\r\n    left + width,\r\n    top + rtr,\r\n  );\r\n  ctx.lineTo(left + width, top + height - rbr);\r\n  ctx.bezierCurveTo(\r\n    left + width,\r\n    top + height - c0,\r\n    left + width - c0,\r\n    top + height,\r\n    left + width - rbr,\r\n    top + height,\r\n  );\r\n\r\n  ctx.strokeColor(borderRightColor);\r\n  ctx.lineWidth(\r\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\r\n  );\r\n\r\n  if (borderRightStyle === 'dashed') {\r\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\r\n  } else if (borderRightStyle === 'dotted') {\r\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\r\n  }\r\n\r\n  ctx.stroke();\r\n  ctx.undash();\r\n};\r\n\r\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\r\n  const { top, left, width, height } = layout;\r\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\r\n\r\n  // Clip outer top border edge\r\n  ctx.moveTo(left + width - rbr, top + height);\r\n  ctx.lineTo(left + rbl, top + height);\r\n\r\n  // Ellipse coefficients outer top right cap\r\n  const c0 = rbl * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + c0,\r\n    top + height,\r\n    left,\r\n    top + height - c0,\r\n    left,\r\n    top + height - rbl,\r\n  );\r\n\r\n  // Move up in case the margin exceedes the radius\r\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\r\n  ctx.lineTo(left, bottomLeftYCoord);\r\n\r\n  // Clip inner bottom left cap\r\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\r\n\r\n  // Ellipse coefficients inner top right cap\r\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\r\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\r\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\r\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\r\n\r\n  // Clip inner bottom left cap\r\n  ctx.bezierCurveTo(\r\n    left + borderLeftWidth,\r\n    top + height - borderBottomWidth - c2,\r\n    left + borderLeftWidth + c1,\r\n    top + height - borderBottomWidth,\r\n    left + borderLeftWidth + innerBottomLeftRadiusX,\r\n    top + height - borderBottomWidth,\r\n  );\r\n\r\n  // Clip inner bottom border edge\r\n  ctx.lineTo(\r\n    left + width - Math.max(rbr, borderRightWidth),\r\n    top + height - borderBottomWidth,\r\n  );\r\n\r\n  // Ellipse coefficients inner top left cap\r\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\r\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\r\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\r\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\r\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\r\n\r\n  // Clip inner top left cap\r\n  ctx.bezierCurveTo(\r\n    left + width - borderRightWidth - c3,\r\n    top + height - borderBottomWidth,\r\n    left + width - borderRightWidth,\r\n    top + height - borderBottomWidth - c4,\r\n    left + width - borderRightWidth,\r\n    bottomRightYCoord,\r\n  );\r\n  ctx.lineTo(left + width, bottomRightYCoord);\r\n\r\n  // Move down in case the margin exceedes the radius\r\n  ctx.lineTo(left + width, top + height - rbr);\r\n\r\n  // Ellipse coefficients outer top left cap\r\n  const c5 = rbr * (1.0 - KAPPA);\r\n\r\n  // Clip outer top left cap\r\n  ctx.bezierCurveTo(\r\n    left + width,\r\n    top + height - c5,\r\n    left + width - c5,\r\n    top + height,\r\n    left + width - rbr,\r\n    top + height,\r\n  );\r\n  ctx.closePath();\r\n  ctx.clip();\r\n\r\n  // Clip border bottom cap joins\r\n  if (borderRightWidth) {\r\n    const brSlope = borderBottomWidth / borderRightWidth;\r\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.lineTo(left, top);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n\r\n  if (borderLeftWidth) {\r\n    const trSlope = -borderBottomWidth / borderLeftWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n};\r\n\r\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\r\n  const { top, left, width, height } = layout;\r\n  const {\r\n    borderBottomColor,\r\n    borderBottomStyle,\r\n    borderBottomWidth,\r\n    borderRightWidth,\r\n    borderLeftWidth,\r\n  } = style;\r\n\r\n  const c0 = rbl * (1.0 - KAPPA);\r\n  const c1 = rbr * (1.0 - KAPPA);\r\n\r\n  ctx.moveTo(left + width, top + height - rbr);\r\n  ctx.bezierCurveTo(\r\n    left + width,\r\n    top + height - c1,\r\n    left + width - c1,\r\n    top + height,\r\n    left + width - rbr,\r\n    top + height,\r\n  );\r\n  ctx.lineTo(left + rbl, top + height);\r\n  ctx.bezierCurveTo(\r\n    left + c0,\r\n    top + height,\r\n    left,\r\n    top + height - c0,\r\n    left,\r\n    top + height - rbl,\r\n  );\r\n\r\n  ctx.strokeColor(borderBottomColor);\r\n  ctx.lineWidth(\r\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\r\n  );\r\n\r\n  if (borderBottomStyle === 'dashed') {\r\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\r\n  } else if (borderBottomStyle === 'dotted') {\r\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\r\n  }\r\n\r\n  ctx.stroke();\r\n  ctx.undash();\r\n};\r\n\r\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\r\n  const { top, left, width, height } = layout;\r\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\r\n\r\n  // Clip outer left border edge\r\n  ctx.moveTo(left, top + height - rbl);\r\n  ctx.lineTo(left, top + rtl);\r\n\r\n  // Ellipse coefficients outer top left cap\r\n  const c0 = rtl * (1.0 - KAPPA);\r\n\r\n  // Clip outer top left cap\r\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\r\n\r\n  // Move right in case the margin exceedes the radius\r\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\r\n  ctx.lineTo(topLeftCoordX, top);\r\n\r\n  // Clip inner top left cap\r\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\r\n\r\n  // Ellipse coefficients inner top left cap\r\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\r\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\r\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\r\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\r\n\r\n  // Clip inner top right cap\r\n  ctx.bezierCurveTo(\r\n    left + borderLeftWidth + c1,\r\n    top + borderTopWidth,\r\n    left + borderLeftWidth,\r\n    top + borderTopWidth + c2,\r\n    left + borderLeftWidth,\r\n    top + Math.max(rtl, borderTopWidth),\r\n  );\r\n\r\n  // Clip inner left border edge\r\n  ctx.lineTo(\r\n    left + borderLeftWidth,\r\n    top + height - Math.max(rbl, borderBottomWidth),\r\n  );\r\n\r\n  // Ellipse coefficients inner bottom left cap\r\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\r\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\r\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\r\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\r\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\r\n\r\n  // Clip inner top left cap\r\n  ctx.bezierCurveTo(\r\n    left + borderLeftWidth,\r\n    top + height - borderBottomWidth - c4,\r\n    left + borderLeftWidth + c3,\r\n    top + height - borderBottomWidth,\r\n    bottomLeftXCoord,\r\n    top + height - borderBottomWidth,\r\n  );\r\n  ctx.lineTo(bottomLeftXCoord, top + height);\r\n\r\n  // Move left in case the margin exceedes the radius\r\n  ctx.lineTo(left + rbl, top + height);\r\n\r\n  // Ellipse coefficients outer top right cap\r\n  const c5 = rbl * (1.0 - KAPPA);\r\n\r\n  // Clip outer top right cap\r\n  ctx.bezierCurveTo(\r\n    left + c5,\r\n    top + height,\r\n    left,\r\n    top + height - c5,\r\n    left,\r\n    top + height - rbl,\r\n  );\r\n\r\n  ctx.closePath();\r\n  ctx.clip();\r\n\r\n  // Clip border right cap joins\r\n  if (borderBottomWidth) {\r\n    const trSlope = -borderBottomWidth / borderLeftWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.lineTo(left, top);\r\n    ctx.lineTo(left + width, top);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n\r\n  if (borderBottomWidth) {\r\n    const trSlope = -borderTopWidth / borderLeftWidth;\r\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\r\n    ctx.lineTo(left, top);\r\n    ctx.lineTo(left, top + height);\r\n    ctx.lineTo(left + width, top + height);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n  }\r\n};\r\n\r\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\r\n  const { top, left, height } = layout;\r\n  const {\r\n    borderLeftColor,\r\n    borderLeftStyle,\r\n    borderLeftWidth,\r\n    borderTopWidth,\r\n    borderBottomWidth,\r\n  } = style;\r\n\r\n  const c0 = rbl * (1.0 - KAPPA);\r\n  const c1 = rtl * (1.0 - KAPPA);\r\n\r\n  ctx.moveTo(left + rbl, top + height);\r\n  ctx.bezierCurveTo(\r\n    left + c0,\r\n    top + height,\r\n    left,\r\n    top + height - c0,\r\n    left,\r\n    top + height - rbl,\r\n  );\r\n  ctx.lineTo(left, top + rtl);\r\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\r\n\r\n  ctx.strokeColor(borderLeftColor);\r\n  ctx.lineWidth(\r\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\r\n  );\r\n\r\n  if (borderLeftStyle === 'dashed') {\r\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\r\n  } else if (borderLeftStyle === 'dotted') {\r\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\r\n  }\r\n\r\n  ctx.stroke();\r\n  ctx.undash();\r\n};\r\n\r\nexport default { drawBorders };\r\n","// This constant is used to approximate a symmetrical arc using a cubic\r\n// Bezier curve.\r\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\r\n\r\nconst Clipping = {\r\n  clip() {\r\n    const { top, left, width, height } = this.getAbsoluteLayout();\r\n\r\n    const {\r\n      borderTopLeftRadius = 0,\r\n      borderTopRightRadius = 0,\r\n      borderBottomRightRadius = 0,\r\n      borderBottomLeftRadius = 0,\r\n    } = this.style;\r\n\r\n    // Border top\r\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\r\n    const ctr = rtr * (1.0 - KAPPA);\r\n\r\n    this.root.instance.moveTo(left + rtr, top);\r\n    this.root.instance.lineTo(left + width - rtr, top);\r\n    this.root.instance.bezierCurveTo(\r\n      left + width - ctr,\r\n      top,\r\n      left + width,\r\n      top + ctr,\r\n      left + width,\r\n      top + rtr,\r\n    );\r\n\r\n    // Border right\r\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\r\n    const cbr = rbr * (1.0 - KAPPA);\r\n\r\n    this.root.instance.lineTo(left + width, top + height - rbr);\r\n    this.root.instance.bezierCurveTo(\r\n      left + width,\r\n      top + height - cbr,\r\n      left + width - cbr,\r\n      top + height,\r\n      left + width - rbr,\r\n      top + height,\r\n    );\r\n\r\n    // Border bottom\r\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\r\n    const cbl = rbl * (1.0 - KAPPA);\r\n\r\n    this.root.instance.lineTo(left + rbl, top + height);\r\n    this.root.instance.bezierCurveTo(\r\n      left + cbl,\r\n      top + height,\r\n      left,\r\n      top + height - cbl,\r\n      left,\r\n      top + height - rbl,\r\n    );\r\n\r\n    // Border left\r\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\r\n    const ctl = rtl * (1.0 - KAPPA);\r\n\r\n    this.root.instance.lineTo(left, top + rtl);\r\n    this.root.instance.bezierCurveTo(\r\n      left,\r\n      top + ctl,\r\n      left + ctl,\r\n      top,\r\n      left + rtl,\r\n      top,\r\n    );\r\n    this.root.instance.closePath();\r\n    this.root.instance.clip();\r\n  },\r\n};\r\n\r\nexport default Clipping;\r\n","const getRotation = transform => {\r\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\r\n\r\n  if (match && match[1] && match[2]) {\r\n    const value = match[1];\r\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nconst getTranslateX = transform => {\r\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\r\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\r\n    transform,\r\n  );\r\n\r\n  if (matchX && matchX[1]) return matchX[1];\r\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\r\n\r\n  return 0;\r\n};\r\n\r\nconst getTranslateY = transform => {\r\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\r\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\r\n    transform,\r\n  );\r\n\r\n  if (matchY && matchY[1]) return matchY[1];\r\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\r\n\r\n  return 0;\r\n};\r\n\r\nconst getScaleX = transform => {\r\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\r\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\r\n    transform,\r\n  );\r\n\r\n  if (matchX && matchX[1]) return matchX[1];\r\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\r\n\r\n  return 1;\r\n};\r\n\r\nconst getScaleY = transform => {\r\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\r\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\r\n    transform,\r\n  );\r\n\r\n  if (matchY && matchY[1]) return matchY[1];\r\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\r\n\r\n  return 1;\r\n};\r\n\r\nconst getMatrix = transform => {\r\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\r\n    transform,\r\n  );\r\n  if (match) return match.slice(1, 7);\r\n  return null;\r\n};\r\n\r\nconst applySingleTransformation = (element, transform, origin) => {\r\n  if (/rotate/g.test(transform)) {\r\n    element.root.instance.rotate(getRotation(transform), { origin });\r\n  } else if (/scaleX/g.test(transform)) {\r\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\r\n  } else if (/scaleY/g.test(transform)) {\r\n    element.root.instance.scale(1, getScaleY(transform), { origin });\r\n  } else if (/scale/g.test(transform)) {\r\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\r\n      origin,\r\n    });\r\n  } else if (/translateX/g.test(transform)) {\r\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\r\n  } else if (/translateY/g.test(transform)) {\r\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\r\n  } else if (/translate/g.test(transform)) {\r\n    element.root.instance.translate(\r\n      getTranslateX(transform),\r\n      getTranslateY(transform),\r\n      { origin },\r\n    );\r\n  } else if (/matrix/g.test(transform)) {\r\n    element.root.instance.transform(...getMatrix(transform));\r\n  }\r\n};\r\n\r\nconst Transformations = {\r\n  applyTransformations() {\r\n    let match;\r\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\r\n    const origin = this.origin;\r\n    const transform = (this.style && this.style.transform) || '';\r\n\r\n    while ((match = re.exec(transform)) != null) {\r\n      applySingleTransformation(this, match[0], origin);\r\n    }\r\n  },\r\n};\r\n\r\nexport default Transformations;\r\n","import { isNil, mergeDeepWith } from 'ramda';\r\n\r\nconst merge = (a, b) => {\r\n  return isNil(b) ? a : b;\r\n};\r\n\r\nconst deepMerge = objs =>\r\n  objs.reduce((acc, obj) => {\r\n    return mergeDeepWith(merge, acc, obj);\r\n  }, {});\r\n\r\nexport default deepMerge;\r\n","import { compose, equals, type } from 'ramda';\r\n\r\nconst isFunction = compose(\r\n  equals('Function'),\r\n  type,\r\n);\r\n\r\nexport default isFunction;\r\n","export const inheritedProperties = [\r\n  'color',\r\n  'fontFamily',\r\n  'fontSize',\r\n  'fontStyle',\r\n  'fontWeight',\r\n  'letterSpacing',\r\n  'opacity',\r\n  'textDecoration',\r\n  'lineHeight',\r\n  'textAlign',\r\n  'visibility',\r\n  'wordSpacing',\r\n];\r\n","import { pick, toPairsIn } from 'ramda';\r\n\r\nimport Node from './Node';\r\nimport StyleSheet from '../stylesheet';\r\nimport Debug from '../mixins/debug';\r\nimport Borders from '../mixins/borders';\r\nimport Clipping from '../mixins/clipping';\r\nimport Transform from '../mixins/transform';\r\nimport warning from '../utils/warning';\r\nimport deepMerge from '../utils/deepMerge';\r\nimport upperFirst from '../utils/upperFirst';\r\nimport isFunction from '../utils/isFunction';\r\nimport matchPercent from '../utils/matchPercent';\r\nimport { inheritedProperties } from '../stylesheet/inherit';\r\n\r\nclass Base extends Node {\r\n  constructor(root, props) {\r\n    super();\r\n\r\n    this.root = root;\r\n    this.style = {};\r\n    this.props = deepMerge([\r\n      this.constructor.defaultProps,\r\n      Base.defaultProps,\r\n      props,\r\n    ]);\r\n\r\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\r\n  }\r\n\r\n  get page() {\r\n    return this.parent.page;\r\n  }\r\n\r\n  get wrap() {\r\n    return this.props.wrap;\r\n  }\r\n\r\n  get break() {\r\n    return this.props.break;\r\n  }\r\n\r\n  get fixed() {\r\n    return this.props.fixed;\r\n  }\r\n\r\n  get minPresenceAhead() {\r\n    return this.props.minPresenceAhead;\r\n  }\r\n\r\n  get absolute() {\r\n    return this.props.style.position === 'absolute';\r\n  }\r\n\r\n  get origin() {\r\n    const { transformOriginX, transformOriginY } = this.style;\r\n    const { left, top, width, height } = this.getAbsoluteLayout();\r\n\r\n    const percentX = matchPercent(transformOriginX);\r\n    const percentY = matchPercent(transformOriginY);\r\n\r\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\r\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\r\n\r\n    return [left + offsetX, top + offsetY];\r\n  }\r\n\r\n  set break(value) {\r\n    this.props.break = value;\r\n  }\r\n\r\n  appendChild(child) {\r\n    super.appendChild(child);\r\n    this.root.markDirty();\r\n  }\r\n\r\n  appendChildBefore(child, beforeChild) {\r\n    super.appendChildBefore(child, beforeChild);\r\n    this.root.markDirty();\r\n  }\r\n\r\n  removeChild(child) {\r\n    super.removeChild(child);\r\n    this.root.markDirty();\r\n  }\r\n\r\n  update(newProps) {\r\n    this.props = deepMerge([\r\n      this.constructor.defaultProps,\r\n      Base.defaultProps,\r\n      newProps,\r\n    ]);\r\n    this.root.markDirty();\r\n  }\r\n\r\n  applyProps() {\r\n    this.style = this.resolveStyles();\r\n\r\n    toPairsIn(this.style).map(([attribute, value]) => {\r\n      this.applyStyle(attribute, value);\r\n    });\r\n\r\n    this.children.forEach(child => {\r\n      if (child.applyProps) child.applyProps();\r\n    });\r\n  }\r\n\r\n  resolveStyles() {\r\n    const { size, orientation, isAutoHeight } = this.page;\r\n    const container = {\r\n      orientation,\r\n      isAutoHeight,\r\n      width: size.width,\r\n      height: size.height,\r\n    };\r\n\r\n    const ownStyles = StyleSheet.resolve(this.props.style, container);\r\n\r\n    const inheritedStyles = this.parent\r\n      ? pick(inheritedProperties, this.parent.style)\r\n      : {};\r\n\r\n    return { ...inheritedStyles, ...ownStyles };\r\n  }\r\n\r\n  applyStyle(attribute, value) {\r\n    if (value === undefined) return;\r\n\r\n    const setter = `set${upperFirst(attribute)}`;\r\n\r\n    switch (attribute) {\r\n      case 'marginTop':\r\n      case 'marginRight':\r\n      case 'marginBottom':\r\n      case 'marginLeft':\r\n      case 'paddingTop':\r\n      case 'paddingRight':\r\n      case 'paddingBottom':\r\n      case 'paddingLeft':\r\n      case 'borderTopWidth':\r\n      case 'borderRightWidth':\r\n      case 'borderBottomWidth':\r\n      case 'borderLeftWidth':\r\n      case 'position':\r\n      case 'top':\r\n      case 'right':\r\n      case 'bottom':\r\n      case 'left':\r\n      case 'width':\r\n      case 'height':\r\n      case 'minHeight':\r\n      case 'maxHeight':\r\n      case 'minWidth':\r\n      case 'maxWidth':\r\n        this[attribute] = value;\r\n        break;\r\n      default:\r\n        if (isFunction(this.layout[setter])) {\r\n          this.layout[setter](value);\r\n        }\r\n    }\r\n  }\r\n\r\n  getLayoutData() {\r\n    const layout = this.getAbsoluteLayout();\r\n\r\n    return {\r\n      type: this.name,\r\n      top: layout.top,\r\n      left: layout.left,\r\n      width: layout.width,\r\n      style: this.style,\r\n      height: layout.height,\r\n      children: this.children.map(c => {\r\n        return c.getLayoutData();\r\n      }),\r\n    };\r\n  }\r\n\r\n  drawBackgroundColor() {\r\n    const { backgroundColor, opacity = 1 } = this.style;\r\n    const { left, top, width, height } = this.getAbsoluteLayout();\r\n\r\n    if (backgroundColor) {\r\n      this.root.instance.save();\r\n\r\n      this.clip();\r\n\r\n      this.root.instance\r\n        .fillOpacity(opacity)\r\n        .fillColor(backgroundColor)\r\n        .rect(left, top, width, height)\r\n        .fill()\r\n        .restore();\r\n    }\r\n  }\r\n\r\n  clone() {\r\n    const clone = new this.constructor(this.root, this.props);\r\n\r\n    clone.copyStyle(this);\r\n    clone.style = this.style;\r\n\r\n    return clone;\r\n  }\r\n\r\n  onNodeSplit(height, clone) {\r\n    this.calculateLayout();\r\n\r\n    clone.marginTop = 0;\r\n    clone.paddingTop = 0;\r\n\r\n    // If a height was given to the element, we need to substract the remaining wrapping height\r\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\r\n    if (clone.style.height) {\r\n      clone.height = this.height - height;\r\n    }\r\n\r\n    this.height = height;\r\n    this.marginBottom = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n\r\n  async renderChildren() {\r\n    for (let i = 0; i < this.children.length; i++) {\r\n      await this.children[i].render();\r\n    }\r\n  }\r\n}\r\n\r\nBase.defaultProps = {\r\n  style: {\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n    transformOriginX: '50%',\r\n    transformOriginY: '50%',\r\n  },\r\n  minPresenceAhead: 0,\r\n};\r\n\r\nObject.assign(Base.prototype, Debug);\r\nObject.assign(Base.prototype, Borders);\r\nObject.assign(Base.prototype, Clipping);\r\nObject.assign(Base.prototype, Transform);\r\n\r\nexport default Base;\r\n","import matchPercent from '../utils/matchPercent';\r\n\r\nconst RULER_WIDTH = 13;\r\nconst RULER_COLOR = 'white';\r\nconst RULER_FONT_SIZE = 5;\r\nconst DEFAULT_RULER_STEPS = 50;\r\nconst LINE_WIDTH = 0.5;\r\nconst LINE_COLOR = 'gray';\r\nconst GRID_COLOR = '#ababab';\r\n\r\nconst range = (max, steps) =>\r\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\r\n\r\nconst matchPercentage = value => {\r\n  const match = matchPercent(value);\r\n  return match ? 100 / match.value : null;\r\n};\r\n\r\nconst Ruler = {\r\n  getRulerWidth() {\r\n    return RULER_WIDTH;\r\n  },\r\n  hasHorizontalRuler() {\r\n    return this.props.ruler || this.props.horizontalRuler;\r\n  },\r\n  hasVerticalRuler() {\r\n    return this.props.ruler || this.props.verticalRuler;\r\n  },\r\n  getHorizontalSteps() {\r\n    const value =\r\n      this.props.horizontalRulerSteps ||\r\n      this.props.rulerSteps ||\r\n      DEFAULT_RULER_STEPS;\r\n\r\n    if (typeof value === 'string') {\r\n      const percentage = matchPercentage(value);\r\n      if (percentage) {\r\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\r\n        return width / percentage;\r\n      }\r\n      throw new Error('Page: Invalid horizontal steps value');\r\n    }\r\n\r\n    return value;\r\n  },\r\n  getVerticalSteps() {\r\n    const value =\r\n      this.props.verticalRulerSteps ||\r\n      this.props.rulerSteps ||\r\n      DEFAULT_RULER_STEPS;\r\n\r\n    if (typeof value === 'string') {\r\n      const percentage = matchPercentage(value);\r\n      if (percentage) {\r\n        const height =\r\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\r\n        return height / percentage;\r\n      }\r\n      throw new Error('Page: Invalid horizontal steps value');\r\n    }\r\n\r\n    return value;\r\n  },\r\n  renderRuler() {\r\n    const hasHorizontalRuler = this.hasHorizontalRuler();\r\n    const hasVerticalRuler = this.hasVerticalRuler();\r\n\r\n    if (hasHorizontalRuler || hasVerticalRuler) {\r\n      this.root.instance\r\n        .save()\r\n        .lineWidth(LINE_WIDTH)\r\n        .fontSize(RULER_FONT_SIZE)\r\n        .opacity(1);\r\n\r\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\r\n\r\n      if (hasVerticalRuler) this.drawVerticalRuler();\r\n\r\n      if (hasHorizontalRuler && hasVerticalRuler) {\r\n        this.root.instance\r\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\r\n          .fill(RULER_COLOR);\r\n      }\r\n\r\n      this.root.instance.restore();\r\n    }\r\n  },\r\n  drawHorizontalRuler() {\r\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\r\n\r\n    this.root.instance\r\n      .rect(offset, 0, this.width, RULER_WIDTH)\r\n      .fill(RULER_COLOR)\r\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\r\n      .lineTo(this.width, RULER_WIDTH)\r\n      .stroke(LINE_COLOR);\r\n\r\n    const hRange = range(this.width, this.getHorizontalSteps());\r\n\r\n    hRange.map(step => {\r\n      this.root.instance\r\n        .moveTo(offset + step, 0)\r\n        .lineTo(offset + step, RULER_WIDTH)\r\n        .stroke(LINE_COLOR)\r\n        .fillColor('black')\r\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\r\n    });\r\n\r\n    hRange.map(step => {\r\n      if (step !== 0) {\r\n        this.root.instance\r\n          .moveTo(offset + step, RULER_WIDTH)\r\n          .lineTo(offset + step, this.height)\r\n          .stroke(GRID_COLOR);\r\n      }\r\n    });\r\n  },\r\n  drawVerticalRuler() {\r\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\r\n\r\n    this.root.instance\r\n      .rect(0, offset, RULER_WIDTH, this.height)\r\n      .fill(RULER_COLOR)\r\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\r\n      .lineTo(RULER_WIDTH, this.height)\r\n      .stroke(LINE_COLOR);\r\n\r\n    const vRange = range(this.height, this.getVerticalSteps());\r\n\r\n    vRange.map(step => {\r\n      this.root.instance\r\n        .moveTo(0, offset + step)\r\n        .lineTo(RULER_WIDTH, offset + step)\r\n        .stroke(LINE_COLOR)\r\n        .fillColor('black')\r\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\r\n    });\r\n\r\n    vRange.map(step => {\r\n      if (step !== 0) {\r\n        this.root.instance\r\n          .moveTo(RULER_WIDTH, offset + step)\r\n          .lineTo(this.width, offset + step)\r\n          .stroke(GRID_COLOR);\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nexport default Ruler;\r\n","class TextInstance {\r\n  constructor(root, value) {\r\n    this.root = root;\r\n    this.value = value;\r\n    this.parent = null;\r\n    this.props = {};\r\n  }\r\n\r\n  get name() {\r\n    return 'TextInstance';\r\n  }\r\n\r\n  getLayoutData() {\r\n    return this.value;\r\n  }\r\n\r\n  remove() {\r\n    this.parent.removeChild(this);\r\n  }\r\n\r\n  clone() {\r\n    return new this.constructor(this.root, this.value);\r\n  }\r\n\r\n  cleanup() {}\r\n\r\n  update(value) {\r\n    this.value = value;\r\n    this.parent.computed = false;\r\n    this.parent.container = null;\r\n    this.root.markDirty();\r\n  }\r\n}\r\n\r\nexport default TextInstance;\r\n","const PAGE_SIZES = {\r\n  '4A0': [4767.87, 6740.79],\r\n  '2A0': [3370.39, 4767.87],\r\n  A0: [2383.94, 3370.39],\r\n  A1: [1683.78, 2383.94],\r\n  A2: [1190.55, 1683.78],\r\n  A3: [841.89, 1190.55],\r\n  A4: [595.28, 841.89],\r\n  A5: [419.53, 595.28],\r\n  A6: [297.64, 419.53],\r\n  A7: [209.76, 297.64],\r\n  A8: [147.4, 209.76],\r\n  A9: [104.88, 147.4],\r\n  A10: [73.7, 104.88],\r\n  B0: [2834.65, 4008.19],\r\n  B1: [2004.09, 2834.65],\r\n  B2: [1417.32, 2004.09],\r\n  B3: [1000.63, 1417.32],\r\n  B4: [708.66, 1000.63],\r\n  B5: [498.9, 708.66],\r\n  B6: [354.33, 498.9],\r\n  B7: [249.45, 354.33],\r\n  B8: [175.75, 249.45],\r\n  B9: [124.72, 175.75],\r\n  B10: [87.87, 124.72],\r\n  C0: [2599.37, 3676.54],\r\n  C1: [1836.85, 2599.37],\r\n  C2: [1298.27, 1836.85],\r\n  C3: [918.43, 1298.27],\r\n  C4: [649.13, 918.43],\r\n  C5: [459.21, 649.13],\r\n  C6: [323.15, 459.21],\r\n  C7: [229.61, 323.15],\r\n  C8: [161.57, 229.61],\r\n  C9: [113.39, 161.57],\r\n  C10: [79.37, 113.39],\r\n  RA0: [2437.8, 3458.27],\r\n  RA1: [1729.13, 2437.8],\r\n  RA2: [1218.9, 1729.13],\r\n  RA3: [864.57, 1218.9],\r\n  RA4: [609.45, 864.57],\r\n  SRA0: [2551.18, 3628.35],\r\n  SRA1: [1814.17, 2551.18],\r\n  SRA2: [1275.59, 1814.17],\r\n  SRA3: [907.09, 1275.59],\r\n  SRA4: [637.8, 907.09],\r\n  EXECUTIVE: [521.86, 756.0],\r\n  FOLIO: [612.0, 936.0],\r\n  LEGAL: [612.0, 1008.0],\r\n  LETTER: [612.0, 792.0],\r\n  TABLOID: [792.0, 1224.0],\r\n};\r\n\r\n// Return page size in an object { width, height } given the passed size and orientation\r\n// Accepts page type string, number, array or object as parameter\r\nconst getPageSize = (size, orientation = 'portrait') => {\r\n  let result;\r\n\r\n  if (typeof size === 'string') {\r\n    result = PAGE_SIZES[size.toUpperCase()];\r\n  } else if (Array.isArray(size)) {\r\n    result = size;\r\n  } else if (typeof size === 'number') {\r\n    result = [size];\r\n  } else if (typeof size === 'object' && size.width) {\r\n    result = [size.width, size.height];\r\n  } else {\r\n    throw new Error(`Invalid Page size: ${size}`);\r\n  }\r\n\r\n  return orientation === 'portrait'\r\n    ? { width: result[0], height: result[1] }\r\n    : { width: result[1], height: result[0] };\r\n};\r\n\r\nexport default getPageSize;\r\n","import { Fragment } from 'react';\r\nimport Yoga from 'yoga-layout';\r\n\r\nimport Base from './Base';\r\nimport Ruler from '../mixins/ruler';\r\nimport warning from '../utils/warning';\r\nimport { createInstance } from './index';\r\nimport TextInstance from './TextInstance';\r\nimport getPageSize from '../utils/pageSizes';\r\nimport matchPercent from '../utils/matchPercent';\r\n\r\nclass Page extends Base {\r\n  static defaultProps = {\r\n    size: 'A4',\r\n    wrap: true,\r\n    orientation: 'portrait',\r\n  };\r\n\r\n  constructor(root, props) {\r\n    super(root, props);\r\n\r\n    this._size = null;\r\n  }\r\n\r\n  get name() {\r\n    return 'Page';\r\n  }\r\n\r\n  get document() {\r\n    return this.parent;\r\n  }\r\n\r\n  get page() {\r\n    return this;\r\n  }\r\n\r\n  get orientation() {\r\n    return this.props.orientation;\r\n  }\r\n\r\n  get size() {\r\n    if (this._size) return this._size;\r\n\r\n    this._size = getPageSize(this.props.size, this.orientation);\r\n\r\n    // Adjust size for ruler\r\n    if (this.hasHorizontalRuler()) {\r\n      this._size.width += this.getRulerWidth();\r\n    }\r\n\r\n    if (this.hasVerticalRuler()) {\r\n      this._size.height += this.getRulerWidth();\r\n    }\r\n\r\n    return this._size;\r\n  }\r\n\r\n  get isAutoHeight() {\r\n    return typeof this.size.height === 'undefined';\r\n  }\r\n\r\n  resetMargins() {\r\n    if (\r\n      !!this.marginTop ||\r\n      !!this.marginBottom ||\r\n      !!this.marginLeft ||\r\n      !!this.marginRight\r\n    ) {\r\n      warning(\r\n        false,\r\n        'Margin values are not allowed on Page element. Use padding instead.',\r\n      );\r\n\r\n      this.marginTop = 0;\r\n      this.marginBottom = 0;\r\n      this.marginLeft = 0;\r\n      this.marginRight = 0;\r\n    }\r\n  }\r\n\r\n  applyProps() {\r\n    super.applyProps();\r\n\r\n    this.top = 0;\r\n    this.left = 0;\r\n    this.width = this.size.width;\r\n\r\n    this.resetMargins();\r\n\r\n    // Add some padding if ruler present, so we can see the whole page inside it\r\n    const rulerWidth = this.getRulerWidth();\r\n\r\n    if (this.hasHorizontalRuler()) {\r\n      this.paddingTop = this.paddingTop + rulerWidth;\r\n    }\r\n\r\n    if (this.hasVerticalRuler()) {\r\n      this.paddingLeft = this.paddingLeft + rulerWidth;\r\n    }\r\n  }\r\n\r\n  setPadding(edge, value) {\r\n    const dimension =\r\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\r\n        ? this.size.height\r\n        : this.size.width;\r\n\r\n    const match = matchPercent(value);\r\n\r\n    if (match) {\r\n      this.layout.setPadding(edge, dimension * match.percent);\r\n    } else {\r\n      this.layout.setPadding(edge, value);\r\n    }\r\n  }\r\n\r\n  async addDynamicChild(parent, elements) {\r\n    if (!elements) return;\r\n    const children = Array.isArray(elements) ? elements : [elements];\r\n\r\n    for (let i = 0; i < children.length; i++) {\r\n      const child = children[i];\r\n      const { type, props } = child;\r\n\r\n      if (typeof child === 'string') {\r\n        const instance = new TextInstance(this.root, child);\r\n        parent.appendChild(instance);\r\n      } else if (type !== Fragment) {\r\n        const instance = createInstance(child, this.root);\r\n        await instance.onAppendDynamically();\r\n        parent.appendChild(instance);\r\n        instance.applyProps();\r\n        await this.addDynamicChild(instance, props.children);\r\n      } else {\r\n        await this.addDynamicChild(parent, props.children);\r\n      }\r\n    }\r\n  }\r\n\r\n  async renderDynamicNodes(props, cb) {\r\n    const listToExplore = this.children.slice(0);\r\n\r\n    while (listToExplore.length > 0) {\r\n      const node = listToExplore.shift();\r\n      const condition = cb ? cb(node) : true;\r\n\r\n      if (condition && node.props.render) {\r\n        node.removeAllChilds();\r\n        const elements = node.props.render(props);\r\n        await this.addDynamicChild(node, elements);\r\n        if (!node.fixed) node.props.render = null;\r\n        continue;\r\n      }\r\n\r\n      if (node.children) {\r\n        listToExplore.push(...node.children);\r\n      }\r\n    }\r\n  }\r\n\r\n  async nodeWillWrap(props) {\r\n    await this.renderDynamicNodes(props);\r\n    this.calculateLayout();\r\n  }\r\n\r\n  onNodeSplit(height, clone) {\r\n    clone.marginTop = 0;\r\n    this.marginBottom = 0;\r\n    this.calculateLayout();\r\n  }\r\n\r\n  clone() {\r\n    const clone = super.clone();\r\n    clone._size = this.size;\r\n    return clone;\r\n  }\r\n\r\n  update(newProps) {\r\n    super.update(newProps);\r\n    this._size = null;\r\n  }\r\n\r\n  async render() {\r\n    const { instance } = this.root;\r\n\r\n    if (!this.isAutoHeight) {\r\n      this.height = this.size.height;\r\n    }\r\n\r\n    this.calculateLayout();\r\n\r\n    const height = this.isAutoHeight ? this.height : this.size.height;\r\n\r\n    instance.addPage({\r\n      size: [this.size.width, height],\r\n      margin: 0,\r\n    });\r\n\r\n    if (this.style.backgroundColor) {\r\n      instance\r\n        .fillColor(this.style.backgroundColor)\r\n        .rect(0, 0, this.size.width, height)\r\n        .fill();\r\n    }\r\n\r\n    await this.renderChildren();\r\n\r\n    if (this.props.debug) {\r\n      this.debug();\r\n    }\r\n\r\n    this.renderRuler();\r\n  }\r\n}\r\n\r\nObject.assign(Page.prototype, Ruler);\r\n\r\nexport default Page;\r\n","import Base from './Base';\r\n\r\nclass View extends Base {\r\n  static defaultProps = {\r\n    wrap: true,\r\n  };\r\n\r\n  get name() {\r\n    return 'View';\r\n  }\r\n\r\n  async render() {\r\n    this.root.instance.save();\r\n    this.applyTransformations();\r\n    this.drawBackgroundColor();\r\n    this.drawBorders();\r\n    await this.renderChildren();\r\n    if (this.props.debug) this.debug();\r\n    this.root.instance.restore();\r\n  }\r\n}\r\n\r\nexport default View;\r\n","import isUrl from 'is-url';\r\nimport fontkit from '@react-pdf/fontkit';\r\nimport fetch from 'cross-fetch';\r\n\r\nimport { processFontWeight } from '../stylesheet/transformFontWeight';\r\n\r\nconst fetchFont = async (src, options) => {\r\n  const response = await fetch(src, options);\r\n\r\n  const buffer = await (response.buffer\r\n    ? response.buffer()\r\n    : response.arrayBuffer());\r\n\r\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\r\n};\r\n\r\nclass FontSource {\r\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\r\n    this.src = src;\r\n    this.fontFamily = fontFamily;\r\n    this.fontStyle = fontStyle || 'normal';\r\n    this.fontWeight = processFontWeight(fontWeight) || 400;\r\n\r\n    this.data = null;\r\n    this.loading = false;\r\n    this.options = options;\r\n  }\r\n\r\n  async load() {\r\n    this.loading = true;\r\n\r\n    if (BROWSER || isUrl(this.src)) {\r\n      const { headers, body, method = 'GET' } = this.options;\r\n      const data = await fetchFont(this.src, { method, body, headers });\r\n      this.data = fontkit.create(data);\r\n    } else {\r\n      this.data = await new Promise((resolve, reject) =>\r\n        fontkit.open(this.src, (err, data) =>\r\n          err ? reject(err) : resolve(data),\r\n        ),\r\n      );\r\n    }\r\n\r\n    this.loading = false;\r\n  }\r\n}\r\n\r\nclass Font {\r\n  static create(family) {\r\n    return new Font(family);\r\n  }\r\n\r\n  constructor(family) {\r\n    this.family = family;\r\n    this.sources = [];\r\n  }\r\n\r\n  register({ src, fontWeight, fontStyle, ...options }) {\r\n    this.sources.push(\r\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\r\n    );\r\n  }\r\n\r\n  resolve(descriptor) {\r\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\r\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\r\n\r\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\r\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\r\n\r\n    if (exactFit) return exactFit;\r\n\r\n    let res;\r\n\r\n    if (fontWeight >= 400 && fontWeight <= 500) {\r\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\r\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\r\n      const fit = styleSources.filter(\r\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\r\n      );\r\n\r\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\r\n    }\r\n\r\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\r\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\r\n\r\n    if (fontWeight < 400) {\r\n      res = lt[lt.length - 1] || gt[0];\r\n    }\r\n\r\n    if (fontWeight > 500) {\r\n      res = gt[0] || lt[lt.length - 1];\r\n    }\r\n\r\n    if (!res) {\r\n      throw new Error(\r\n        `Could not resolve font for ${\r\n          this.fontFamily\r\n        }, fontWeight ${fontWeight}`,\r\n      );\r\n    }\r\n\r\n    return res;\r\n  }\r\n}\r\n\r\nexport default Font;\r\n","let emojiSource;\r\n\r\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\r\n  emojiSource = { url, format };\r\n};\r\n\r\nexport const getEmojiSource = () => emojiSource;\r\n\r\nexport default {\r\n  registerEmojiSource,\r\n  getEmojiSource,\r\n};\r\n","let hyphenationCallback;\r\n\r\nexport const registerHyphenationCallback = callback => {\r\n  hyphenationCallback = callback;\r\n};\r\n\r\nexport const getHyphenationCallback = () => hyphenationCallback;\r\n\r\nexport default {\r\n  registerHyphenationCallback,\r\n  getHyphenationCallback,\r\n};\r\n","export default [\r\n  'Courier',\r\n  'Courier-Bold',\r\n  'Courier-Oblique',\r\n  'Helvetica',\r\n  'Helvetica-Bold',\r\n  'Helvetica-Oblique',\r\n  'Times-Roman',\r\n  'Times-Bold',\r\n  'Times-Italic',\r\n];\r\n","import font from './font';\r\nimport emoji from './emoji';\r\nimport standardFonts from './standard';\r\nimport hyphenation from './hyphenation';\r\nimport warning from '../utils/warning';\r\n\r\nlet fonts = {};\r\n\r\nconst register = (src, data) => {\r\n  if (typeof src === 'object') {\r\n    data = src;\r\n  } else {\r\n    warning(\r\n      false,\r\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\r\n    );\r\n\r\n    data.src = src;\r\n  }\r\n\r\n  const { family } = data;\r\n\r\n  if (!fonts[family]) {\r\n    fonts[family] = font.create(family);\r\n  }\r\n\r\n  // Bulk loading\r\n  if (data.fonts) {\r\n    for (let i = 0; i < data.fonts.length; i++) {\r\n      fonts[family].register({ family, ...data.fonts[i] });\r\n    }\r\n  } else {\r\n    fonts[family].register(data);\r\n  }\r\n};\r\n\r\nconst getRegisteredFonts = () => fonts;\r\n\r\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\r\n\r\nconst getFont = descriptor => {\r\n  const { fontFamily } = descriptor;\r\n  const isStandard = standardFonts.includes(fontFamily);\r\n\r\n  if (isStandard) return null;\r\n\r\n  if (!fonts[fontFamily]) {\r\n    throw new Error(\r\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\r\n    );\r\n  }\r\n\r\n  return fonts[fontFamily].resolve(descriptor);\r\n};\r\n\r\nconst load = async function(descriptor, doc) {\r\n  const { fontFamily } = descriptor;\r\n  const isStandard = standardFonts.includes(fontFamily);\r\n\r\n  if (isStandard) return;\r\n\r\n  const font = getFont(descriptor);\r\n\r\n  // We cache the font to avoid fetching it many times\r\n  if (!font.data && !font.loading) {\r\n    await font.load();\r\n  }\r\n};\r\n\r\nconst reset = function() {\r\n  for (const font in fonts) {\r\n    if (fonts.hasOwnProperty(font)) {\r\n      fonts[font].data = null;\r\n    }\r\n  }\r\n};\r\n\r\nconst clear = function() {\r\n  fonts = {};\r\n};\r\n\r\nexport default {\r\n  register,\r\n  getRegisteredFonts,\r\n  getRegisteredFontFamilies,\r\n  getFont,\r\n  load,\r\n  clear,\r\n  reset,\r\n  ...emoji,\r\n  ...hyphenation,\r\n};\r\n","import { PDFFont } from '@react-pdf/pdfkit';\r\n\r\nclass StandardFont {\r\n  constructor(src) {\r\n    this.name = src;\r\n    this.src = PDFFont.open(null, src);\r\n  }\r\n\r\n  layout(str) {\r\n    const [encoded, positions] = this.src.encode(str);\r\n\r\n    return {\r\n      positions,\r\n      stringIndices: positions.map((_, i) => i),\r\n      glyphs: encoded.map((g, i) => {\r\n        const glyph = this.getGlyph(parseInt(g, 16));\r\n        glyph.advanceWidth = positions[i].advanceWidth;\r\n        return glyph;\r\n      }),\r\n    };\r\n  }\r\n\r\n  glyphForCodePoint(codePoint) {\r\n    const glyph = this.getGlyph(codePoint);\r\n    glyph.advanceWidth = 400;\r\n    return glyph;\r\n  }\r\n\r\n  getGlyph(id) {\r\n    return {\r\n      id,\r\n      _font: this.src,\r\n      codePoints: [id],\r\n      isLigature: false,\r\n      name: this.src.font.characterToGlyph(id),\r\n    };\r\n  }\r\n\r\n  hasGlyphForCodePoint(codePoint) {\r\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\r\n  }\r\n\r\n  // Based on empirical observation\r\n  get ascent() {\r\n    return 900;\r\n  }\r\n\r\n  // Based on empirical observation\r\n  get descent() {\r\n    switch (this.name) {\r\n      case 'Times-Roman':\r\n      case 'Times-Bold':\r\n      case 'Times-Italic':\r\n        return -220;\r\n      case 'Courier':\r\n      case 'Courier-Bold':\r\n      case 'Courier-Oblique':\r\n        return -230;\r\n      default:\r\n        return -200;\r\n    }\r\n  }\r\n\r\n  get lineGap() {\r\n    return 0;\r\n  }\r\n\r\n  get unitsPerEm() {\r\n    return 1000;\r\n  }\r\n}\r\n\r\nexport default StandardFont;\r\n","import { pathOr, last } from 'ramda';\r\n\r\nimport StandardFont from './standardFont';\r\n\r\nconst fontCache = {};\r\n\r\nconst IGNORED_CODE_POINTS = [173];\r\n\r\nconst getFontSize = pathOr(12, ['attributes', 'fontSize']);\r\n\r\nconst getFallbackFont = () => {\r\n  return getOrCreateFont('Helvetica');\r\n};\r\n\r\nconst getOrCreateFont = name => {\r\n  if (fontCache[name]) return fontCache[name];\r\n\r\n  const font = new StandardFont(name);\r\n  fontCache[name] = font;\r\n\r\n  return font;\r\n};\r\n\r\nconst shouldFallbackToFont = (codePoint, font) => {\r\n  return (\r\n    !IGNORED_CODE_POINTS.includes(codePoint) &&\r\n    !font.hasGlyphForCodePoint(codePoint) &&\r\n    getFallbackFont().hasGlyphForCodePoint(codePoint)\r\n  );\r\n};\r\n\r\nconst fontSubstitution = () => ({ string, runs }) => {\r\n  let lastFont = null;\r\n  let lastIndex = 0;\r\n  let index = 0;\r\n\r\n  const res = [];\r\n\r\n  for (const run of runs) {\r\n    const fontSize = getFontSize(run);\r\n    const defaultFont =\r\n      typeof run.attributes.font === 'string'\r\n        ? getOrCreateFont(run.attributes.font)\r\n        : run.attributes.font;\r\n\r\n    if (string.length === 0) {\r\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\r\n      break;\r\n    }\r\n\r\n    for (const char of string.slice(run.start, run.end)) {\r\n      const codePoint = char.codePointAt();\r\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\r\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\r\n\r\n      // If the default font does not have a glyph and the fallback font does, we use it\r\n      if (font !== lastFont) {\r\n        if (lastFont) {\r\n          res.push({\r\n            start: lastIndex,\r\n            end: index,\r\n            attributes: {\r\n              font: lastFont,\r\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\r\n            },\r\n          });\r\n        }\r\n\r\n        lastFont = font;\r\n        lastIndex = index;\r\n      }\r\n\r\n      index += char.length;\r\n    }\r\n  }\r\n\r\n  if (lastIndex < string.length) {\r\n    const fontSize = getFontSize(last(runs));\r\n\r\n    res.push({\r\n      start: lastIndex,\r\n      end: string.length,\r\n      attributes: {\r\n        font: lastFont,\r\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\r\n      },\r\n    });\r\n  }\r\n\r\n  return { string, runs: res };\r\n};\r\n\r\nexport default fontSubstitution;\r\n","import layoutEngine from '@react-pdf/textkit/layout';\r\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\r\nimport justification from '@react-pdf/textkit/engines/justification';\r\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\r\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\r\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\r\n\r\nimport fontSubstitution from './fontSubstitution';\r\n\r\nconst engines = {\r\n  linebreaker,\r\n  justification,\r\n  textDecoration,\r\n  scriptItemizer,\r\n  wordHyphenation,\r\n  fontSubstitution,\r\n};\r\n\r\nconst engine = layoutEngine(engines);\r\n\r\nexport default engine;\r\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\r\n\r\nexport const getURL = value => {\r\n  if (!value) return '';\r\n\r\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\r\n    return `http://${value}`;\r\n  }\r\n\r\n  return value;\r\n};\r\n","import PNG from '@react-pdf/png-js';\r\n\r\nPNG.isValid = function(data) {\r\n  try {\r\n    return !!new PNG(data);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default PNG;\r\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\r\n\r\nconst MARKERS = [\r\n  0xffc0,\r\n  0xffc1,\r\n  0xffc2,\r\n  0xffc3,\r\n  0xffc5,\r\n  0xffc6,\r\n  0xffc7,\r\n  0xffc8,\r\n  0xffc9,\r\n  0xffca,\r\n  0xffcb,\r\n  0xffcc,\r\n  0xffcd,\r\n  0xffce,\r\n  0xffcf,\r\n];\r\n\r\nclass JPEG {\r\n  data = null;\r\n  width = null;\r\n  height = null;\r\n\r\n  constructor(data) {\r\n    this.data = data;\r\n\r\n    if (data.readUInt16BE(0) !== 0xffd8) {\r\n      throw new Error('SOI not found in JPEG');\r\n    }\r\n\r\n    let marker;\r\n    let pos = 2;\r\n\r\n    while (pos < data.length) {\r\n      marker = data.readUInt16BE(pos);\r\n      pos += 2;\r\n      if (MARKERS.includes(marker)) {\r\n        break;\r\n      }\r\n      pos += data.readUInt16BE(pos);\r\n    }\r\n\r\n    if (!MARKERS.includes(marker)) {\r\n      throw new Error('Invalid JPEG.');\r\n    }\r\n\r\n    pos += 3;\r\n    this.height = data.readUInt16BE(pos);\r\n\r\n    pos += 2;\r\n    this.width = data.readUInt16BE(pos);\r\n  }\r\n}\r\n\r\nJPEG.isValid = function(data) {\r\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\r\n    return false;\r\n  }\r\n\r\n  let marker;\r\n  let pos = 2;\r\n\r\n  while (pos < data.length) {\r\n    marker = data.readUInt16BE(pos);\r\n    pos += 2;\r\n    if (MARKERS.includes(marker)) {\r\n      break;\r\n    }\r\n    pos += data.readUInt16BE(pos);\r\n  }\r\n\r\n  if (!MARKERS.includes(marker)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport default JPEG;\r\n","const createCache = ({ limit = 100 } = {}) => {\r\n  let cache = {};\r\n  let keys = [];\r\n\r\n  return {\r\n    get: key => cache[key],\r\n    set: (key, value) => {\r\n      keys.push(key);\r\n      if (keys.length > limit) {\r\n        delete cache[keys.shift()];\r\n      }\r\n      cache[key] = value;\r\n    },\r\n    reset: () => {\r\n      cache = {};\r\n      keys = [];\r\n    },\r\n    length: () => keys.length,\r\n  };\r\n};\r\n\r\nexport default createCache;\r\n","import fs from 'fs';\r\nimport url from 'url';\r\nimport path from 'path';\r\nimport fetch from 'cross-fetch';\r\n\r\nimport PNG from './png';\r\nimport JPEG from './jpeg';\r\nimport createCache from './cache';\r\n\r\nexport const IMAGE_CACHE = createCache({ limit: 30 });\r\n\r\nexport const getAbsoluteLocalPath = src => {\r\n  if (BROWSER) {\r\n    throw new Error('Cannot check local paths in client-side environment');\r\n  }\r\n\r\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\r\n    src,\r\n  );\r\n  const absolutePath = path.resolve(pathname);\r\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\r\n    return undefined;\r\n  }\r\n  return absolutePath;\r\n};\r\n\r\nexport const isDangerousLocalPath = (\r\n  filename,\r\n  { safePath = './public' } = {},\r\n) => {\r\n  if (BROWSER) {\r\n    throw new Error(\r\n      'Cannot check dangerous local path in client-side environemnt',\r\n    );\r\n  }\r\n  const absoluteSafePath = path.resolve(safePath);\r\n  const absoluteFilePath = path.resolve(filename);\r\n  return !absoluteFilePath.startsWith(absoluteSafePath);\r\n};\r\n\r\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\r\n  new Promise((resolve, reject) => {\r\n    try {\r\n      if (BROWSER) {\r\n        return reject(new Error('Cannot fetch local file in this environemnt'));\r\n      }\r\n      const absolutePath = getAbsoluteLocalPath(src);\r\n      if (!absolutePath) {\r\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\r\n      }\r\n      if (\r\n        !allowDangerousPaths &&\r\n        isDangerousLocalPath(absolutePath, { safePath })\r\n      ) {\r\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\r\n      }\r\n      fs.readFile(absolutePath, (err, data) =>\r\n        err ? reject(err) : resolve(data),\r\n      );\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n\r\nconst fetchRemoteFile = async (uri, options) => {\r\n  const response = await fetch(uri, options);\r\n\r\n  const buffer = await (response.buffer\r\n    ? response.buffer()\r\n    : response.arrayBuffer());\r\n\r\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\r\n};\r\n\r\nconst isValidFormat = format => {\r\n  const lower = format.toLowerCase();\r\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\r\n};\r\n\r\nconst guessFormat = buffer => {\r\n  let format;\r\n\r\n  if (JPEG.isValid(buffer)) {\r\n    format = 'jpg';\r\n  } else if (PNG.isValid(buffer)) {\r\n    format = 'png';\r\n  }\r\n\r\n  return format;\r\n};\r\n\r\nconst isCompatibleBase64 = ({ uri }) =>\r\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\r\n\r\nfunction getImage(body, extension) {\r\n  switch (extension.toLowerCase()) {\r\n    case 'jpg':\r\n    case 'jpeg':\r\n      return new JPEG(body);\r\n    case 'png':\r\n      return new PNG(body);\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nconst resolveBase64Image = ({ uri }) => {\r\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\r\n  const format = match[1];\r\n  const data = match[2];\r\n\r\n  if (!isValidFormat(format)) {\r\n    throw new Error(`Base64 image invalid format: ${format}`);\r\n  }\r\n\r\n  return new Promise(resolve => {\r\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\r\n  });\r\n};\r\n\r\nconst resolveImageFromData = src => {\r\n  if (src.data && src.format) {\r\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\r\n  }\r\n\r\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\r\n};\r\n\r\nconst resolveBufferImage = buffer => {\r\n  const format = guessFormat(buffer);\r\n\r\n  if (format) {\r\n    return new Promise(resolve => resolve(getImage(buffer, format)));\r\n  }\r\n};\r\n\r\nconst getImageFormat = body => {\r\n  const isPng =\r\n    body[0] === 137 &&\r\n    body[1] === 80 &&\r\n    body[2] === 78 &&\r\n    body[3] === 71 &&\r\n    body[4] === 13 &&\r\n    body[5] === 10 &&\r\n    body[6] === 26 &&\r\n    body[7] === 10;\r\n\r\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\r\n\r\n  let extension = '';\r\n  if (isPng) {\r\n    extension = 'png';\r\n  } else if (isJpg) {\r\n    extension = 'jpg';\r\n  } else {\r\n    throw new Error('Not valid image extension');\r\n  }\r\n\r\n  return extension;\r\n};\r\n\r\nconst resolveImageFromUrl = async (src, options) => {\r\n  const { uri, body, headers, method = 'GET' } = src;\r\n\r\n  const data =\r\n    !BROWSER && getAbsoluteLocalPath(uri)\r\n      ? await fetchLocalFile(uri, options)\r\n      : await fetchRemoteFile(uri, { body, headers, method });\r\n\r\n  const extension = getImageFormat(data);\r\n\r\n  return getImage(data, extension);\r\n};\r\n\r\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\r\n  const cacheKey = src.data ? src.data.toString() : src.uri;\r\n\r\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\r\n    return IMAGE_CACHE.get(cacheKey);\r\n  }\r\n\r\n  let image;\r\n  if (isCompatibleBase64(src)) {\r\n    image = resolveBase64Image(src);\r\n  } else if (Buffer.isBuffer(src)) {\r\n    image = resolveBufferImage(src);\r\n  } else if (typeof src === 'object' && src.data) {\r\n    image = resolveImageFromData(src);\r\n  } else {\r\n    image = resolveImageFromUrl(src, options);\r\n  }\r\n\r\n  if (!image) {\r\n    throw new Error('Cannot resolve image');\r\n  }\r\n\r\n  if (cache) {\r\n    IMAGE_CACHE.set(cacheKey, image);\r\n  }\r\n\r\n  return image;\r\n};\r\n","/* eslint-disable no-cond-assign */\r\nimport emojiRegex from 'emoji-regex';\r\nimport Font from '../font';\r\nimport { resolveImage } from '../utils/image';\r\n\r\n// Caches emoji images data\r\nconst emojis = {};\r\nconst regex = emojiRegex();\r\n\r\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\r\n\r\n// Returns a function to be able to mock resolveImage.\r\nconst makeFetchEmojiImage = () => reflect(resolveImage);\r\n\r\n/**\r\n * When an emoji as no color, it might still have 2 parts,\r\n * the canonical emoji and an empty string.\r\n * ex.\r\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\r\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\r\n *\r\n * The empty string needs to be removed otherwise the generated\r\n * url will be incorect.\r\n */\r\nconst _removeNoColor = x => x !== '️';\r\n\r\nconst getCodePoints = string =>\r\n  Array.from(string)\r\n    .filter(_removeNoColor)\r\n    .map(char => char.codePointAt(0).toString(16))\r\n    .join('-');\r\n\r\nconst buildEmojiUrl = emoji => {\r\n  const { url, format } = Font.getEmojiSource();\r\n  return `${url}${getCodePoints(emoji)}.${format}`;\r\n};\r\n\r\nexport const fetchEmojis = string => {\r\n  const emojiSource = Font.getEmojiSource();\r\n\r\n  if (!emojiSource || !emojiSource.url) return [];\r\n\r\n  const promises = [];\r\n\r\n  let match;\r\n  while ((match = regex.exec(string))) {\r\n    const emoji = match[0];\r\n\r\n    if (!emojis[emoji] || emojis[emoji].loading) {\r\n      const emojiUrl = buildEmojiUrl(emoji);\r\n\r\n      emojis[emoji] = { loading: true };\r\n      const fetchEmojiImage = makeFetchEmojiImage();\r\n      promises.push(\r\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\r\n          emojis[emoji].loading = false;\r\n          emojis[emoji].data = image.data;\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  return promises;\r\n};\r\n\r\nexport const embedEmojis = fragments => {\r\n  const result = [];\r\n\r\n  for (let i = 0; i < fragments.length; i++) {\r\n    const fragment = fragments[i];\r\n\r\n    let match;\r\n    let lastIndex = 0;\r\n\r\n    while ((match = regex.exec(fragment.string))) {\r\n      const index = match.index;\r\n      const emoji = match[0];\r\n      const emojiSize = fragment.attributes.fontSize;\r\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\r\n\r\n      // If emoji image was found, we create a new fragment with the\r\n      // correct attachment and object substitution character;\r\n      if (emojis[emoji] && emojis[emoji].data) {\r\n        result.push({\r\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\r\n          attributes: {\r\n            ...fragment.attributes,\r\n            attachment: {\r\n              width: emojiSize,\r\n              height: emojiSize,\r\n              yOffset: Math.floor(emojiSize * 0.1),\r\n              image: emojis[emoji].data,\r\n            },\r\n          },\r\n        });\r\n      } else {\r\n        // If no emoji data, we just replace the emoji with a nodef char\r\n        result.push({\r\n          string: chunk.replace(match, String.fromCharCode(0)),\r\n          attributes: fragment.attributes,\r\n        });\r\n      }\r\n\r\n      lastIndex = index + emoji.length;\r\n    }\r\n\r\n    if (lastIndex < fragment.string.length) {\r\n      result.push({\r\n        string: fragment.string.slice(lastIndex),\r\n        attributes: fragment.attributes,\r\n      });\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n","const IGNORABLE_CODEPOINTS = [\r\n  8232, // LINE_SEPARATOR\r\n  8233, // PARAGRAPH_SEPARATOR\r\n];\r\n\r\nconst buildSubsetForFont = font =>\r\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\r\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\r\n      return acc;\r\n    }\r\n    return [...acc, String.fromCharCode(codePoint)];\r\n  }, []);\r\n\r\nexport const ignoreChars = fragments =>\r\n  fragments.map(fragment => {\r\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\r\n    const subsetRegex = new RegExp(charSubset.join('|'));\r\n\r\n    return {\r\n      string: fragment.string.replace(subsetRegex, ''),\r\n      attributes: fragment.attributes,\r\n    };\r\n  });\r\n","import { isNil, propEq, prop, complement, compose } from 'ramda';\r\nimport AttributedString from '@react-pdf/textkit/attributedString';\r\n\r\nimport Font from '../font';\r\nimport { embedEmojis } from './emoji';\r\nimport { ignoreChars } from './ignorableChars';\r\n\r\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\r\n\r\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\r\n\r\nconst isImage = propEq('name', 'Image');\r\n\r\nconst isTextInstance = compose(\r\n  complement(isNil),\r\n  prop('value'),\r\n);\r\n\r\nconst transformText = (text, transformation) => {\r\n  switch (transformation) {\r\n    case 'uppercase':\r\n      return text.toUpperCase();\r\n    case 'lowercase':\r\n      return text.toLowerCase();\r\n    case 'capitalize':\r\n      return capitalize(text);\r\n    default:\r\n      return text;\r\n  }\r\n};\r\n\r\nexport const getFragments = instance => {\r\n  if (!instance) return [{ string: '' }];\r\n\r\n  let fragments = [];\r\n  const {\r\n    color = 'black',\r\n    backgroundColor,\r\n    fontFamily = 'Helvetica',\r\n    fontWeight,\r\n    fontStyle,\r\n    fontSize = 18,\r\n    textAlign = 'left',\r\n    lineHeight,\r\n    textDecoration,\r\n    textDecorationColor,\r\n    textDecorationStyle,\r\n    textTransform,\r\n    letterSpacing,\r\n    textIndent,\r\n    opacity,\r\n  } = instance.style;\r\n\r\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\r\n  const font = obj ? obj.data : fontFamily;\r\n  const attributes = {\r\n    font,\r\n    color,\r\n    opacity,\r\n    fontSize,\r\n    backgroundColor,\r\n    align: textAlign,\r\n    indent: textIndent,\r\n    link: instance.src,\r\n    characterSpacing: letterSpacing,\r\n    underlineStyle: textDecorationStyle,\r\n    underline: textDecoration === 'underline',\r\n    underlineColor: textDecorationColor || color,\r\n    strike: textDecoration === 'line-through',\r\n    strikeStyle: textDecorationStyle,\r\n    strikeColor: textDecorationColor || color,\r\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\r\n  };\r\n\r\n  instance.children.forEach(child => {\r\n    if (isImage(child)) {\r\n      fragments.push({\r\n        string: String.fromCharCode(0xfffc),\r\n        attributes: {\r\n          ...attributes,\r\n          attachment: {\r\n            width: child.style.width || fontSize,\r\n            height: child.style.height || fontSize,\r\n            image: child.image.data,\r\n          },\r\n        },\r\n      });\r\n    } else if (isTextInstance(child)) {\r\n      fragments.push({\r\n        string: transformText(child.value, textTransform),\r\n        attributes,\r\n      });\r\n    } else {\r\n      if (child) {\r\n        fragments.push(...getFragments(child));\r\n      }\r\n    }\r\n  });\r\n\r\n  for (const preprocessor of PREPROCESSORS) {\r\n    fragments = preprocessor(fragments);\r\n  }\r\n\r\n  return fragments;\r\n};\r\n\r\nexport const getAttributedString = instance => {\r\n  return AttributedString.fromFragments(getFragments(instance));\r\n};\r\n","import Yoga from 'yoga-layout';\r\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\r\nimport AttributedString from '@react-pdf/textkit/attributedString';\r\n\r\nimport Base from './Base';\r\nimport Font from '../font';\r\nimport layout from '../layout';\r\nimport { getURL } from '../utils/url';\r\nimport { getAttributedString } from '../utils/attributedString';\r\n\r\nclass Text extends Base {\r\n  static defaultProps = {\r\n    wrap: true,\r\n    widows: 2,\r\n    orphans: 2,\r\n  };\r\n\r\n  constructor(root, props) {\r\n    super(root, props);\r\n\r\n    this.start = 0;\r\n    this.end = 0;\r\n\r\n    this.blocks = null;\r\n    this.computed = false;\r\n    this.attributedString = null;\r\n    this.layoutOptions = {\r\n      hyphenationPenalty: props.hyphenationPenalty,\r\n      hyphenationCallback: Font.getHyphenationCallback(),\r\n      shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\r\n    };\r\n\r\n    this.layout.setMeasureFunc(this.measureText.bind(this));\r\n  }\r\n\r\n  get name() {\r\n    return 'Text';\r\n  }\r\n\r\n  get src() {\r\n    return getURL(this.props.src || this.props.href);\r\n  }\r\n\r\n  get lines() {\r\n    if (!this.blocks) return [];\r\n\r\n    return this.blocks\r\n      .reduce((acc, block) => [...acc, ...block], [])\r\n      .splice(this.start, this.end);\r\n  }\r\n\r\n  get linesHeight() {\r\n    if (!this.blocks) return -1;\r\n    return this.lines.reduce((acc, line) => acc + line.box.height, 0);\r\n  }\r\n\r\n  get linesWidth() {\r\n    if (!this.blocks) return -1;\r\n    return Math.max(\r\n      ...this.lines.map(line => AttributedString.advanceWidth(line)),\r\n    );\r\n  }\r\n\r\n  appendChild(child) {\r\n    if (child) {\r\n      child.parent = this;\r\n      this.children.push(child);\r\n      this.computed = false;\r\n      this.attributedString = null;\r\n      this.markDirty();\r\n    }\r\n  }\r\n\r\n  removeChild(child) {\r\n    const index = this.children.indexOf(child);\r\n\r\n    if (index !== -1) {\r\n      child.parent = null;\r\n      this.children.splice(index, 1);\r\n      this.computed = false;\r\n      this.attributedString = null;\r\n      this.markDirty();\r\n\r\n      child.cleanup();\r\n    }\r\n  }\r\n\r\n  lineIndexAtHeight(height) {\r\n    let counter = 0;\r\n\r\n    for (let i = 0; i < this.lines.length; i++) {\r\n      const line = this.lines[i];\r\n      if (counter + line.box.height > height) return i;\r\n      counter += line.box.height;\r\n    }\r\n\r\n    return this.lines.length;\r\n  }\r\n\r\n  heightAtLineIndex(index) {\r\n    let counter = 0;\r\n\r\n    for (let i = 0; i < index; i++) {\r\n      const line = this.lines[i];\r\n      counter += line.box.height;\r\n    }\r\n\r\n    return counter;\r\n  }\r\n\r\n  layoutText(width, height) {\r\n    this.attributedString = getAttributedString(this);\r\n\r\n    // Text layout is expensive. That's why we ensure to only do it once\r\n    // (except dynamic nodes. Those change content and needs to relayout every time)\r\n    if (!this.blocks || this.props.render) {\r\n      // Do the actual text layout.\r\n      /// If height null or NaN, we take some liberty on layout height\r\n      const container = {\r\n        x: 0,\r\n        y: 0,\r\n        width,\r\n        height: height || Infinity,\r\n        maxLines: this.style.maxLines,\r\n        truncateMode: this.style.textOverflow,\r\n      };\r\n      this.blocks = layout(\r\n        this.attributedString,\r\n        container,\r\n        this.layoutOptions,\r\n      );\r\n    }\r\n\r\n    // Get the total amount of rendered lines\r\n    const linesCount = this.blocks.reduce((acc, b) => acc + b.length, 0);\r\n\r\n    this.end = linesCount + 1;\r\n    this.computed = true;\r\n  }\r\n\r\n  measureText(width, widthMode, height, heightMode) {\r\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\r\n      this.layoutText(width, height);\r\n\r\n      return { height: this.linesHeight };\r\n    }\r\n\r\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\r\n      this.layoutText(width, height);\r\n\r\n      return {\r\n        height: this.linesHeight,\r\n        width: Math.min(width, this.linesWidth),\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  resolveStyles() {\r\n    const styles = super.resolveStyles();\r\n\r\n    // Inherit relative positioning for inline childs\r\n    if (\r\n      this.parent &&\r\n      this.parent.name === 'Text' &&\r\n      this.parent.style.position === 'relative'\r\n    ) {\r\n      styles.top = styles.top || this.parent.style.top;\r\n      styles.bottom = styles.bottom || this.parent.style.bottom;\r\n      styles.position = styles.position || 'relative';\r\n    }\r\n\r\n    // Apply default link styles\r\n    if (this.src) {\r\n      styles.color = styles.color || 'blue';\r\n      styles.textDecoration = styles.textDecoration || 'underline';\r\n    }\r\n\r\n    return styles;\r\n  }\r\n\r\n  wrapHeight(height) {\r\n    const { orphans, widows } = this.props;\r\n    const linesQuantity = this.lines.length;\r\n    const sliceHeight = height - this.paddingTop;\r\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\r\n\r\n    if (linesQuantity < orphans) {\r\n      return height;\r\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\r\n      return 0;\r\n    } else if (linesQuantity === orphans + widows) {\r\n      return this.heightAtLineIndex(orphans);\r\n    } else if (linesQuantity - slicedLine < widows) {\r\n      return height - this.heightAtLineIndex(widows - 1);\r\n    }\r\n\r\n    return height;\r\n  }\r\n\r\n  onNodeSplit(height, clone) {\r\n    const wrapHeight = this.wrapHeight(height);\r\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\r\n\r\n    clone.marginTop = 0;\r\n    clone.paddingTop = 0;\r\n    clone.start = slicedLineIndex;\r\n    clone.attributedString = this.attributedString;\r\n\r\n    this.height = wrapHeight;\r\n    this.marginBottom = 0;\r\n    this.paddingBottom = 0;\r\n    this.end = slicedLineIndex;\r\n  }\r\n\r\n  clone() {\r\n    const text = super.clone();\r\n\r\n    text.layoutEngine = this.layoutEngine;\r\n\r\n    // Save calculated layout for non-dynamic clone elements\r\n    if (this.blocks && !this.props.render) {\r\n      text.blocks = [...this.blocks];\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  renderText() {\r\n    const { top, left } = this.getAbsoluteLayout();\r\n    const initialY = this.lines[0] ? this.lines[0].box.y : 0;\r\n\r\n    // We translate lines based on Yoga container\r\n    this.root.instance.save();\r\n    this.root.instance.translate(\r\n      left + this.padding.left,\r\n      top + this.padding.top - initialY,\r\n    );\r\n\r\n    // Perform actual text rendering on document\r\n    PDFRenderer.render(this.root.instance, [this.lines]);\r\n\r\n    this.root.instance.restore();\r\n  }\r\n\r\n  async render() {\r\n    this.root.instance.save();\r\n    this.applyTransformations();\r\n    this.drawBackgroundColor();\r\n    this.drawBorders();\r\n\r\n    // Calculate text layout if needed\r\n    // This can happen if measureText was not called by Yoga\r\n    if (!this.computed) {\r\n      this.layoutText(\r\n        this.width - this.padding.left - this.padding.right,\r\n        this.height - this.padding.top - this.padding.bottom,\r\n      );\r\n    }\r\n\r\n    this.renderText();\r\n\r\n    if (this.props.debug) {\r\n      this.debug();\r\n    }\r\n\r\n    this.root.instance.restore();\r\n  }\r\n}\r\n\r\nexport default Text;\r\n","import Base from './Base';\r\nimport { getURL } from '../utils/url';\r\n\r\nclass Link extends Base {\r\n  get name() {\r\n    return 'Link';\r\n  }\r\n\r\n  get src() {\r\n    return getURL(this.props.src || this.props.href);\r\n  }\r\n\r\n  async render() {\r\n    const { top, left, width, height } = this.getAbsoluteLayout();\r\n    this.root.instance.link(left, top, width, height, this.src);\r\n    await this.renderChildren();\r\n    if (this.props.debug) this.debug();\r\n  }\r\n}\r\n\r\nexport default Link;\r\n","import Base from './Base';\r\n\r\nclass Note extends Base {\r\n  static defaultProps = {};\r\n\r\n  get name() {\r\n    return 'Note';\r\n  }\r\n\r\n  appendChild(child) {\r\n    if (child.name !== 'TextInstance') {\r\n      throw new Error('Note only accepts string children');\r\n    }\r\n\r\n    if (child) {\r\n      child.parent = this;\r\n      this.children.push(child);\r\n    }\r\n  }\r\n\r\n  removeChild(child) {\r\n    const index = this.children.indexOf(child);\r\n\r\n    if (index !== -1) {\r\n      child.parent = null;\r\n      this.children.splice(index, 1);\r\n    }\r\n\r\n    child.cleanup();\r\n  }\r\n\r\n  applyProps() {\r\n    super.applyProps();\r\n    this.height = 0;\r\n    this.width = 0;\r\n  }\r\n\r\n  async render() {\r\n    const { top, left } = this.getAbsoluteLayout();\r\n    const value = this.children[0] ? this.children[0].value : '';\r\n\r\n    this.root.instance.note(left, top, 0, 0, value);\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import matchPercent from './matchPercent';\r\n\r\nconst isNumeric = n => {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n};\r\n\r\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\r\n  const cr = cw / ch;\r\n  const ir = iw / ih;\r\n\r\n  const pxp = matchPercent(px);\r\n  const pyp = matchPercent(py);\r\n  const pxv = pxp ? pxp.percent : 0.5;\r\n  const pyv = pyp ? pyp.percent : 0.5;\r\n\r\n  if (cr > ir) {\r\n    const height = ch;\r\n    const width = height * ir;\r\n    const yOffset = isNumeric(py) ? py : 0;\r\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\r\n\r\n    return { width, height, xOffset, yOffset };\r\n  } else {\r\n    const width = cw;\r\n    const height = width / ir;\r\n    const xOffset = isNumeric(px) ? px : 0;\r\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\r\n\r\n    return { width, height, yOffset, xOffset };\r\n  }\r\n};\r\n\r\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\r\n  const width = iw;\r\n  const height = ih;\r\n  const pxp = matchPercent(px);\r\n  const pyp = matchPercent(py);\r\n  const pxv = pxp ? pxp.percent : 0.5;\r\n  const pyv = pyp ? pyp.percent : 0.5;\r\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\r\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\r\n\r\n  return { width, height, xOffset, yOffset };\r\n};\r\n\r\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\r\n  const ir = iw / ih;\r\n  const cr = cw / ch;\r\n\r\n  const pxp = matchPercent(px);\r\n  const pyp = matchPercent(py);\r\n  const pxv = pxp ? pxp.percent : 0.5;\r\n  const pyv = pyp ? pyp.percent : 0.5;\r\n\r\n  if (cr > ir) {\r\n    const width = cw;\r\n    const height = width / ir;\r\n    const xOffset = isNumeric(px) ? px : 0;\r\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\r\n    return { width, height, yOffset, xOffset };\r\n  } else {\r\n    const height = ch;\r\n    const width = height * ir;\r\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\r\n    const yOffset = isNumeric(py) ? py : 0;\r\n    return { width, height, xOffset, yOffset };\r\n  }\r\n};\r\n\r\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\r\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\r\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\r\n\r\n  return containDimension.width < noneDimension.width\r\n    ? containDimension\r\n    : noneDimension;\r\n};\r\n\r\nconst applyFillObjectFit = (cw, ch, px, py) => {\r\n  return {\r\n    width: cw,\r\n    height: ch,\r\n    xOffset: matchPercent(px) ? 0 : px || 0,\r\n    yOffset: matchPercent(py) ? 0 : py || 0,\r\n  };\r\n};\r\n\r\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\r\n  switch (type) {\r\n    case 'contain':\r\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\r\n    case 'cover':\r\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\r\n    case 'none':\r\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\r\n    case 'scale-down':\r\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\r\n    default:\r\n      return applyFillObjectFit(cw, ch, px, py);\r\n  }\r\n};\r\n","import Yoga from 'yoga-layout';\r\n\r\nimport Base from './Base';\r\nimport warning from '../utils/warning';\r\nimport { resolveImage } from '../utils/image';\r\nimport { resolveObjectFit } from '../utils/objectFit';\r\n\r\nconst SAFETY_HEIGHT = 10;\r\n\r\nclass Image extends Base {\r\n  static defaultProps = {\r\n    wrap: false,\r\n    cache: true,\r\n    style: {},\r\n  };\r\n\r\n  constructor(root, props) {\r\n    super(root, props);\r\n\r\n    this.image = null;\r\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\r\n  }\r\n\r\n  get name() {\r\n    return 'Image';\r\n  }\r\n\r\n  shouldGrow() {\r\n    return !!this.style.flexGrow;\r\n  }\r\n\r\n  measureImage(width, widthMode, height, heightMode) {\r\n    const imageMargin = this.margin;\r\n    const pagePadding = this.page.padding;\r\n    const pageArea = this.page.isAutoHeight\r\n      ? Infinity\r\n      : this.page.size.height -\r\n        pagePadding.top -\r\n        pagePadding.bottom -\r\n        imageMargin.top -\r\n        imageMargin.bottom -\r\n        SAFETY_HEIGHT;\r\n\r\n    // Skip measure if image data not present yet\r\n    if (!this.image) return { width: 0, height: 0 };\r\n\r\n    if (\r\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\r\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\r\n    ) {\r\n      const scaledHeight = width / this.ratio;\r\n      return { height: Math.min(pageArea, scaledHeight) };\r\n    }\r\n\r\n    if (\r\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\r\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\r\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\r\n    ) {\r\n      return { width: Math.min(height * this.ratio, width) };\r\n    }\r\n\r\n    if (\r\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\r\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\r\n    ) {\r\n      const scaledHeight = width / this.ratio;\r\n      return { height: Math.min(height, pageArea, scaledHeight) };\r\n    }\r\n\r\n    if (\r\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\r\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\r\n    ) {\r\n      if (this.ratio > 1) {\r\n        return {\r\n          width: width,\r\n          height: Math.min(width / this.ratio, height),\r\n        };\r\n      } else {\r\n        return {\r\n          width: Math.min(height * this.ratio, width),\r\n          height: height,\r\n        };\r\n      }\r\n    }\r\n\r\n    return { height, width };\r\n  }\r\n\r\n  get ratio() {\r\n    return this.image.data ? this.image.width / this.image.height : 1;\r\n  }\r\n\r\n  get src() {\r\n    const src = this.props.src || this.props.source;\r\n    return typeof src === 'string' ? { uri: src } : src;\r\n  }\r\n\r\n  async fetch() {\r\n    const { cache, safePath, allowDangerousPaths } = this.props;\r\n\r\n    if (!this.src) {\r\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.image = await resolveImage(this.src, {\r\n        cache,\r\n        safePath,\r\n        allowDangerousPaths,\r\n      });\r\n    } catch (e) {\r\n      this.image = { width: 0, height: 0 };\r\n      console.warn(e.message);\r\n    }\r\n  }\r\n\r\n  clone() {\r\n    const clone = super.clone();\r\n    clone.image = this.image;\r\n    return clone;\r\n  }\r\n\r\n  async onAppendDynamically() {\r\n    await this.fetch();\r\n  }\r\n\r\n  renderImage() {\r\n    const padding = this.padding;\r\n    const { left, top } = this.getAbsoluteLayout();\r\n    const { opacity, objectPositionX, objectPositionY } = this.style;\r\n\r\n    this.root.instance.save();\r\n\r\n    // Clip path to keep image inside border radius\r\n    this.clip();\r\n\r\n    if (this.image.data) {\r\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\r\n        this.style.objectFit,\r\n        this.width - padding.left - padding.right,\r\n        this.height - padding.top - padding.bottom,\r\n        this.image.width,\r\n        this.image.height,\r\n        objectPositionX,\r\n        objectPositionY,\r\n      );\r\n\r\n      if (width !== 0 && height !== 0) {\r\n        this.root.instance\r\n          .fillOpacity(opacity)\r\n          .image(\r\n            this.image.data,\r\n            left + padding.left + xOffset,\r\n            top + padding.top + yOffset,\r\n            { width, height },\r\n          );\r\n      } else {\r\n        warning(\r\n          false,\r\n          `Image with src '${\r\n            this.props.src\r\n          }' skipped due to invalid dimensions`,\r\n        );\r\n      }\r\n    }\r\n\r\n    this.root.instance.restore();\r\n  }\r\n\r\n  async render() {\r\n    this.root.instance.save();\r\n    this.applyTransformations();\r\n    this.drawBackgroundColor();\r\n    this.renderImage();\r\n    this.drawBorders();\r\n\r\n    if (this.props.debug) {\r\n      this.debug();\r\n    }\r\n\r\n    this.root.instance.restore();\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import wrapPages from 'page-wrapping';\r\n\r\nimport Font from '../font';\r\nimport { fetchEmojis } from '../utils/emoji';\r\n\r\nclass Document {\r\n  static defaultProps = {\r\n    author: null,\r\n    keywords: null,\r\n    subject: null,\r\n    title: null,\r\n  };\r\n\r\n  constructor(root, props) {\r\n    this.root = root;\r\n    this.style = {};\r\n    this.props = props;\r\n    this.children = [];\r\n    this.subpages = [];\r\n  }\r\n\r\n  get name() {\r\n    return 'Document';\r\n  }\r\n\r\n  appendChild(child) {\r\n    child.parent = this;\r\n    this.children.push(child);\r\n  }\r\n\r\n  removeChild(child) {\r\n    const index = this.children.indexOf(child);\r\n\r\n    if (index !== -1) {\r\n      child.parent = null;\r\n      this.children.splice(index, 1);\r\n    }\r\n\r\n    child.cleanup();\r\n  }\r\n\r\n  addMetaData() {\r\n    const { title, author, subject, keywords, creator, producer } = this.props;\r\n\r\n    // The object keys need to start with a capital letter by the PDF spec\r\n    if (title) this.root.instance.info.Title = title;\r\n    if (author) this.root.instance.info.Author = author;\r\n    if (subject) this.root.instance.info.Subject = subject;\r\n    if (keywords) this.root.instance.info.Keywords = keywords;\r\n\r\n    this.root.instance.info.Creator = creator || 'react-pdf';\r\n    this.root.instance.info.Producer = producer || 'react-pdf';\r\n  }\r\n\r\n  async loadFonts() {\r\n    const promises = [];\r\n    const listToExplore = this.children.slice(0);\r\n\r\n    while (listToExplore.length > 0) {\r\n      const node = listToExplore.shift();\r\n\r\n      if (node.style && node.style.fontFamily) {\r\n        promises.push(Font.load(node.style, this.root.instance));\r\n      }\r\n\r\n      if (node.children) {\r\n        node.children.forEach(childNode => {\r\n          listToExplore.push(childNode);\r\n        });\r\n      }\r\n    }\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  async loadEmojis() {\r\n    const promises = [];\r\n    const listToExplore = this.children.slice(0);\r\n\r\n    while (listToExplore.length > 0) {\r\n      const node = listToExplore.shift();\r\n\r\n      if (typeof node === 'string') {\r\n        promises.push(...fetchEmojis(node));\r\n      } else if (typeof node.value === 'string') {\r\n        promises.push(...fetchEmojis(node.value));\r\n      } else if (node.children) {\r\n        node.children.forEach(childNode => {\r\n          listToExplore.push(childNode);\r\n        });\r\n      }\r\n    }\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  async loadImages() {\r\n    const promises = [];\r\n    const listToExplore = this.children.slice(0);\r\n\r\n    while (listToExplore.length > 0) {\r\n      const node = listToExplore.shift();\r\n\r\n      if (node.name === 'Image') {\r\n        promises.push(node.fetch());\r\n      }\r\n\r\n      if (node.children) {\r\n        node.children.forEach(childNode => {\r\n          listToExplore.push(childNode);\r\n        });\r\n      }\r\n    }\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  async loadAssets() {\r\n    await Promise.all([this.loadFonts(), this.loadImages(), this.loadEmojis()]);\r\n  }\r\n\r\n  applyProps() {\r\n    this.children.forEach(child => child.applyProps());\r\n  }\r\n\r\n  update(newProps) {\r\n    this.props = newProps;\r\n  }\r\n\r\n  cleanup() {\r\n    this.subpages.forEach(p => p.cleanup());\r\n  }\r\n\r\n  finish() {\r\n    this.children.forEach(c => c.cleanup());\r\n  }\r\n\r\n  getLayoutData() {\r\n    return {\r\n      type: this.name,\r\n      children: this.subpages.map(c => c.getLayoutData()),\r\n    };\r\n  }\r\n\r\n  async wrapPages() {\r\n    let pageCount = 1;\r\n    const pages = [];\r\n\r\n    for (const page of this.children) {\r\n      if (page.wrap) {\r\n        const wrapArea = page.isAutoHeight\r\n          ? Infinity\r\n          : page.size.height - (page.style.paddingBottom || 0);\r\n\r\n        const subpages = await wrapPages(page, wrapArea, pageCount);\r\n\r\n        pageCount += subpages.length;\r\n\r\n        pages.push(...subpages);\r\n      } else {\r\n        pages.push(page);\r\n      }\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  async renderPages() {\r\n    this.subpages = await this.wrapPages();\r\n\r\n    for (let j = 0; j < this.subpages.length; j++) {\r\n      // Update dynamic text nodes with total pages info\r\n      this.subpages[j].renderDynamicNodes(\r\n        {\r\n          pageNumber: j + 1,\r\n          totalPages: this.subpages.length,\r\n        },\r\n        node => node.name === 'Text',\r\n      );\r\n      await this.subpages[j].render();\r\n    }\r\n\r\n    return this.subpages;\r\n  }\r\n\r\n  async render() {\r\n    try {\r\n      this.addMetaData();\r\n      this.applyProps();\r\n      await this.loadAssets();\r\n      await this.renderPages();\r\n      this.root.instance.end();\r\n      Font.reset();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","export const availableMethods = [\r\n  'dash',\r\n  'clip',\r\n  'save',\r\n  'path',\r\n  'fill',\r\n  'font',\r\n  'text',\r\n  'rect',\r\n  'scale',\r\n  'moveTo',\r\n  'lineTo',\r\n  'stroke',\r\n  'rotate',\r\n  'circle',\r\n  'lineCap',\r\n  'opacity',\r\n  'ellipse',\r\n  'polygon',\r\n  'restore',\r\n  'lineJoin',\r\n  'fontSize',\r\n  'fillColor',\r\n  'lineWidth',\r\n  'translate',\r\n  'miterLimit',\r\n  'strokeColor',\r\n  'fillOpacity',\r\n  'roundedRect',\r\n  'strokeOpacity',\r\n  'bezierCurveTo',\r\n  'quadraticCurveTo',\r\n  'linearGradient',\r\n  'radialGradient',\r\n];\r\n\r\nconst painter = function(instance) {\r\n  const p = availableMethods.reduce(\r\n    (acc, prop) => ({\r\n      ...acc,\r\n      [prop]: (...args) => {\r\n        instance[prop](...args);\r\n        return p;\r\n      },\r\n    }),\r\n    {},\r\n  );\r\n\r\n  return p;\r\n};\r\n\r\nexport default painter;\r\n","import Base from './Base';\r\n\r\nimport painter from '../utils/painter';\r\nimport warning from '../utils/warning';\r\n\r\nclass Canvas extends Base {\r\n  static defaultProps = {\r\n    style: {},\r\n    wrap: false,\r\n  };\r\n\r\n  get name() {\r\n    return 'Canvas';\r\n  }\r\n\r\n  async render() {\r\n    const { left, top, width, height } = this.getAbsoluteLayout();\r\n\r\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\r\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\r\n\r\n    warning(\r\n      availableWidth && availableHeight,\r\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\r\n    );\r\n\r\n    this.root.instance.save();\r\n    this.applyTransformations();\r\n    this.drawBackgroundColor();\r\n    this.drawBorders();\r\n    this.clip();\r\n\r\n    this.root.instance.translate(\r\n      left + this.paddingLeft,\r\n      top + this.paddingTop,\r\n    );\r\n\r\n    if (this.props.paint) {\r\n      this.props.paint(\r\n        painter(this.root.instance),\r\n        availableWidth,\r\n        availableHeight,\r\n      );\r\n    }\r\n\r\n    this.root.instance.restore();\r\n\r\n    if (this.props.debug) {\r\n      this.debug();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import Root from './Root';\r\nimport Page from './Page';\r\nimport View from './View';\r\nimport Text from './Text';\r\nimport Link from './Link';\r\nimport Note from './Note';\r\nimport Image from './Image';\r\nimport Document from './Document';\r\nimport Canvas from './Canvas';\r\nimport TextInstance from './TextInstance';\r\n\r\nconst constructors = {\r\n  ROOT: Root,\r\n  PAGE: Page,\r\n  TEXT: Text,\r\n  LINK: Link,\r\n  VIEW: View,\r\n  NOTE: Note,\r\n  IMAGE: Image,\r\n  CANVAS: Canvas,\r\n  DOCUMENT: Document,\r\n  TEXT_INSTANCE: TextInstance,\r\n};\r\n\r\nfunction createInstance(element, root) {\r\n  const { type, props = {} } = element;\r\n\r\n  if (constructors[type]) {\r\n    return new constructors[type](root, props);\r\n  }\r\n\r\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\r\n}\r\n\r\nexport { createInstance };\r\n","const propsEqual = (a, b) => {\r\n  const oldPropsKeys = Object.keys(a);\r\n  const newPropsKeys = Object.keys(b);\r\n\r\n  if (oldPropsKeys.length !== newPropsKeys.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < oldPropsKeys.length; i++) {\r\n    const propName = oldPropsKeys[i];\r\n\r\n    if (propName === 'render') {\r\n      if (!a[propName] !== !b[propName]) {\r\n        return false;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (propName !== 'children' && a[propName] !== b[propName]) {\r\n      if (\r\n        typeof a[propName] === 'object' &&\r\n        typeof b[propName] === 'object' &&\r\n        propsEqual(a[propName], b[propName])\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      propName === 'children' &&\r\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\r\n    ) {\r\n      return a[propName] === b[propName];\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport default propsEqual;\r\n","'use strict';\r\n\r\nimport ReactFiberReconciler from 'react-reconciler';\r\nimport {\r\n  unstable_scheduleCallback as schedulePassiveEffects,\r\n  unstable_cancelCallback as cancelPassiveEffects\r\n} from 'scheduler';\r\n\r\nimport { createInstance } from './elements';\r\nimport propsEqual from './utils/propsEqual';\r\n\r\nconst emptyObject = {};\r\n\r\n// If the Link has a strign child or render prop, substitute the instance by a Text,\r\n// that will ultimately render the inline Link via the textkit PDF renderer.\r\nconst shouldReplaceLink = (type, props) =>\r\n  type === 'LINK' &&\r\n  (typeof props.children === 'string' ||\r\n    typeof props.children === 'number' ||\r\n    Array.isArray(props.children) ||\r\n    props.render);\r\n\r\nconst PDFRenderer = ReactFiberReconciler({\r\n  schedulePassiveEffects,\r\n  cancelPassiveEffects,\r\n  supportsMutation: true,\r\n  appendInitialChild(parentInstance, child) {\r\n    parentInstance.appendChild(child);\r\n  },\r\n\r\n  createInstance(type, props, internalInstanceHandle) {\r\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\r\n    return createInstance(\r\n      { type: instanceType, props },\r\n      internalInstanceHandle,\r\n    );\r\n  },\r\n\r\n  createTextInstance(text, rootContainerInstance) {\r\n    return createInstance(\r\n      { type: 'TEXT_INSTANCE', props: text },\r\n      rootContainerInstance,\r\n    );\r\n  },\r\n\r\n  finalizeInitialChildren(element, type, props) {\r\n    return false;\r\n  },\r\n\r\n  getPublicInstance(instance) {\r\n    return instance;\r\n  },\r\n\r\n  prepareForCommit() {\r\n    // Noop\r\n  },\r\n\r\n  prepareUpdate(element, type, oldProps, newProps) {\r\n    return !propsEqual(oldProps, newProps);\r\n  },\r\n\r\n  resetAfterCommit() {\r\n    // Noop\r\n  },\r\n\r\n  resetTextContent(element) {\r\n    // Noop\r\n  },\r\n\r\n  getRootHostContext() {\r\n    return emptyObject;\r\n  },\r\n\r\n  getChildHostContext() {\r\n    return emptyObject;\r\n  },\r\n\r\n  shouldSetTextContent(type, props) {\r\n    return false;\r\n  },\r\n\r\n  now: Date.now,\r\n\r\n  useSyncScheduling: true,\r\n\r\n  appendChild(parentInstance, child) {\r\n    parentInstance.appendChild(child);\r\n  },\r\n\r\n  appendChildToContainer(parentInstance, child) {\r\n    parentInstance.appendChild(child);\r\n  },\r\n\r\n  insertBefore(parentInstance, child, beforeChild) {\r\n    parentInstance.appendChildBefore(child, beforeChild);\r\n  },\r\n\r\n  removeChild(parentInstance, child) {\r\n    parentInstance.removeChild(child);\r\n  },\r\n\r\n  removeChildFromContainer(parentInstance, child) {\r\n    parentInstance.removeChild(child);\r\n  },\r\n\r\n  commitTextUpdate(textInstance, oldText, newText) {\r\n    textInstance.update(newText);\r\n  },\r\n\r\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\r\n    instance.update(newProps);\r\n  },\r\n});\r\n\r\nexport default PDFRenderer;\r\n","import BlobStream from 'blob-stream';\r\nimport PDFRenderer from './renderer';\r\nimport StyleSheet from './stylesheet';\r\nimport { createInstance } from './elements';\r\nimport Font from './font';\r\nimport { version } from '../package.json';\r\n\r\nconst View = 'VIEW';\r\nconst Text = 'TEXT';\r\nconst Link = 'LINK';\r\nconst Page = 'PAGE';\r\nconst Note = 'NOTE';\r\nconst Image = 'IMAGE';\r\nconst Document = 'DOCUMENT';\r\nconst Canvas = 'CANVAS';\r\n\r\nconst pdf = input => {\r\n  const container = createInstance({ type: 'ROOT' });\r\n  const mountNode = PDFRenderer.createContainer(container);\r\n\r\n  if (input) updateContainer(input);\r\n\r\n  function callOnRender(params = {}) {\r\n    if (container.document.props.onRender) {\r\n      const layoutData = container.document.getLayoutData();\r\n      container.document.props.onRender({ ...params, layoutData });\r\n    }\r\n  }\r\n\r\n  function isDirty() {\r\n    return container.isDirty;\r\n  }\r\n\r\n  function updateContainer(doc) {\r\n    PDFRenderer.updateContainer(doc, mountNode, null);\r\n  }\r\n\r\n  async function toBlob() {\r\n    await container.render();\r\n\r\n    const stream = container.instance.pipe(BlobStream());\r\n\r\n    return new Promise((resolve, reject) => {\r\n      stream.on('finish', () => {\r\n        try {\r\n          const blob = stream.toBlob('application/pdf');\r\n\r\n          callOnRender({ blob });\r\n\r\n          resolve(blob);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      });\r\n\r\n      stream.on('error', reject);\r\n    });\r\n  }\r\n\r\n  async function toBuffer() {\r\n    await container.render();\r\n\r\n    callOnRender();\r\n\r\n    return container.instance;\r\n  }\r\n\r\n  function toString() {\r\n    let result = '';\r\n    container.render();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        container.instance.on('data', function(buffer) {\r\n          result += buffer;\r\n        });\r\n\r\n        container.instance.on('end', function() {\r\n          callOnRender({ string: result });\r\n          resolve(result);\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    isDirty,\r\n    container,\r\n    updateContainer,\r\n    toBuffer,\r\n    toBlob,\r\n    toString,\r\n  };\r\n};\r\n\r\nexport {\r\n  version,\r\n  PDFRenderer,\r\n  View,\r\n  Text,\r\n  Link,\r\n  Page,\r\n  Font,\r\n  Note,\r\n  Image,\r\n  Document,\r\n  Canvas,\r\n  StyleSheet,\r\n  createInstance,\r\n  pdf,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\n\r\nimport warning from '../src/utils/warning';\r\n\r\nimport {\r\n  pdf,\r\n  View,\r\n  Text,\r\n  Link,\r\n  Page,\r\n  Font,\r\n  Note,\r\n  Image,\r\n  Canvas,\r\n  version,\r\n  StyleSheet,\r\n  PDFRenderer,\r\n  createInstance,\r\n  Document as PDFDocument,\r\n} from './index';\r\n\r\nconst flatStyles = stylesArray =>\r\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\r\n\r\nexport const Document = ({ children, ...props }) => {\r\n  return <PDFDocument {...props}>{children}</PDFDocument>;\r\n};\r\n\r\nclass InternalBlobProvider extends React.PureComponent {\r\n  state = { blob: null, url: null, loading: true, error: null };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Create new root container for this render\r\n    this.instance = pdf();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderDocument();\r\n    this.onDocumentUpdate();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderDocument();\r\n\r\n    if (this.instance.isDirty() && !this.state.error) {\r\n      this.onDocumentUpdate();\r\n    }\r\n  }\r\n\r\n  renderDocument() {\r\n    this.instance.updateContainer(this.props.document);\r\n  }\r\n\r\n  onDocumentUpdate() {\r\n    const oldBlobUrl = this.state.url;\r\n\r\n    this.instance\r\n      .toBlob()\r\n      .then(blob => {\r\n        this.setState(\r\n          { blob, url: URL.createObjectURL(blob), loading: false },\r\n          () => URL.revokeObjectURL(oldBlobUrl),\r\n        );\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n        console.error(error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return this.props.children(this.state);\r\n  }\r\n}\r\n\r\nexport const BlobProvider = ({ document: doc, children }) => {\r\n  if (!doc) {\r\n    warning(false, 'You should pass a valid document to BlobProvider');\r\n    return null;\r\n  }\r\n\r\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\r\n};\r\n\r\nexport const PDFViewer = ({\r\n  className,\r\n  style,\r\n  children,\r\n  innerRef,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <InternalBlobProvider document={children}>\r\n      {({ url }) => (\r\n        <iframe\r\n          className={className}\r\n          ref={innerRef}\r\n          src={url}\r\n          style={Array.isArray(style) ? flatStyles(style) : style}\r\n          {...props}\r\n        />\r\n      )}\r\n    </InternalBlobProvider>\r\n  );\r\n};\r\n\r\nexport const PDFDownloadLink = ({\r\n  document: doc,\r\n  className,\r\n  style,\r\n  children,\r\n  fileName = 'document.pdf',\r\n}) => {\r\n  if (!doc) {\r\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\r\n    return null;\r\n  }\r\n\r\n  const downloadOnIE = blob => () => {\r\n    if (window.navigator.msSaveBlob) {\r\n      window.navigator.msSaveBlob(blob, fileName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InternalBlobProvider document={doc}>\r\n      {params => (\r\n        <a\r\n          className={className}\r\n          download={fileName}\r\n          href={params.url}\r\n          onClick={downloadOnIE(params.blob)}\r\n          style={Array.isArray(style) ? flatStyles(style) : style}\r\n        >\r\n          {typeof children === 'function' ? children(params) : children}\r\n        </a>\r\n      )}\r\n    </InternalBlobProvider>\r\n  );\r\n};\r\n\r\nexport {\r\n  pdf,\r\n  View,\r\n  Text,\r\n  Link,\r\n  Page,\r\n  Font,\r\n  Note,\r\n  Image,\r\n  Canvas,\r\n  version,\r\n  StyleSheet,\r\n  PDFRenderer,\r\n  createInstance,\r\n} from './index';\r\n\r\nexport default {\r\n  pdf,\r\n  View,\r\n  Text,\r\n  Link,\r\n  Page,\r\n  Font,\r\n  Note,\r\n  Image,\r\n  Canvas,\r\n  version,\r\n  Document,\r\n  PDFViewer,\r\n  StyleSheet,\r\n  PDFRenderer,\r\n  BlobProvider,\r\n  createInstance,\r\n  PDFDownloadLink,\r\n};\r\n"],"names":["warning","process","env","NODE_ENV","condition","format","undefined","Error","args","argIndex","message","replace","console","error","x","Root","isDirty","document","instance","appendChild","child","removeChild","cleanup","markDirty","finish","render","PDFDocument","autoFirstPage","this","upperFirst","value","charAt","toUpperCase","slice","matchPercent","match","exec","isPercent","parseFloat","percent","absValue","Math","abs","absPercent","YOGA_CONFIG","Yoga","Config","create","setPointScaleFactor","Node","parent","children","computed","layout","createWithConfig","push","insertChild","getChildCount","appendChildBefore","beforeChild","index","indexOf","splice","removeAllChilds","i","length","remove","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","getAbsoluteLayout","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","onAppendDynamically","forEach","c","unsetMeasureFunc","destroy","getPositionType","POSITION_TYPE_ABSOLUTE","setPositionType","POSITION_TYPE_RELATIVE","getComputedTop","EDGE_TOP","getComputedLeft","EDGE_LEFT","getComputedRight","EDGE_RIGHT","getComputedBottom","EDGE_BOTTOM","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","getComputedMargin","getComputedBorder","paddingTop","right","paddingRight","bottom","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseScalar","container","scalar","unit","parseValue","isAutoHeight","isBorderStyle","key","processBorders","matchBorderShorthand","isBoxModelStyle","processBoxModel","matchBoxModel","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","isFontWeightStyle","processFontWeight","toLowerCase","isObjectPositionStyle","processObjectPosition","matchObjectPosition","isTransformOriginStyle","processTransformOrigin","matchTransformOrigin","result","transformOffsetKeywords","hasOwnProperty","Object","prototype","styleShorthands","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","transformStyles","style","expandedStyles","propsArray","keys","resolvedStyle","verticalAlign","expandedProps","propName","call","expandStyles","resolved","flatten","input","Array","isArray","reduce","acc","s","hairlineWidth","styles","resolve","test","matchMedia","resolveMediaQueries","absoluteFillObject","position","Debug","debug","root","save","debugContent","debugPadding","debugMargin","debugText","debugOrigin","restore","transform","origin","circle","fill","stroke","roundedWidth","round","roundedHeight","fontSize","opacity","fillColor","text","max","rect","KAPPA","sqrt","clipBorderTop","ctx","rtr","rtl","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","fillBorderTop","strokeColor","lineWidth","dash","space","undash","clipBorderRight","rbr","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","clipBorderBottom","rbl","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","drawBorders","min","strokeOpacity","Clipping","ctr","cbr","cbl","ctl","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","applySingleTransformation","element","rotate","PI","getRotation","scale","translate","getMatrix","Transformations","applyTransformations","re","merge","a","b","isNil","deepMerge","objs","obj","mergeDeepWith","isFunction","compose","equals","type","inheritedProperties","Base","props","_this","constructor","defaultProps","update","newProps","applyProps","resolveStyles","toPairsIn","map","attribute","_this2","applyStyle","page","size","orientation","ownStyles","StyleSheet","inheritedStyles","pick","setter","getLayoutData","name","drawBackgroundColor","backgroundColor","fillOpacity","clone","onNodeSplit","renderChildren","wrap","break","fixed","minPresenceAhead","percentX","percentY","assign","Borders","Transform","range","steps","from","ceil","_","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","ruler","horizontalRuler","hasVerticalRuler","verticalRuler","getHorizontalSteps","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","verticalRulerSteps","renderRuler","drawHorizontalRuler","drawVerticalRuler","RULER_WIDTH","offset","hRange","step","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","Page","_size","resetMargins","rulerWidth","dimension","addDynamicChild","elements","Fragment","createInstance","renderDynamicNodes","cb","listToExplore","shift","nodeWillWrap","addPage","getPageSize","View","emojiSource","hyphenationCallback","fetchFont","src","options","fetch","response","buffer","arrayBuffer","Buffer","FontSource","fontFamily","fontStyle","fontWeight","data","loading","load","headers","body","method","fontkit","Promise","reject","open","err","Font","family","sources","register","descriptor","res","styleSources","filter","exactFit","find","leftOffset","rightOffset","lt","gt","registerEmojiSource","url","getEmojiSource","registerHyphenationCallback","callback","getHyphenationCallback","fonts","getFont","standardFonts","includes","doc","font","getRegisteredFonts","getRegisteredFontFamilies","clear","reset","emoji","hyphenation","StandardFont","PDFFont","str","encode","encoded","positions","stringIndices","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","fontCache","IGNORED_CODE_POINTS","getFontSize","pathOr","getFallbackFont","getOrCreateFont","shouldFallbackToFont","engine","layoutEngine","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","fontSubstitution","string","runs","lastFont","lastIndex","run","defaultFont","attributes","start","end","char","codePointAt","unitsPerEm","last","PROTOCOL_REGEXP","getURL","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","limit","cache","IMAGE_CACHE","get","set","fetchRemoteFile","uri","getImage","extension","resolveBufferImage","guessFormat","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","image","cacheKey","toString","lower","isValidFormat","resolveBase64Image","JSON","stringify","resolveImageFromData","emojis","regex","emojiRegex","_removeNoColor","buildEmojiUrl","join","fetchEmojis","promises","promise","emojiUrl","fetchEmojiImage","then","v","IGNORABLE_CODEPOINTS","PREPROCESSORS","fragments","fragment","charSubset","String","fromCharCode","subsetRegex","RegExp","emojiSize","chunk","attachment","yOffset","floor","isImage","propEq","isTextInstance","complement","transformText","transformation","l","getAttributedString","AttributedString","fromFragments","getFragments","color","textAlign","lineHeight","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","textIndent","align","indent","link","characterSpacing","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","preprocessor","Text","blocks","attributedString","layoutOptions","hyphenationPenalty","shrinkWhitespaceFactor","before","after","setMeasureFunc","measureText","bind","lineIndexAtHeight","counter","lines","line","box","heightAtLineIndex","layoutText","y","Infinity","maxLines","truncateMode","textOverflow","linesCount","widthMode","heightMode","MEASURE_MODE_EXACTLY","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","renderText","initialY","PDFRenderer","href","block","Link","Note","note","isNumeric","n","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","resolveObjectFit","applyCoverObjectFit","containDimension","noneDimension","applyScaleDownObjectFit","applyFillObjectFit","Image","measureImage","shouldGrow","flexGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","ratio","safePath","allowDangerousPaths","warn","_context","renderImage","objectFit","source","Document","subpages","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","childNode","all","loadEmojis","loadImages","loadAssets","p","wrapPages","pageCount","pages","wrapArea","renderPages","j","pageNumber","totalPages","availableMethods","painter","Canvas","availableWidth","availableHeight","paint","constructors","ROOT","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","emptyObject","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","appendInitialChild","parentInstance","internalInstanceHandle","shouldReplaceLink","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","propsEqual","oldPropsKeys","newPropsKeys","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","insertBefore","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","stream","pipe","BlobStream","on","blob","toBlob","toBuffer","flatStyles","stylesArray","React","InternalBlobProvider","state","componentDidMount","renderDocument","onDocumentUpdate","componentDidUpdate","oldBlobUrl","setState","URL","createObjectURL","revokeObjectURL","catch","PureComponent","BlobProvider","PDFViewer","className","innerRef","ref","PDFDownloadLink","fileName","download","onClick","window","navigator","msSaveBlob","version"],"mappings":"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"}